# This file automatically generated by tools/build/gen-cat.nqp

#line 1 src/main.nqp

use Perl6::Grammar;
use Perl6::Actions;
use Perl6::Compiler;

nqp::p6init();

my $comp := Perl6::Compiler.new();
$comp.language('perl6');
$comp.parsegrammar(Perl6::Grammar);
$comp.parseactions(Perl6::Actions);
$comp.addstage('syntaxcheck', :before<ast>);
$comp.addstage('optimize', :after<ast>);
hll-config($comp.config);
nqp::bindhllsym('perl6', '$COMPILER_CONFIG', $comp.config);

my @clo := $comp.commandline_options();
@clo.push('parsetrace');
@clo.push('setting=s');
@clo.push('n');
@clo.push('p');
@clo.push('doc=s?');
@clo.push('optimize=s?');
@clo.push('c');
@clo.push('I=s');
@clo.push('M=s');

nqp::bindhllsym('perl6', '@END_PHASERS', []);

nqp::bindhllsym('perl6', '$!ARGITER', 0);

sub MAIN(@ARGS) {
    # Enter the compiler.
    $comp.command_line(@ARGS, :encoding('utf8'), :transcode('ascii iso-8859-1'));

    # Run any END blocks before exiting.
    my @END := nqp::gethllsym('perl6', '@END_PHASERS');
    while +@END {
        my $result := (@END.shift)();
        nqp::can($result, 'sink') && $result.sink();
        CATCH { $comp.handle-exception($_); }
        CONTROL { $comp.handle-control($_); }
    }
}
#line 1 gen/moar/main-version.nqp

sub hll-config($config) {
    $config<implementation>   := 'Rakudo';
    $config<version>          := '2016.02-206-ge57e631';
    $config<release-number>   := '';
    $config<codename>         := '';
    $config<build-date>       := '2016-03-23T19:25:03Z';
    $config<language_version> := '6.c';
}

# vim: set ft=perl6 nomodifiable :
