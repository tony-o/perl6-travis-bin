.include 'cclass.pasm'
.include 'except_severity.pasm'
.include 'except_types.pasm'
.include 'iglobals.pasm'
.include 'interpinfo.pasm'
.include 'iterator.pasm'
.include 'sysinfo.pasm'
.include 'stat.pasm'
.include 'datatypes.pasm'
.include 'libpaths.pasm'
.include 'nqp_const.pir'
.loadlib "nqp_group"
.loadlib "nqp_ops"
.loadlib "nqp_bigint_ops"
.loadlib "trans_ops"
.loadlib "io_ops"
.HLL "nqp"
.namespace []
.sub "<mainline>" :subid("cuid_237_1431289913.64791") :anon :lex
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc _lex_param_0 :slurpy 
    .const 'Sub' $P5021 = 'cuid_238_1431289913.64791' 
    capture_lex $P5021 
    .const 'Sub' $P5021 = 'cuid_239_1431289913.64791' 
    capture_lex $P5021 
    .const 'Sub' $P5021 = 'cuid_241_1431289913.64791' 
    capture_lex $P5021 
    .const 'Sub' $P5021 = 'cuid_242_1431289913.64791' 
    capture_lex $P5021 
    .const 'Sub' $P5021 = 'cuid_245_1431289913.64791' 
    capture_lex $P5021 
    .const 'Sub' $P5021 = 'cuid_246_1431289913.64791' 
    capture_lex $P5021 
    .lex "GLOBALish", $P101 
    .lex "$?PACKAGE", $P102 
    .lex "EXPORT", $P103 
    .lex "ParseShared", $P104 
    .lex "NQPCursorRole", $P105 
    .lex "$p6regex", $P106 
    .lex "&MAIN", $P107 
    .lex "@ARGS", _lex_param_0 
    .local pmc ctxsave 
    .const 'Sub' $P5001 = 'cuid_238_1431289913.64791' 
    capture_lex $P5001
    set $P107, $P5001
    find_dynamic_lex $P5002, "$*CTXSAVE"
    set ctxsave, $P5002
    isnull $I5001, ctxsave
    if $I5001 goto unless10_end11 
    can $I5002, ctxsave, "ctxsave"
    box $P5005, $I5002
    set $P5004, $P5005
    unless $I5002 goto if11_end13 
    $P5003 = ctxsave."ctxsave"()
    set $P5004, $P5003
  if11_end13:
  unless10_end11:
.annotate 'line', 1
    .const 'Sub' $P5006 = 'cuid_239_1431289913.64791' 
    capture_lex $P5006
    $P5007 = $P5006()
    .const 'Sub' $P5008 = 'cuid_241_1431289913.64791' 
    capture_lex $P5008
    $P5009 = $P5008()
    .const 'Sub' $P5010 = 'cuid_242_1431289913.64791' 
    capture_lex $P5010
    $P5011 = $P5010()
    .const 'Sub' $P5012 = 'cuid_245_1431289913.64791' 
    capture_lex $P5012
    $P5013 = $P5012()
.annotate 'line', 1452
    nqp_get_sc_object $P5014, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 234
    $P5015 = $P5014."new"()
    set $P106, $P5015
.annotate 'line', 1453
    $P106."language"("QRegex::P6Regex")
.annotate 'line', 1454
    nqp_get_sc_object $P5016, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 5
    $P106."parsegrammar"($P5016)
.annotate 'line', 1455
    nqp_get_sc_object $P5017, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 153
    $P106."parseactions"($P5017)
    .const 'Sub' $P5018 = 'cuid_246_1431289913.64791' 
    capture_lex $P5018
    $P5019 = $P5018()
    unless _lex_param_0 goto if1651_end3788 
    $P5020 = "&MAIN"(_lex_param_0 :flat)
  if1651_end3788:
    .return () 
.end
.HLL "nqp"
.namespace []
.sub "MAIN" :subid("cuid_238_1431289913.64791") :anon :lex :outer("cuid_237_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1457
    .param pmc __lowered_lex_1 
.annotate 'line', 1458
    find_lex $P5001, "$p6regex"
    $P5002 = $P5001."command_line"(__lowered_lex_1, "utf8" :named("encoding"), "ucs4" :named("transcode"))
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_239_1431289913.64791") :anon :lex :outer("cuid_237_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 9
    .const 'Sub' $P5002 = 'cuid_1_1431289913.64791' 
    capture_lex $P5002 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_1_1431289913.64791' 
    capture_lex $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "create_code" :subid("cuid_1_1431289913.64791") :anon :lex :outer("cuid_239_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 10
    .param pmc __lowered_lex_2 
    .param pmc __lowered_lex_3 
    .param pmc __lowered_lex_4 
    .const 'Sub' $P5030 = 'cuid_240_1431289913.64791' 
    capture_lex $P5030 
    .local pmc __lowered_lex_5 
    .local pmc __lowered_lex_6 
    .local pmc __lowered_lex_7 
    .local pmc __lowered_lex_8 
    .const 'Sub' $P5003 = 'cuid_240_1431289913.64791' 
    capture_lex $P5003
    newclosure $P5002, $P5003
    nqp_fresh_stub $P5001, $P5002
    set __lowered_lex_5, $P5001
    set $S5001, __lowered_lex_4
    assign __lowered_lex_5, $S5001
    setprop __lowered_lex_5, 'STATIC_CODE_REF', __lowered_lex_5
.annotate 'line', 17
    nqp_decontainerize $P5004, __lowered_lex_2
    $P5004."add_root_code_ref"(__lowered_lex_5, __lowered_lex_3)
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 9
    repr_instance_of $P5005, $P5006
    set __lowered_lex_6, $P5005
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 9
    setattribute __lowered_lex_6, $P5007, "$!do", __lowered_lex_5
.annotate 'line', 22
    nqp_decontainerize $P5008, __lowered_lex_2
    $P5009 = $P5008."add_object"(__lowered_lex_6)
    set __lowered_lex_7, $P5009
.annotate 'line', 25
    nqp_get_sc_object $P5010, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 141
    $P5011 = $P5010."new"()
    set __lowered_lex_8, $P5011
.annotate 'line', 26
    nqp_get_sc_object $P5012, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
.annotate 'line', 28
    nqp_get_sc_object $P5013, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 89
    $P5014 = $P5013."new"(__lowered_lex_6 :named("value"))
.annotate 'line', 29
    nqp_get_sc_object $P5015, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 89
    nqp_get_sc_object $P5016, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 9
    $P5017 = $P5015."new"($P5016 :named("value"))
.annotate 'line', 30
    nqp_get_sc_object $P5018, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5019 = $P5018."new"("$!do" :named("value"))
.annotate 'line', 31
    nqp_get_sc_object $P5020, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 84
    $P5021 = $P5020."new"(__lowered_lex_3 :named("value"))
    $P5022 = $P5012."new"($P5014, $P5017, $P5019, $P5021, "bindattr" :named("op"))
    __lowered_lex_8."push"($P5022)
.annotate 'line', 33
    nqp_get_sc_object $P5023, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
.annotate 'line', 35
    nqp_get_sc_object $P5024, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 84
    $P5025 = $P5024."new"(__lowered_lex_3 :named("value"))
.annotate 'line', 36
    nqp_get_sc_object $P5026, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 89
    $P5027 = $P5026."new"(__lowered_lex_6 :named("value"))
    $P5028 = $P5023."new"($P5025, $P5027, "setcodeobj" :named("op"))
    __lowered_lex_8."push"($P5028)
.annotate 'line', 38
    nqp_decontainerize $P5029, __lowered_lex_2
    $P5029."add_fixup_task"(__lowered_lex_8 :named("fixup_ast"))
    .return (__lowered_lex_6) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_240_1431289913.64791") :anon :lex :outer("cuid_1_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 12

    box $P5001, "Uncompiled code executed"
    die $P5001
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_241_1431289913.64791") :anon :lex :outer("cuid_237_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 44
    .const 'Sub' $P5119 = 'cuid_2_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_3_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_4_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_5_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_6_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_7_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_8_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_9_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_10_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_11_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_12_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_13_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_14_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_15_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_16_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_17_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_18_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_19_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_21_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_24_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_25_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_26_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_27_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_28_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_29_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_30_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_34_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_35_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_36_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_37_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_39_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_40_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_41_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_42_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_43_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_45_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_46_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_47_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_48_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_52_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_53_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_54_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_56_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_57_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_58_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_59_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_60_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_61_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_62_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_63_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_64_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_65_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_66_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_67_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_68_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_69_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_70_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_71_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_72_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_73_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_74_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_75_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_76_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_77_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_78_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_79_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_80_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_82_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_83_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_84_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_85_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_86_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_87_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_88_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_89_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_90_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_91_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_92_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_93_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_94_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_95_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_96_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_97_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_98_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_99_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_101_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_102_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_103_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_104_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_105_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_106_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_107_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_108_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_109_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_110_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_111_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_112_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_113_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_114_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_115_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_116_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_117_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_118_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_120_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_122_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_123_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_124_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_126_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_128_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_136_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_141_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_142_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_143_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_144_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_145_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_146_1431289913.64791' 
    capture_lex $P5119 
    .const 'Sub' $P5119 = 'cuid_147_1431289913.64791' 
    capture_lex $P5119 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "$cur_handle", $P103 
    .const 'Sub' $P5001 = 'cuid_2_1431289913.64791' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_3_1431289913.64791' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_4_1431289913.64791' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_5_1431289913.64791' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_6_1431289913.64791' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_7_1431289913.64791' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_8_1431289913.64791' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_9_1431289913.64791' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_10_1431289913.64791' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_11_1431289913.64791' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_12_1431289913.64791' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_13_1431289913.64791' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_14_1431289913.64791' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_15_1431289913.64791' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_16_1431289913.64791' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_17_1431289913.64791' 
    capture_lex $P5016
    box $P5017, 0
    set $P103, $P5017
    .const 'Sub' $P5018 = 'cuid_18_1431289913.64791' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_19_1431289913.64791' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_21_1431289913.64791' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_24_1431289913.64791' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_25_1431289913.64791' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_26_1431289913.64791' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_27_1431289913.64791' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_28_1431289913.64791' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_29_1431289913.64791' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_30_1431289913.64791' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_34_1431289913.64791' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_35_1431289913.64791' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_36_1431289913.64791' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_37_1431289913.64791' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_39_1431289913.64791' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_40_1431289913.64791' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_41_1431289913.64791' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_42_1431289913.64791' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_43_1431289913.64791' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_45_1431289913.64791' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_46_1431289913.64791' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_47_1431289913.64791' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_48_1431289913.64791' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_52_1431289913.64791' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_53_1431289913.64791' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_54_1431289913.64791' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_56_1431289913.64791' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_57_1431289913.64791' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_58_1431289913.64791' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_59_1431289913.64791' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_60_1431289913.64791' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_61_1431289913.64791' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_62_1431289913.64791' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_63_1431289913.64791' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_64_1431289913.64791' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_65_1431289913.64791' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_66_1431289913.64791' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_67_1431289913.64791' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_68_1431289913.64791' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_69_1431289913.64791' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_70_1431289913.64791' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_71_1431289913.64791' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_72_1431289913.64791' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_73_1431289913.64791' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_74_1431289913.64791' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_75_1431289913.64791' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_76_1431289913.64791' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_77_1431289913.64791' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_78_1431289913.64791' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_79_1431289913.64791' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_80_1431289913.64791' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_82_1431289913.64791' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_83_1431289913.64791' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_84_1431289913.64791' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_85_1431289913.64791' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_86_1431289913.64791' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_87_1431289913.64791' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_88_1431289913.64791' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_89_1431289913.64791' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_90_1431289913.64791' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_91_1431289913.64791' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_92_1431289913.64791' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_93_1431289913.64791' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_94_1431289913.64791' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_95_1431289913.64791' 
    capture_lex $P5082
    .const 'Sub' $P5083 = 'cuid_96_1431289913.64791' 
    capture_lex $P5083
    .const 'Sub' $P5084 = 'cuid_97_1431289913.64791' 
    capture_lex $P5084
    .const 'Sub' $P5085 = 'cuid_98_1431289913.64791' 
    capture_lex $P5085
    .const 'Sub' $P5086 = 'cuid_99_1431289913.64791' 
    capture_lex $P5086
    .const 'Sub' $P5087 = 'cuid_101_1431289913.64791' 
    capture_lex $P5087
    .const 'Sub' $P5088 = 'cuid_102_1431289913.64791' 
    capture_lex $P5088
    .const 'Sub' $P5089 = 'cuid_103_1431289913.64791' 
    capture_lex $P5089
    .const 'Sub' $P5090 = 'cuid_104_1431289913.64791' 
    capture_lex $P5090
    .const 'Sub' $P5091 = 'cuid_105_1431289913.64791' 
    capture_lex $P5091
    .const 'Sub' $P5092 = 'cuid_106_1431289913.64791' 
    capture_lex $P5092
    .const 'Sub' $P5093 = 'cuid_107_1431289913.64791' 
    capture_lex $P5093
    .const 'Sub' $P5094 = 'cuid_108_1431289913.64791' 
    capture_lex $P5094
    .const 'Sub' $P5095 = 'cuid_109_1431289913.64791' 
    capture_lex $P5095
    .const 'Sub' $P5096 = 'cuid_110_1431289913.64791' 
    capture_lex $P5096
    .const 'Sub' $P5097 = 'cuid_111_1431289913.64791' 
    capture_lex $P5097
    .const 'Sub' $P5098 = 'cuid_112_1431289913.64791' 
    capture_lex $P5098
    .const 'Sub' $P5099 = 'cuid_113_1431289913.64791' 
    capture_lex $P5099
    .const 'Sub' $P5100 = 'cuid_114_1431289913.64791' 
    capture_lex $P5100
    .const 'Sub' $P5101 = 'cuid_115_1431289913.64791' 
    capture_lex $P5101
    .const 'Sub' $P5102 = 'cuid_116_1431289913.64791' 
    capture_lex $P5102
    .const 'Sub' $P5103 = 'cuid_117_1431289913.64791' 
    capture_lex $P5103
    .const 'Sub' $P5104 = 'cuid_118_1431289913.64791' 
    capture_lex $P5104
    .const 'Sub' $P5105 = 'cuid_120_1431289913.64791' 
    capture_lex $P5105
    .const 'Sub' $P5106 = 'cuid_122_1431289913.64791' 
    capture_lex $P5106
    .const 'Sub' $P5107 = 'cuid_123_1431289913.64791' 
    capture_lex $P5107
    .const 'Sub' $P5108 = 'cuid_124_1431289913.64791' 
    capture_lex $P5108
    .const 'Sub' $P5109 = 'cuid_126_1431289913.64791' 
    capture_lex $P5109
    .const 'Sub' $P5110 = 'cuid_128_1431289913.64791' 
    capture_lex $P5110
    .const 'Sub' $P5111 = 'cuid_136_1431289913.64791' 
    capture_lex $P5111
    .const 'Sub' $P5112 = 'cuid_141_1431289913.64791' 
    capture_lex $P5112
    .const 'Sub' $P5113 = 'cuid_142_1431289913.64791' 
    capture_lex $P5113
    .const 'Sub' $P5114 = 'cuid_143_1431289913.64791' 
    capture_lex $P5114
    .const 'Sub' $P5115 = 'cuid_144_1431289913.64791' 
    capture_lex $P5115
    .const 'Sub' $P5116 = 'cuid_145_1431289913.64791' 
    capture_lex $P5116
    .const 'Sub' $P5117 = 'cuid_146_1431289913.64791' 
    capture_lex $P5117
    .const 'Sub' $P5118 = 'cuid_147_1431289913.64791' 
    capture_lex $P5118
    .return ($P5118) 
.end
.HLL "nqp"
.namespace []
.sub "obs" :subid("cuid_2_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 46
    .param pmc __lowered_lex_9 
    .param pmc __lowered_lex_10 
    .param pmc __lowered_lex_11 
    .param pmc __lowered_lex_12 :optional 
    .param int haz_param_1 :opt_flag 
    if haz_param_1, default14
    box $P5003, " in Perl 6"
    set __lowered_lex_12, $P5003
  default14:
.annotate 'line', 47
    nqp_decontainerize $P5001, __lowered_lex_9
    set $S5006, __lowered_lex_10
    concat $S5005, "Unsupported use of ", $S5006
    concat $S5004, $S5005, ";"
    set $S5007, __lowered_lex_12
    concat $S5003, $S5004, $S5007
    concat $S5002, $S5003, " please use "
    set $S5008, __lowered_lex_11
    concat $S5001, $S5002, $S5008
    $P5002 = $P5001."panic"($S5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_unrecognized_metachar" :subid("cuid_3_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 54
    .param pmc __lowered_lex_13 
    .param pmc __lowered_lex_14 
.annotate 'line', 55
    nqp_decontainerize $P5001, __lowered_lex_13
    set $S5003, __lowered_lex_14
    concat $S5002, "Unrecognized regex metacharacter ", $S5003
    concat $S5001, $S5002, " (must be quoted to match literally)"
    $P5002 = $P5001."panic"($S5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_malformed_range" :subid("cuid_4_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 58
    .param pmc __lowered_lex_15 
.annotate 'line', 59
    nqp_decontainerize $P5001, __lowered_lex_15
    $P5002 = $P5001."panic"("Malformed range.")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_confused" :subid("cuid_5_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 62
    .param pmc __lowered_lex_16 
.annotate 'line', 63
    nqp_decontainerize $P5001, __lowered_lex_16
    $P5002 = $P5001."panic"("Confused.")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_unspace" :subid("cuid_6_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 66
    .param pmc __lowered_lex_17 
    .param pmc __lowered_lex_18 
.annotate 'line', 67
    nqp_decontainerize $P5001, __lowered_lex_17
    concat $S5005, "No unspace allowed in regex; ", " if you meant to match the literal character,"
    concat $S5004, $S5005, " please enclose in single quotes ('"
    set $S5006, __lowered_lex_18
    concat $S5003, $S5004, $S5006
    concat $S5002, $S5003, utf8:"') or use a backslashed form like \\x"
    new $P5004, 'QRPA'
    set $S5007, __lowered_lex_18
    ord $I5001, $S5007
    box $P5005, $I5001
    push $P5004, $P5005
    new $P5003, 'ResizableStringArray'
    push $P5003, "nqp"
    get_root_global $P5002, $P5003, "sprintf"
    $S5008 = $P5002("%02x", $P5004)
    concat $S5001, $S5002, $S5008
    $P5006 = $P5001."panic"($S5001)
    .return ($P5006) 
.end
.HLL "nqp"
.namespace []
.sub "throw_regex_not_terminated" :subid("cuid_7_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 74
    .param pmc __lowered_lex_19 
.annotate 'line', 75
    nqp_decontainerize $P5001, __lowered_lex_19
    $P5002 = $P5001."panic"("Regex not terminated.")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_spaces_in_bare_range" :subid("cuid_8_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 78
    .param pmc __lowered_lex_20 
.annotate 'line', 79
    nqp_decontainerize $P5001, __lowered_lex_20
    $P5002 = $P5001."panic"("Spaces not allowed in bare range.")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_solitary_quantifier" :subid("cuid_9_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 82
    .param pmc __lowered_lex_21 
.annotate 'line', 83
    nqp_decontainerize $P5001, __lowered_lex_21
    $P5002 = $P5001."panic"("Quantifier quantifies nothing.")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_solitary_backtrack_control" :subid("cuid_10_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 86
    .param pmc __lowered_lex_22 
.annotate 'line', 87
    nqp_decontainerize $P5001, __lowered_lex_22
    $P5002 = $P5001."panic"("Backtrack control ':' does not seem to have a preceding atom to control")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "throw_null_pattern" :subid("cuid_11_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 90
    .param pmc __lowered_lex_23 
.annotate 'line', 91
    nqp_decontainerize $P5001, __lowered_lex_23
    $P5002 = $P5001."panic"("Null regex not allowed")
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "worry" :subid("cuid_12_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 94
    .param pmc __lowered_lex_24 
    .param pmc __lowered_lex_25 :slurpy 
    getinterp $P5001
    $P5002 = $P5001."stderr_handle"()
    join $S5002, "", __lowered_lex_25
    concat $S5001, $S5002, "\n"
    $P5003 = $P5002."print"($S5001)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "ws" :subid("cuid_13_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 98
    .param pmc __lowered_lex_26 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_27 
    set self, __lowered_lex_26
    .local pmc rx12_start
    .local string rx12_tgt
    .local int rx12_pos
    .local int rx12_off
    .local int rx12_eos
    .local int rx12_rep
    .local pmc rx12_cur
    .local pmc rx12_curclass
    .local pmc rx12_bstack
    .local pmc rx12_cstack
    rx12_start = self."!cursor_start_all"()
    set rx12_cur, rx12_start[0]
    set rx12_tgt, rx12_start[1]
    set rx12_pos, rx12_start[2]
    set rx12_curclass, rx12_start[3]
    set rx12_bstack, rx12_start[4]
    set $I19, rx12_start[5]
    store_lex unicode:"$\x{a2}", rx12_cur
    length rx12_eos, rx12_tgt
    eq $I19, 1, rx12_restart17
    gt rx12_pos, rx12_eos, rx12_fail18
    repr_get_attr_int $I11, self, rx12_curclass, "$!from"
    ne $I11, -1, rxscan13_done24
    goto rxscan13_scan23
  rxscan13_loop22:
    inc rx12_pos
    gt rx12_pos, rx12_eos, rx12_fail18
    repr_bind_attr_int rx12_cur, rx12_curclass, "$!from", rx12_pos
  rxscan13_scan23:
    nqp_rxmark rx12_bstack, rxscan13_loop22, rx12_pos, 0
  rxscan13_done24:
    nqp_rxmark rx12_bstack, rxquantr14_done26, rx12_pos, 0
  rxquantr14_loop25:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt15_028
    nqp_push_label $P11, alt15_131
    nqp_rxmark rx12_bstack, alt15_end27, -1, 0
    rx12_cur."!alt"(rx12_pos, "alt_nfa__1_1431289913.90452", $P11)
    goto rx12_fail18
  alt15_028:
    nqp_rxmark rx12_bstack, rxquantr16_done30, -1, 0
  rxquantr16_loop29:
    ge rx12_pos, rx12_eos, rx12_fail18
    is_cclass $I11, .CCLASS_WHITESPACE, rx12_tgt, rx12_pos
    unless $I11, rx12_fail18
    inc rx12_pos
    nqp_rxpeek $I19, rx12_bstack, rxquantr16_done30
    inc $I19
    inc $I19
    set rx12_rep, rx12_bstack[$I19]
    nqp_rxcommit rx12_bstack, rxquantr16_done30
    inc rx12_rep
    nqp_rxmark rx12_bstack, rxquantr16_done30, rx12_pos, rx12_rep
    goto rxquantr16_loop29
  rxquantr16_done30:
    goto alt15_end27
  alt15_131:
    add $I11, rx12_pos, 1
    gt $I11, rx12_eos, rx12_fail18
    ord $I11, rx12_tgt, rx12_pos
    ne $I11, 35, rx12_fail18
    add rx12_pos, 1
    nqp_rxmark rx12_bstack, rxquantr17_done33, rx12_pos, 0
  rxquantr17_loop32:
    ge rx12_pos, rx12_eos, rx12_fail18
    is_cclass $I11, .CCLASS_NEWLINE, rx12_tgt, rx12_pos
    if $I11, rx12_fail18
    inc rx12_pos
    nqp_rxpeek $I19, rx12_bstack, rxquantr17_done33
    inc $I19
    inc $I19
    set rx12_rep, rx12_bstack[$I19]
    nqp_rxcommit rx12_bstack, rxquantr17_done33
    inc rx12_rep
    nqp_rxmark rx12_bstack, rxquantr17_done33, rx12_pos, rx12_rep
    goto rxquantr17_loop32
  rxquantr17_done33:
    goto alt15_end27
  alt15_end27:
    nqp_rxpeek $I19, rx12_bstack, rxquantr14_done26
    inc $I19
    inc $I19
    set rx12_rep, rx12_bstack[$I19]
    nqp_rxcommit rx12_bstack, rxquantr14_done26
    inc rx12_rep
    nqp_rxmark rx12_bstack, rxquantr14_done26, rx12_pos, rx12_rep
    goto rxquantr14_loop25
  rxquantr14_done26:
    rx12_cur."!cursor_pass"(rx12_pos, "ws")
    .return (rx12_cur)
  rx12_restart17:
    repr_get_attr_obj rx12_cstack, rx12_cur, rx12_curclass, "$!cstack"
  rx12_fail18:
    unless rx12_bstack, rx12_done16
    pop $I19, rx12_bstack
    if_null rx12_cstack, rx12_cstack_done21
    unless rx12_cstack, rx12_cstack_done21
    dec $I19
    set $P11, rx12_cstack[$I19]
  rx12_cstack_done21:
    pop rx12_rep, rx12_bstack
    pop rx12_pos, rx12_bstack
    pop $I19, rx12_bstack
    lt rx12_pos, -1, rx12_done16
    lt rx12_pos, 0, rx12_fail18
    eq $I19, 0, rx12_fail18
    nqp_islist $I20, rx12_cstack
    unless $I20, rx12_jump19
    elements $I18, rx12_bstack
    le $I18, 0, rx12_cut20
    dec $I18
    set $I18, rx12_bstack[$I18]
  rx12_cut20:
    assign rx12_cstack, $I18
  rx12_jump19:
    jump $I19
  rx12_done16:
    rx12_cur."!cursor_fail"()
    .return (rx12_cur) 
.end
.HLL "nqp"
.namespace []
.sub "normspace" :subid("cuid_14_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 100
    .param pmc __lowered_lex_28 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_29 
    set self, __lowered_lex_28
    .local pmc rx18_start
    .local string rx18_tgt
    .local int rx18_pos
    .local int rx18_off
    .local int rx18_eos
    .local int rx18_rep
    .local pmc rx18_cur
    .local pmc rx18_curclass
    .local pmc rx18_bstack
    .local pmc rx18_cstack
    rx18_start = self."!cursor_start_all"()
    set rx18_cur, rx18_start[0]
    set rx18_tgt, rx18_start[1]
    set rx18_pos, rx18_start[2]
    set rx18_curclass, rx18_start[3]
    set rx18_bstack, rx18_start[4]
    set $I19, rx18_start[5]
    store_lex unicode:"$\x{a2}", rx18_cur
    length rx18_eos, rx18_tgt
    eq $I19, 1, rx18_restart36
    gt rx18_pos, rx18_eos, rx18_fail37
    repr_get_attr_int $I11, self, rx18_curclass, "$!from"
    ne $I11, -1, rxscan19_done43
    goto rxscan19_scan42
  rxscan19_loop41:
    inc rx18_pos
    gt rx18_pos, rx18_eos, rx18_fail37
    repr_bind_attr_int rx18_cur, rx18_curclass, "$!from", rx18_pos
  rxscan19_scan42:
    nqp_rxmark rx18_bstack, rxscan19_loop41, rx18_pos, 0
  rxscan19_done43:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt20_045
    nqp_push_label $P11, alt20_146
    nqp_rxmark rx18_bstack, alt20_end44, -1, 0
    rx18_cur."!alt"(rx18_pos, "alt_nfa__2_1431289913.90966", $P11)
    goto rx18_fail37
  alt20_045:
    ge rx18_pos, rx18_eos, rx18_fail37
    is_cclass $I11, .CCLASS_WHITESPACE, rx18_tgt, rx18_pos
    unless $I11, rx18_fail37
    inc rx18_pos
    goto alt20_end44
  alt20_146:
    ge rx18_pos, rx18_eos, rx18_fail37
    substr $S11, rx18_tgt, rx18_pos, 1
    index $I11, ucs4:"#", $S11
    lt $I11, 0, rx18_fail37
    inc rx18_pos
    goto alt20_end44
  alt20_end44:
    nqp_rxcommit rx18_bstack, alt20_end44
    repr_bind_attr_int rx18_cur, rx18_curclass, "$!pos", rx18_pos
    $P11 = rx18_cur."ws"()
    repr_get_attr_int $I11, $P11, rx18_curclass, "$!pos"
    lt $I11, 0, rx18_fail37
    repr_get_attr_int rx18_pos, $P11, rx18_curclass, "$!pos"
    rx18_cur."!cursor_pass"(rx18_pos, "normspace")
    .return (rx18_cur)
  rx18_restart36:
    repr_get_attr_obj rx18_cstack, rx18_cur, rx18_curclass, "$!cstack"
  rx18_fail37:
    unless rx18_bstack, rx18_done35
    pop $I19, rx18_bstack
    if_null rx18_cstack, rx18_cstack_done40
    unless rx18_cstack, rx18_cstack_done40
    dec $I19
    set $P11, rx18_cstack[$I19]
  rx18_cstack_done40:
    pop rx18_rep, rx18_bstack
    pop rx18_pos, rx18_bstack
    pop $I19, rx18_bstack
    lt rx18_pos, -1, rx18_done35
    lt rx18_pos, 0, rx18_fail37
    eq $I19, 0, rx18_fail37
    nqp_islist $I20, rx18_cstack
    unless $I20, rx18_jump38
    elements $I18, rx18_bstack
    le $I18, 0, rx18_cut39
    dec $I18
    set $I18, rx18_bstack[$I18]
  rx18_cut39:
    assign rx18_cstack, $I18
  rx18_jump38:
    jump $I19
  rx18_done35:
    rx18_cur."!cursor_fail"()
    .return (rx18_cur) 
.end
.HLL "nqp"
.namespace []
.sub "identifier" :subid("cuid_15_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 102
    .param pmc __lowered_lex_30 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_31 
    set self, __lowered_lex_30
    .local pmc rx22_start
    .local string rx22_tgt
    .local int rx22_pos
    .local int rx22_off
    .local int rx22_eos
    .local int rx22_rep
    .local pmc rx22_cur
    .local pmc rx22_curclass
    .local pmc rx22_bstack
    .local pmc rx22_cstack
    rx22_start = self."!cursor_start_all"()
    set rx22_cur, rx22_start[0]
    set rx22_tgt, rx22_start[1]
    set rx22_pos, rx22_start[2]
    set rx22_curclass, rx22_start[3]
    set rx22_bstack, rx22_start[4]
    set $I19, rx22_start[5]
    store_lex unicode:"$\x{a2}", rx22_cur
    length rx22_eos, rx22_tgt
    eq $I19, 1, rx22_restart50
    gt rx22_pos, rx22_eos, rx22_fail51
    repr_get_attr_int $I11, self, rx22_curclass, "$!from"
    ne $I11, -1, rxscan23_done57
    goto rxscan23_scan56
  rxscan23_loop55:
    inc rx22_pos
    gt rx22_pos, rx22_eos, rx22_fail51
    repr_bind_attr_int rx22_cur, rx22_curclass, "$!from", rx22_pos
  rxscan23_scan56:
    nqp_rxmark rx22_bstack, rxscan23_loop55, rx22_pos, 0
  rxscan23_done57:
    repr_bind_attr_int rx22_cur, rx22_curclass, "$!pos", rx22_pos
    $P11 = rx22_cur."ident"()
    repr_get_attr_int $I11, $P11, rx22_curclass, "$!pos"
    lt $I11, 0, rx22_fail51
    repr_get_attr_int rx22_pos, $P11, rx22_curclass, "$!pos"
    nqp_rxmark rx22_bstack, rxquantr25_done60, rx22_pos, 0
  rxquantr25_loop59:
    ge rx22_pos, rx22_eos, rx22_fail51
    substr $S11, rx22_tgt, rx22_pos, 1
    index $I11, ucs4:"-'", $S11
    lt $I11, 0, rx22_fail51
    inc rx22_pos
    repr_bind_attr_int rx22_cur, rx22_curclass, "$!pos", rx22_pos
    $P11 = rx22_cur."ident"()
    repr_get_attr_int $I11, $P11, rx22_curclass, "$!pos"
    lt $I11, 0, rx22_fail51
    repr_get_attr_int rx22_pos, $P11, rx22_curclass, "$!pos"
    nqp_rxpeek $I19, rx22_bstack, rxquantr25_done60
    inc $I19
    inc $I19
    set rx22_rep, rx22_bstack[$I19]
    nqp_rxcommit rx22_bstack, rxquantr25_done60
    inc rx22_rep
    nqp_rxmark rx22_bstack, rxquantr25_done60, rx22_pos, rx22_rep
    goto rxquantr25_loop59
  rxquantr25_done60:
    rx22_cur."!cursor_pass"(rx22_pos, "identifier")
    .return (rx22_cur)
  rx22_restart50:
    repr_get_attr_obj rx22_cstack, rx22_cur, rx22_curclass, "$!cstack"
  rx22_fail51:
    unless rx22_bstack, rx22_done49
    pop $I19, rx22_bstack
    if_null rx22_cstack, rx22_cstack_done54
    unless rx22_cstack, rx22_cstack_done54
    dec $I19
    set $P11, rx22_cstack[$I19]
  rx22_cstack_done54:
    pop rx22_rep, rx22_bstack
    pop rx22_pos, rx22_bstack
    pop $I19, rx22_bstack
    lt rx22_pos, -1, rx22_done49
    lt rx22_pos, 0, rx22_fail51
    eq $I19, 0, rx22_fail51
    nqp_islist $I20, rx22_cstack
    unless $I20, rx22_jump52
    elements $I18, rx22_bstack
    le $I18, 0, rx22_cut53
    dec $I18
    set $I18, rx22_bstack[$I18]
  rx22_cut53:
    assign rx22_cstack, $I18
  rx22_jump52:
    jump $I19
  rx22_done49:
    rx22_cur."!cursor_fail"()
    .return (rx22_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_16_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 104
    .param pmc __lowered_lex_32 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_33 
    set self, __lowered_lex_32
    .local pmc rx27_start
    .local string rx27_tgt
    .local int rx27_pos
    .local int rx27_off
    .local int rx27_eos
    .local int rx27_rep
    .local pmc rx27_cur
    .local pmc rx27_curclass
    .local pmc rx27_bstack
    .local pmc rx27_cstack
    rx27_start = self."!cursor_start_all"()
    set rx27_cur, rx27_start[0]
    set rx27_tgt, rx27_start[1]
    set rx27_pos, rx27_start[2]
    set rx27_curclass, rx27_start[3]
    set rx27_bstack, rx27_start[4]
    set $I19, rx27_start[5]
    store_lex unicode:"$\x{a2}", rx27_cur
    length rx27_eos, rx27_tgt
    eq $I19, 1, rx27_restart64
    gt rx27_pos, rx27_eos, rx27_fail65
    repr_get_attr_int $I11, self, rx27_curclass, "$!from"
    ne $I11, -1, rxscan28_done71
    goto rxscan28_scan70
  rxscan28_loop69:
    inc rx27_pos
    gt rx27_pos, rx27_eos, rx27_fail65
    repr_bind_attr_int rx27_cur, rx27_curclass, "$!from", rx27_pos
  rxscan28_scan70:
    nqp_rxmark rx27_bstack, rxscan28_loop69, rx27_pos, 0
  rxscan28_done71:
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt29_073
    nqp_push_label $P11, alt29_175
    nqp_push_label $P11, alt29_277
    nqp_rxmark rx27_bstack, alt29_end72, -1, 0
    rx27_cur."!alt"(rx27_pos, "alt_nfa__3_1431289913.92809", $P11)
    goto rx27_fail65
  alt29_073:
    ge rx27_pos, rx27_eos, rx27_fail65
    substr $S11, rx27_tgt, rx27_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx27_fail65
    repr_bind_attr_int rx27_cur, rx27_curclass, "$!pos", rx27_pos
    $P11 = rx27_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx27_curclass, "$!pos"
    lt $I11, 0, rx27_fail65
    nqp_rxmark rx27_bstack, rxsubrule30_pass74, -1, 0
  rxsubrule30_pass74:
    rx27_cstack = rx27_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx27_pos, $P11, rx27_curclass, "$!pos"
    goto alt29_end72
  alt29_175:
    ge rx27_pos, rx27_eos, rx27_fail65
    substr $S11, rx27_tgt, rx27_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx27_fail65
    repr_bind_attr_int rx27_cur, rx27_curclass, "$!pos", rx27_pos
    $P11 = rx27_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx27_curclass, "$!pos"
    lt $I11, 0, rx27_fail65
    nqp_rxmark rx27_bstack, rxsubrule31_pass76, -1, 0
  rxsubrule31_pass76:
    rx27_cstack = rx27_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx27_pos, $P11, rx27_curclass, "$!pos"
    goto alt29_end72
  alt29_277:
    nqp_rxmark rx27_bstack, rxcap32_fail79, rx27_pos, 0
    nqp_rxmark rx27_bstack, rxquantr33_done81, -1, 0
  rxquantr33_loop80:
    ge rx27_pos, rx27_eos, rx27_fail65
    is_cclass $I11, .CCLASS_NUMERIC, rx27_tgt, rx27_pos
    unless $I11, rx27_fail65
    inc rx27_pos
    nqp_rxpeek $I19, rx27_bstack, rxquantr33_done81
    inc $I19
    inc $I19
    set rx27_rep, rx27_bstack[$I19]
    nqp_rxcommit rx27_bstack, rxquantr33_done81
    inc rx27_rep
    nqp_rxmark rx27_bstack, rxquantr33_done81, rx27_pos, rx27_rep
    goto rxquantr33_loop80
  rxquantr33_done81:
    nqp_rxpeek $I19, rx27_bstack, rxcap32_fail79
    inc $I19
    set $I11, rx27_bstack[$I19]
    repr_bind_attr_int rx27_cur, rx27_curclass, "$!pos", rx27_pos
    $P11 = rx27_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx27_pos)
    rx27_cstack = rx27_cur."!cursor_capture"($P11, "val")
    goto rxcap32_done78
  rxcap32_fail79:
    goto rx27_fail65
  rxcap32_done78:
    goto alt29_end72
  alt29_end72:
    nqp_rxcommit rx27_bstack, alt29_end72
    rx27_cur."!cursor_pass"(rx27_pos, "arg")
    .return (rx27_cur)
  rx27_restart64:
    repr_get_attr_obj rx27_cstack, rx27_cur, rx27_curclass, "$!cstack"
  rx27_fail65:
    unless rx27_bstack, rx27_done63
    pop $I19, rx27_bstack
    if_null rx27_cstack, rx27_cstack_done68
    unless rx27_cstack, rx27_cstack_done68
    dec $I19
    set $P11, rx27_cstack[$I19]
  rx27_cstack_done68:
    pop rx27_rep, rx27_bstack
    pop rx27_pos, rx27_bstack
    pop $I19, rx27_bstack
    lt rx27_pos, -1, rx27_done63
    lt rx27_pos, 0, rx27_fail65
    eq $I19, 0, rx27_fail65
    nqp_islist $I20, rx27_cstack
    unless $I20, rx27_jump66
    elements $I18, rx27_bstack
    le $I18, 0, rx27_cut67
    dec $I18
    set $I18, rx27_bstack[$I18]
  rx27_cut67:
    assign rx27_cstack, $I18
  rx27_jump66:
    jump $I19
  rx27_done63:
    rx27_cur."!cursor_fail"()
    .return (rx27_cur) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_17_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 112
    .param pmc __lowered_lex_34 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_35 
    set self, __lowered_lex_34
    .local pmc rx34_start
    .local string rx34_tgt
    .local int rx34_pos
    .local int rx34_off
    .local int rx34_eos
    .local int rx34_rep
    .local pmc rx34_cur
    .local pmc rx34_curclass
    .local pmc rx34_bstack
    .local pmc rx34_cstack
    rx34_start = self."!cursor_start_all"()
    set rx34_cur, rx34_start[0]
    set rx34_tgt, rx34_start[1]
    set rx34_pos, rx34_start[2]
    set rx34_curclass, rx34_start[3]
    set rx34_bstack, rx34_start[4]
    set $I19, rx34_start[5]
    store_lex unicode:"$\x{a2}", rx34_cur
    length rx34_eos, rx34_tgt
    eq $I19, 1, rx34_restart84
    gt rx34_pos, rx34_eos, rx34_fail85
    repr_get_attr_int $I11, self, rx34_curclass, "$!from"
    ne $I11, -1, rxscan35_done91
    goto rxscan35_scan90
  rxscan35_loop89:
    inc rx34_pos
    gt rx34_pos, rx34_eos, rx34_fail85
    repr_bind_attr_int rx34_cur, rx34_curclass, "$!from", rx34_pos
  rxscan35_scan90:
    nqp_rxmark rx34_bstack, rxscan35_loop89, rx34_pos, 0
  rxscan35_done91:
    add $I11, rx34_pos, 0
    gt $I11, rx34_eos, rx34_fail85
    nqp_string_equal_at $I11, rx34_tgt, ucs4:"", rx34_pos
    ne $I11, 1, rx34_fail85
    add rx34_pos, 0
    repr_bind_attr_int rx34_cur, rx34_curclass, "$!pos", rx34_pos
    $P11 = rx34_cur."ws"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
    goto rxsubrule36_pass92
  rxsubrule36_back93:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
  rxsubrule36_pass92:
    rx34_cstack = rx34_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule36_back93
    push rx34_bstack, $I11
    push rx34_bstack, 0
    push rx34_bstack, rx34_pos
    elements $I11, rx34_cstack
    push rx34_bstack, $I11
    repr_get_attr_int rx34_pos, $P11, rx34_curclass, "$!pos"
    nqp_rxmark rx34_bstack, rxquantr37_done95, -1, 0
  rxquantr37_loop94:
    repr_bind_attr_int rx34_cur, rx34_curclass, "$!pos", rx34_pos
    $P11 = rx34_cur."arg"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
    goto rxsubrule38_pass96
  rxsubrule38_back97:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
  rxsubrule38_pass96:
    rx34_cstack = rx34_cur."!cursor_capture"($P11, "arg")
    set_addr $I11, rxsubrule38_back97
    push rx34_bstack, $I11
    push rx34_bstack, 0
    push rx34_bstack, rx34_pos
    elements $I11, rx34_cstack
    push rx34_bstack, $I11
    repr_get_attr_int rx34_pos, $P11, rx34_curclass, "$!pos"
    repr_bind_attr_int rx34_cur, rx34_curclass, "$!pos", rx34_pos
    $P11 = rx34_cur."ws"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
    goto rxsubrule39_pass98
  rxsubrule39_back99:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
  rxsubrule39_pass98:
    rx34_cstack = rx34_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule39_back99
    push rx34_bstack, $I11
    push rx34_bstack, 0
    push rx34_bstack, rx34_pos
    elements $I11, rx34_cstack
    push rx34_bstack, $I11
    repr_get_attr_int rx34_pos, $P11, rx34_curclass, "$!pos"
    nqp_rxpeek $I19, rx34_bstack, rxquantr37_done95
    inc $I19
    inc $I19
    set rx34_rep, rx34_bstack[$I19]
    nqp_rxcommit rx34_bstack, rxquantr37_done95
    inc rx34_rep
    nqp_rxmark rx34_bstack, rxquantr37_done95, rx34_pos, rx34_rep
    add $I11, rx34_pos, 1
    gt $I11, rx34_eos, rx34_fail85
    ord $I11, rx34_tgt, rx34_pos
    ne $I11, 44, rx34_fail85
    add rx34_pos, 1
    repr_bind_attr_int rx34_cur, rx34_curclass, "$!pos", rx34_pos
    $P11 = rx34_cur."ws"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
    goto rxsubrule40_pass100
  rxsubrule40_back101:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
  rxsubrule40_pass100:
    rx34_cstack = rx34_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule40_back101
    push rx34_bstack, $I11
    push rx34_bstack, 0
    push rx34_bstack, rx34_pos
    elements $I11, rx34_cstack
    push rx34_bstack, $I11
    repr_get_attr_int rx34_pos, $P11, rx34_curclass, "$!pos"
    repr_bind_attr_int rx34_cur, rx34_curclass, "$!pos", rx34_pos
    $P11 = rx34_cur."ws"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
    goto rxsubrule41_pass102
  rxsubrule41_back103:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx34_curclass, "$!pos"
    lt $I11, 0, rx34_fail85
  rxsubrule41_pass102:
    rx34_cstack = rx34_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule41_back103
    push rx34_bstack, $I11
    push rx34_bstack, 0
    push rx34_bstack, rx34_pos
    elements $I11, rx34_cstack
    push rx34_bstack, $I11
    repr_get_attr_int rx34_pos, $P11, rx34_curclass, "$!pos"
    goto rxquantr37_loop94
  rxquantr37_done95:
    rx34_cur."!cursor_pass"(rx34_pos, "arglist")
    .return (rx34_cur)
  rx34_restart84:
    repr_get_attr_obj rx34_cstack, rx34_cur, rx34_curclass, "$!cstack"
  rx34_fail85:
    unless rx34_bstack, rx34_done83
    pop $I19, rx34_bstack
    if_null rx34_cstack, rx34_cstack_done88
    unless rx34_cstack, rx34_cstack_done88
    dec $I19
    set $P11, rx34_cstack[$I19]
  rx34_cstack_done88:
    pop rx34_rep, rx34_bstack
    pop rx34_pos, rx34_bstack
    pop $I19, rx34_bstack
    lt rx34_pos, -1, rx34_done83
    lt rx34_pos, 0, rx34_fail85
    eq $I19, 0, rx34_fail85
    nqp_islist $I20, rx34_cstack
    unless $I20, rx34_jump86
    elements $I18, rx34_bstack
    le $I18, 0, rx34_cut87
    dec $I18
    set $I18, rx34_bstack[$I18]
  rx34_cut87:
    assign rx34_cstack, $I18
  rx34_jump86:
    jump $I19
  rx34_done83:
    rx34_cur."!cursor_fail"()
    .return (rx34_cur) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_18_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 115
    .param pmc _lex_param_0 
    .lex "%*RX", $P101 
    .lex "$handle", $P102 
    .lex "$*W", $P103 
    .lex utf8:"$\x{a2}", $P104 
    .lex "$/", $P105 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_1 
    .local pmc pkg_viv_tmp_1 
    .local pmc tmp_1 
    new $P5001, 'Hash'
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx42_start
    .local string rx42_tgt
    .local int rx42_pos
    .local int rx42_off
    .local int rx42_eos
    .local int rx42_rep
    .local pmc rx42_cur
    .local pmc rx42_curclass
    .local pmc rx42_bstack
    .local pmc rx42_cstack
    rx42_start = self."!cursor_start_all"()
    set rx42_cur, rx42_start[0]
    set rx42_tgt, rx42_start[1]
    set rx42_pos, rx42_start[2]
    set rx42_curclass, rx42_start[3]
    set rx42_bstack, rx42_start[4]
    set $I19, rx42_start[5]
    store_lex unicode:"$\x{a2}", rx42_cur
    length rx42_eos, rx42_tgt
    eq $I19, 1, rx42_restart106
    gt rx42_pos, rx42_eos, rx42_fail107
    repr_get_attr_int $I11, self, rx42_curclass, "$!from"
    ne $I11, -1, rxscan43_done113
    goto rxscan43_scan112
  rxscan43_loop111:
    inc rx42_pos
    gt rx42_pos, rx42_eos, rx42_fail107
    repr_bind_attr_int rx42_cur, rx42_curclass, "$!from", rx42_pos
  rxscan43_scan112:
    nqp_rxmark rx42_bstack, rxscan43_loop111, rx42_pos, 0
  rxscan43_done113:
    repr_bind_attr_int rx42_cur, rx42_curclass, "$!pos", rx42_pos
    store_lex unicode:"$\x{a2}", rx42_cur
    unless_null $P101, fallback114
    nqp_get_sc_object $P5003, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_1, $P5002
    set fb_tmp_1, pkg_viv_tmp_1
    repr_defined $I5001, fb_tmp_1
    unless $I5001 goto if44_else115 
    set $P5004, fb_tmp_1["%RX"]
    set $P5006, $P5004
    goto if44_end116
  if44_else115:
    null $P5005
    set $P5006, $P5005
  if44_end116:
    unless_null $P5006, vivi_45117
    new $P5007, 'Hash'
    set pkg_viv_tmp_1["%RX"], $P5007
    set $P5006, $P5007
  vivi_45117:
    unless_null $P5006, vivi_46118
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_46118:
    set $P101, $P5006
  fallback114:
    repr_bind_attr_int rx42_cur, rx42_curclass, "$!pos", rx42_pos
    store_lex unicode:"$\x{a2}", rx42_cur
    find_lex $P5009, "$cur_handle"
    set tmp_1, $P5009
    set $I5003, tmp_1
    add $I5002, $I5003, 1
    box $P5010, $I5002
    store_lex "$cur_handle", $P5010
    set $S5002, tmp_1
    concat $S5001, "__QREGEX_P6REGEX__", $S5002
    box $P5009, $S5001
    set $P102, $P5009
    repr_bind_attr_int rx42_cur, rx42_curclass, "$!pos", rx42_pos
    store_lex unicode:"$\x{a2}", rx42_cur
.annotate 'line', 118
    nqp_get_sc_object $P5010, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 3
    $P5011 = $P5010."new"($P102 :named("handle"))
    set $P103, $P5011
    repr_bind_attr_int rx42_cur, rx42_curclass, "$!pos", rx42_pos
    $P11 = rx42_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx42_curclass, "$!pos"
    lt $I11, 0, rx42_fail107
    nqp_rxmark rx42_bstack, rxsubrule47_pass119, -1, 0
  rxsubrule47_pass119:
    rx42_cstack = rx42_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx42_pos, $P11, rx42_curclass, "$!pos"
  alt48_0121:
    nqp_rxmark rx42_bstack, alt48_1123, rx42_pos, 0
    lt rx42_pos, rx42_eos, rx42_fail107
    goto alt48_end120
  alt48_1123:
    repr_bind_attr_int rx42_cur, rx42_curclass, "$!pos", rx42_pos
    $P11 = rx42_cur."throw_confused"()
    repr_get_attr_int $I11, $P11, rx42_curclass, "$!pos"
    lt $I11, 0, rx42_fail107
    repr_get_attr_int rx42_pos, $P11, rx42_curclass, "$!pos"
  alt48_end120:
    rx42_cur."!cursor_pass"(rx42_pos, "TOP")
    .return (rx42_cur)
  rx42_restart106:
    repr_get_attr_obj rx42_cstack, rx42_cur, rx42_curclass, "$!cstack"
  rx42_fail107:
    unless rx42_bstack, rx42_done105
    pop $I19, rx42_bstack
    if_null rx42_cstack, rx42_cstack_done110
    unless rx42_cstack, rx42_cstack_done110
    dec $I19
    set $P11, rx42_cstack[$I19]
  rx42_cstack_done110:
    pop rx42_rep, rx42_bstack
    pop rx42_pos, rx42_bstack
    pop $I19, rx42_bstack
    lt rx42_pos, -1, rx42_done105
    lt rx42_pos, 0, rx42_fail107
    eq $I19, 0, rx42_fail107
    nqp_islist $I20, rx42_cstack
    unless $I20, rx42_jump108
    elements $I18, rx42_bstack
    le $I18, 0, rx42_cut109
    dec $I18
    set $I18, rx42_bstack[$I18]
  rx42_cut109:
    assign rx42_cstack, $I18
  rx42_jump108:
    jump $I19
  rx42_done105:
    rx42_cur."!cursor_fail"()
    .return (rx42_cur) 
.end
.HLL "nqp"
.namespace []
.sub "nibbler" :subid("cuid_19_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 123
    .param pmc _lex_param_0 
    .const 'Sub' $P5036 = 'cuid_20_1431289913.64791' 
    capture_lex $P5036 
    .lex "$OLDRX", $P101 
    .lex "%*RX", $P102 
    .lex "$*SEQ", $P103 
    .lex utf8:"$\x{a2}", $P104 
    .lex "$/", $P105 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_2 
    .local pmc pkg_viv_tmp_2 
    .local pmc lowered_for_it__1 
    .local pmc __lowered_lex_36 
    .local pmc fb_tmp_3 
    .local pmc pkg_viv_tmp_3 
    .local pmc fb_tmp_4 
    new $P5001, 'Hash'
    set $P102, $P5001
    set self, _lex_param_0
    .local pmc rx51_start
    .local string rx51_tgt
    .local int rx51_pos
    .local int rx51_off
    .local int rx51_eos
    .local int rx51_rep
    .local pmc rx51_cur
    .local pmc rx51_curclass
    .local pmc rx51_bstack
    .local pmc rx51_cstack
    rx51_start = self."!cursor_start_all"()
    set rx51_cur, rx51_start[0]
    set rx51_tgt, rx51_start[1]
    set rx51_pos, rx51_start[2]
    set rx51_curclass, rx51_start[3]
    set rx51_bstack, rx51_start[4]
    set $I19, rx51_start[5]
    store_lex unicode:"$\x{a2}", rx51_cur
    length rx51_eos, rx51_tgt
    eq $I19, 1, rx51_restart127
    gt rx51_pos, rx51_eos, rx51_fail128
    repr_get_attr_int $I11, self, rx51_curclass, "$!from"
    ne $I11, -1, rxscan52_done134
    goto rxscan52_scan133
  rxscan52_loop132:
    inc rx51_pos
    gt rx51_pos, rx51_eos, rx51_fail128
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!from", rx51_pos
  rxscan52_scan133:
    nqp_rxmark rx51_bstack, rxscan52_loop132, rx51_pos, 0
  rxscan52_done134:
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    store_lex unicode:"$\x{a2}", rx51_cur
    find_dynamic_lex $P5002, "%*RX"
    set $P101, $P5002
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    store_lex unicode:"$\x{a2}", rx51_cur
    unless_null $P102, fallback135
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5003, $P5004
    set pkg_viv_tmp_2, $P5003
    set fb_tmp_2, pkg_viv_tmp_2
    repr_defined $I5001, fb_tmp_2
    unless $I5001 goto if53_else136 
    set $P5005, fb_tmp_2["%RX"]
    set $P5007, $P5005
    goto if53_end137
  if53_else136:
    null $P5006
    set $P5007, $P5006
  if53_end137:
    unless_null $P5007, vivi_54138
    new $P5008, 'Hash'
    set pkg_viv_tmp_2["%RX"], $P5008
    set $P5007, $P5008
  vivi_54138:
    unless_null $P5007, vivi_55139
    die "Contextual %*RX not found"
    box $P5009, "Contextual %*RX not found"
    set $P5007, $P5009
  vivi_55139:
    set $P102, $P5007
  fallback135:
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    store_lex unicode:"$\x{a2}", rx51_cur
    box $P5010, 0
    set $P103, $P5010
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    store_lex unicode:"$\x{a2}", rx51_cur
    $P5011 = $P104."MATCH"()
    set $P105, $P5011
.annotate 'line', 127
    iter $P5012, $P101
    set lowered_for_it__1, $P5012
    new $P5024, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5024, while56_handlers143
    push_eh $P5024
  while56_test140:
    set $P5023, lowered_for_it__1
    unless lowered_for_it__1 goto while56_done144 
  while56_redo142:
    shift $P5013, lowered_for_it__1
    set __lowered_lex_36, $P5013
.annotate 'line', 128
    unless_null $P102, fallback145
    nqp_get_sc_object $P5015, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5014, $P5015
    set pkg_viv_tmp_3, $P5014
    set fb_tmp_3, pkg_viv_tmp_3
    repr_defined $I5002, fb_tmp_3
    unless $I5002 goto if57_else146 
    set $P5016, fb_tmp_3["%RX"]
    set $P5018, $P5016
    goto if57_end147
  if57_else146:
    null $P5017
    set $P5018, $P5017
  if57_end147:
    unless_null $P5018, vivi_58148
    new $P5019, 'Hash'
    set pkg_viv_tmp_3["%RX"], $P5019
    set $P5018, $P5019
  vivi_58148:
    unless_null $P5018, vivi_59149
    die "Contextual %*RX not found"
    box $P5020, "Contextual %*RX not found"
    set $P5018, $P5020
  vivi_59149:
    set $P102, $P5018
  fallback145:
    $P5021 = __lowered_lex_36."key"()
    set $S5001, $P5021
    $P5022 = __lowered_lex_36."value"()
    set $P102[$S5001], $P5022
    set $P5023, $P5022
    goto while56_test140 
  while56_handlers143:
    .get_results ($P5024)
    pop_upto_eh $P5024
    getattribute $P5025, $P5024, 'type'
    eq $P5025, .CONTROL_LOOP_NEXT, while56_test140
    eq $P5025, .CONTROL_LOOP_REDO, while56_redo142
  while56_done144:
    pop_eh 
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."ws"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    repr_get_attr_int rx51_pos, $P11, rx51_curclass, "$!pos"
    nqp_rxmark rx51_bstack, rxquantr61_done152, rx51_pos, 0
  rxquantr61_loop151:
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."rxstopper"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    ge $I11, 0, rx51_fail128
    new $P11, "ResizableIntegerArray"
    assign $P11, 4
    assign $P11, 0
    nqp_push_label $P11, alt62_0154
    nqp_push_label $P11, alt62_1155
    nqp_push_label $P11, alt62_2156
    nqp_push_label $P11, alt62_3157
    nqp_rxmark rx51_bstack, alt62_end153, -1, 0
    rx51_cur."!alt"(rx51_pos, "alt_nfa__4_1431289913.99141", $P11)
    goto rx51_fail128
  alt62_0154:
    add $I11, rx51_pos, 2
    gt $I11, rx51_eos, rx51_fail128
    nqp_string_equal_at $I11, rx51_tgt, ucs4:"||", rx51_pos
    ne $I11, 1, rx51_fail128
    add rx51_pos, 2
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    store_lex unicode:"$\x{a2}", rx51_cur
    $P5026 = $P104."MATCH"()
    set $P105, $P5026
.annotate 'line', 134
    box $P5027, 1
    set $P103, $P5027
    goto alt62_end153
  alt62_1155:
    add $I11, rx51_pos, 1
    gt $I11, rx51_eos, rx51_fail128
    ord $I11, rx51_tgt, rx51_pos
    ne $I11, 124, rx51_fail128
    add rx51_pos, 1
    goto alt62_end153
  alt62_2156:
    add $I11, rx51_pos, 2
    gt $I11, rx51_eos, rx51_fail128
    nqp_string_equal_at $I11, rx51_tgt, ucs4:"&&", rx51_pos
    ne $I11, 1, rx51_fail128
    add rx51_pos, 2
    goto alt62_end153
  alt62_3157:
    add $I11, rx51_pos, 1
    gt $I11, rx51_eos, rx51_fail128
    ord $I11, rx51_tgt, rx51_pos
    ne $I11, 38, rx51_fail128
    add rx51_pos, 1
    goto alt62_end153
  alt62_end153:
    nqp_rxcommit rx51_bstack, alt62_end153
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."ws"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    repr_get_attr_int rx51_pos, $P11, rx51_curclass, "$!pos"
    nqp_rxpeek $I19, rx51_bstack, rxquantr61_done152
    inc $I19
    inc $I19
    set rx51_rep, rx51_bstack[$I19]
    nqp_rxcommit rx51_bstack, rxquantr61_done152
    inc rx51_rep
  rxquantr61_done152:
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."termseq"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    nqp_rxmark rx51_bstack, rxsubrule64_pass159, -1, 0
  rxsubrule64_pass159:
    rx51_cstack = rx51_cur."!cursor_capture"($P11, "termseq")
    repr_get_attr_int rx51_pos, $P11, rx51_curclass, "$!pos"
  alt65_0161:
    nqp_rxmark rx51_bstack, alt65_1162, rx51_pos, 0
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    goto alt65_end160
  alt65_1162:
    nqp_rxmark rx51_bstack, alt65_2165, rx51_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx51_tgt, rx51_pos
    if $I11, rxanchor66_done163
    ne rx51_pos, rx51_eos, rx51_fail128
    eq rx51_pos, 0, rxanchor66_done163
    sub $I11, rx51_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx51_tgt, $I11
    if $I11, rx51_fail128
  rxanchor66_done163:
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."throw_regex_not_terminated"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    repr_get_attr_int rx51_pos, $P11, rx51_curclass, "$!pos"
    goto alt65_end160
  alt65_2165:
    nqp_rxmark rx51_bstack, alt65_3177, rx51_pos, 0
    .const 'Sub' $P5028 = 'cuid_20_1431289913.64791' 
    capture_lex $P5028
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur.$P5028()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    nqp_rxmark rx51_bstack, rxsubrule69_pass173, -1, 0
  rxsubrule69_pass173:
    rx51_cstack = rx51_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx51_pos, $P11, rx51_curclass, "$!pos"
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    store_lex unicode:"$\x{a2}", rx51_cur
    $P5029 = $P104."MATCH"()
    set $P105, $P5029
.annotate 'line', 144
    nqp_decontainerize $P5030, _lex_param_0
    set fb_tmp_4, $P105
    repr_defined $I5003, fb_tmp_4
    unless $I5003 goto if70_else174 
    set $P5031, fb_tmp_4[0]
    set $P5033, $P5031
    goto if70_end175
  if70_else174:
    null $P5032
    set $P5033, $P5032
  if70_end175:
    unless_null $P5033, vivi_71176
    nqp_get_sc_object $P5034, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5033, $P5034
  vivi_71176:
    set $S5002, $P5033
    $P5035 = $P5030."throw_unrecognized_metachar"($S5002)
    goto alt65_end160
  alt65_3177:
    repr_bind_attr_int rx51_cur, rx51_curclass, "$!pos", rx51_pos
    $P11 = rx51_cur."throw_regex_not_terminated"()
    repr_get_attr_int $I11, $P11, rx51_curclass, "$!pos"
    lt $I11, 0, rx51_fail128
    repr_get_attr_int rx51_pos, $P11, rx51_curclass, "$!pos"
  alt65_end160:
    rx51_cur."!cursor_pass"(rx51_pos, "nibbler")
    .return (rx51_cur)
  rx51_restart127:
    repr_get_attr_obj rx51_cstack, rx51_cur, rx51_curclass, "$!cstack"
  rx51_fail128:
    unless rx51_bstack, rx51_done126
    pop $I19, rx51_bstack
    if_null rx51_cstack, rx51_cstack_done131
    unless rx51_cstack, rx51_cstack_done131
    dec $I19
    set $P11, rx51_cstack[$I19]
  rx51_cstack_done131:
    pop rx51_rep, rx51_bstack
    pop rx51_pos, rx51_bstack
    pop $I19, rx51_bstack
    lt rx51_pos, -1, rx51_done126
    lt rx51_pos, 0, rx51_fail128
    eq $I19, 0, rx51_fail128
    nqp_islist $I20, rx51_cstack
    unless $I20, rx51_jump129
    elements $I18, rx51_bstack
    le $I18, 0, rx51_cut130
    dec $I18
    set $I18, rx51_bstack[$I18]
  rx51_cut130:
    assign rx51_cstack, $I18
  rx51_jump129:
    jump $I19
  rx51_done126:
    rx51_cur."!cursor_fail"()
    .return (rx51_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_20_1431289913.64791") :anon :lex :outer("cuid_19_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx68_start
    .local string rx68_tgt
    .local int rx68_pos
    .local int rx68_off
    .local int rx68_eos
    .local int rx68_rep
    .local pmc rx68_cur
    .local pmc rx68_curclass
    .local pmc rx68_bstack
    .local pmc rx68_cstack
    rx68_start = self."!cursor_start_all"()
    set rx68_cur, rx68_start[0]
    set rx68_tgt, rx68_start[1]
    set rx68_pos, rx68_start[2]
    set rx68_curclass, rx68_start[3]
    set rx68_bstack, rx68_start[4]
    set $I19, rx68_start[5]
    store_lex unicode:"$\x{a2}", rx68_cur
    length rx68_eos, rx68_tgt
    eq $I19, 1, rx68_restart168
    gt rx68_pos, rx68_eos, rx68_fail169
    ge rx68_pos, rx68_eos, rx68_fail169
    is_cclass $I11, .CCLASS_WORD, rx68_tgt, rx68_pos
    if $I11, rx68_fail169
    inc rx68_pos
    rx68_cur."!cursor_pass"(rx68_pos)
    .return (rx68_cur)
  rx68_restart168:
    repr_get_attr_obj rx68_cstack, rx68_cur, rx68_curclass, "$!cstack"
  rx68_fail169:
    unless rx68_bstack, rx68_done167
    pop $I19, rx68_bstack
    if_null rx68_cstack, rx68_cstack_done172
    unless rx68_cstack, rx68_cstack_done172
    dec $I19
    set $P11, rx68_cstack[$I19]
  rx68_cstack_done172:
    pop rx68_rep, rx68_bstack
    pop rx68_pos, rx68_bstack
    pop $I19, rx68_bstack
    lt rx68_pos, -1, rx68_done167
    lt rx68_pos, 0, rx68_fail169
    eq $I19, 0, rx68_fail169
    nqp_islist $I20, rx68_cstack
    unless $I20, rx68_jump170
    elements $I18, rx68_bstack
    le $I18, 0, rx68_cut171
    dec $I18
    set $I18, rx68_bstack[$I18]
  rx68_cut171:
    assign rx68_cstack, $I18
  rx68_jump170:
    jump $I19
  rx68_done167:
    rx68_cur."!cursor_fail"()
    .return (rx68_cur) 
.end
.HLL "nqp"
.namespace []
.sub "infixstopper" :subid("cuid_21_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 149
    .param pmc __lowered_lex_37 
    .const 'Sub' $P5003 = 'cuid_22_1431289913.64791' 
    capture_lex $P5003 
    .const 'Sub' $P5003 = 'cuid_23_1431289913.64791' 
    capture_lex $P5003 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_38 
    set self, __lowered_lex_37
    .const 'Sub' $P5001 = 'cuid_22_1431289913.64791' 
    capture_lex $P5001
    .local pmc rx73_start
    .local string rx73_tgt
    .local int rx73_pos
    .local int rx73_off
    .local int rx73_eos
    .local int rx73_rep
    .local pmc rx73_cur
    .local pmc rx73_curclass
    .local pmc rx73_bstack
    .local pmc rx73_cstack
    rx73_start = self."!cursor_start_all"()
    set rx73_cur, rx73_start[0]
    set rx73_tgt, rx73_start[1]
    set rx73_pos, rx73_start[2]
    set rx73_curclass, rx73_start[3]
    set rx73_bstack, rx73_start[4]
    set $I19, rx73_start[5]
    store_lex unicode:"$\x{a2}", rx73_cur
    length rx73_eos, rx73_tgt
    eq $I19, 1, rx73_restart181
    gt rx73_pos, rx73_eos, rx73_fail182
    repr_get_attr_int $I11, self, rx73_curclass, "$!from"
    ne $I11, -1, rxscan74_done188
    goto rxscan74_scan187
  rxscan74_loop186:
    inc rx73_pos
    gt rx73_pos, rx73_eos, rx73_fail182
    repr_bind_attr_int rx73_cur, rx73_curclass, "$!from", rx73_pos
  rxscan74_scan187:
    nqp_rxmark rx73_bstack, rxscan74_loop186, rx73_pos, 0
  rxscan74_done188:
    rx73_cur."!dba"(rx73_pos, "infix stopper")
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt75_0190
    nqp_push_label $P11, alt75_1191
    nqp_push_label $P11, alt75_2199
    nqp_rxmark rx73_bstack, alt75_end189, -1, 0
    rx73_cur."!alt"(rx73_pos, "alt_nfa__5_1431289914.00519", $P11)
    goto rx73_fail182
  alt75_0190:
    ge rx73_pos, rx73_eos, rx73_fail182
    substr $S11, rx73_tgt, rx73_pos, 1
    index $I11, ucs4:")}]", $S11
    lt $I11, 0, rx73_fail182
    goto alt75_end189
  alt75_1191:
    .const 'Sub' $P5002 = 'cuid_23_1431289913.64791' 
    capture_lex $P5002
    repr_bind_attr_int rx73_cur, rx73_curclass, "$!pos", rx73_pos
    $P11 = rx73_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx73_curclass, "$!pos"
    lt $I11, 0, rx73_fail182
    goto alt75_end189
  alt75_2199:
    repr_bind_attr_int rx73_cur, rx73_curclass, "$!pos", rx73_pos
    $P11 = rx73_cur."rxstopper"()
    repr_get_attr_int $I11, $P11, rx73_curclass, "$!pos"
    lt $I11, 0, rx73_fail182
    goto alt75_end189
  alt75_end189:
    rx73_cur."!cursor_pass"(rx73_pos, "infixstopper", 'backtrack'=>1)
    .return (rx73_cur)
  rx73_restart181:
    repr_get_attr_obj rx73_cstack, rx73_cur, rx73_curclass, "$!cstack"
  rx73_fail182:
    unless rx73_bstack, rx73_done180
    pop $I19, rx73_bstack
    if_null rx73_cstack, rx73_cstack_done185
    unless rx73_cstack, rx73_cstack_done185
    dec $I19
    set $P11, rx73_cstack[$I19]
  rx73_cstack_done185:
    pop rx73_rep, rx73_bstack
    pop rx73_pos, rx73_bstack
    pop $I19, rx73_bstack
    lt rx73_pos, -1, rx73_done180
    lt rx73_pos, 0, rx73_fail182
    eq $I19, 0, rx73_fail182
    nqp_islist $I20, rx73_cstack
    unless $I20, rx73_jump183
    elements $I18, rx73_bstack
    le $I18, 0, rx73_cut184
    dec $I18
    set $I18, rx73_bstack[$I18]
  rx73_cut184:
    assign rx73_cstack, $I18
  rx73_jump183:
    jump $I19
  rx73_done180:
    rx73_cur."!cursor_fail"()
    .return (rx73_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_22_1431289913.64791") :anon :lex :outer("cuid_21_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_23_1431289913.64791") :anon :lex :outer("cuid_21_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx76_start
    .local string rx76_tgt
    .local int rx76_pos
    .local int rx76_off
    .local int rx76_eos
    .local int rx76_rep
    .local pmc rx76_cur
    .local pmc rx76_curclass
    .local pmc rx76_bstack
    .local pmc rx76_cstack
    rx76_start = self."!cursor_start_all"()
    set rx76_cur, rx76_start[0]
    set rx76_tgt, rx76_start[1]
    set rx76_pos, rx76_start[2]
    set rx76_curclass, rx76_start[3]
    set rx76_bstack, rx76_start[4]
    set $I19, rx76_start[5]
    store_lex unicode:"$\x{a2}", rx76_cur
    length rx76_eos, rx76_tgt
    eq $I19, 1, rx76_restart194
    gt rx76_pos, rx76_eos, rx76_fail195
    add $I11, rx76_pos, 1
    gt $I11, rx76_eos, rx76_fail195
    ord $I11, rx76_tgt, rx76_pos
    ne $I11, 62, rx76_fail195
    add rx76_pos, 1
    ge rx76_pos, rx76_eos, rx76_fail195
    substr $S11, rx76_tgt, rx76_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx76_fail195
    inc rx76_pos
    rx76_cur."!cursor_pass"(rx76_pos, 'backtrack'=>1)
    .return (rx76_cur)
  rx76_restart194:
    repr_get_attr_obj rx76_cstack, rx76_cur, rx76_curclass, "$!cstack"
  rx76_fail195:
    unless rx76_bstack, rx76_done193
    pop $I19, rx76_bstack
    if_null rx76_cstack, rx76_cstack_done198
    unless rx76_cstack, rx76_cstack_done198
    dec $I19
    set $P11, rx76_cstack[$I19]
  rx76_cstack_done198:
    pop rx76_rep, rx76_bstack
    pop rx76_pos, rx76_bstack
    pop $I19, rx76_bstack
    lt rx76_pos, -1, rx76_done193
    lt rx76_pos, 0, rx76_fail195
    eq $I19, 0, rx76_fail195
    nqp_islist $I20, rx76_cstack
    unless $I20, rx76_jump196
    elements $I18, rx76_bstack
    le $I18, 0, rx76_cut197
    dec $I18
    set $I18, rx76_bstack[$I18]
  rx76_cut197:
    assign rx76_cstack, $I18
  rx76_jump196:
    jump $I19
  rx76_done193:
    rx76_cur."!cursor_fail"()
    .return (rx76_cur) 
.end
.HLL "nqp"
.namespace []
.sub "rxstopper" :subid("cuid_24_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 158
    .param pmc __lowered_lex_39 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_40 
    set self, __lowered_lex_39
    .local pmc rx77_start
    .local string rx77_tgt
    .local int rx77_pos
    .local int rx77_off
    .local int rx77_eos
    .local int rx77_rep
    .local pmc rx77_cur
    .local pmc rx77_curclass
    .local pmc rx77_bstack
    .local pmc rx77_cstack
    rx77_start = self."!cursor_start_all"()
    set rx77_cur, rx77_start[0]
    set rx77_tgt, rx77_start[1]
    set rx77_pos, rx77_start[2]
    set rx77_curclass, rx77_start[3]
    set rx77_bstack, rx77_start[4]
    set $I19, rx77_start[5]
    store_lex unicode:"$\x{a2}", rx77_cur
    length rx77_eos, rx77_tgt
    eq $I19, 1, rx77_restart202
    gt rx77_pos, rx77_eos, rx77_fail203
    repr_get_attr_int $I11, self, rx77_curclass, "$!from"
    ne $I11, -1, rxscan78_done209
    goto rxscan78_scan208
  rxscan78_loop207:
    inc rx77_pos
    gt rx77_pos, rx77_eos, rx77_fail203
    repr_bind_attr_int rx77_cur, rx77_curclass, "$!from", rx77_pos
  rxscan78_scan208:
    nqp_rxmark rx77_bstack, rxscan78_loop207, rx77_pos, 0
  rxscan78_done209:
    lt rx77_pos, rx77_eos, rx77_fail203
    rx77_cur."!cursor_pass"(rx77_pos, "rxstopper")
    .return (rx77_cur)
  rx77_restart202:
    repr_get_attr_obj rx77_cstack, rx77_cur, rx77_curclass, "$!cstack"
  rx77_fail203:
    unless rx77_bstack, rx77_done201
    pop $I19, rx77_bstack
    if_null rx77_cstack, rx77_cstack_done206
    unless rx77_cstack, rx77_cstack_done206
    dec $I19
    set $P11, rx77_cstack[$I19]
  rx77_cstack_done206:
    pop rx77_rep, rx77_bstack
    pop rx77_pos, rx77_bstack
    pop $I19, rx77_bstack
    lt rx77_pos, -1, rx77_done201
    lt rx77_pos, 0, rx77_fail203
    eq $I19, 0, rx77_fail203
    nqp_islist $I20, rx77_cstack
    unless $I20, rx77_jump204
    elements $I18, rx77_bstack
    le $I18, 0, rx77_cut205
    dec $I18
    set $I18, rx77_bstack[$I18]
  rx77_cut205:
    assign rx77_cstack, $I18
  rx77_jump204:
    jump $I19
  rx77_done201:
    rx77_cur."!cursor_fail"()
    .return (rx77_cur) 
.end
.HLL "nqp"
.namespace []
.sub "termseq" :subid("cuid_25_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 162
    .param pmc __lowered_lex_41 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_42 
    set self, __lowered_lex_41
    .local pmc rx80_start
    .local string rx80_tgt
    .local int rx80_pos
    .local int rx80_off
    .local int rx80_eos
    .local int rx80_rep
    .local pmc rx80_cur
    .local pmc rx80_curclass
    .local pmc rx80_bstack
    .local pmc rx80_cstack
    rx80_start = self."!cursor_start_all"()
    set rx80_cur, rx80_start[0]
    set rx80_tgt, rx80_start[1]
    set rx80_pos, rx80_start[2]
    set rx80_curclass, rx80_start[3]
    set rx80_bstack, rx80_start[4]
    set $I19, rx80_start[5]
    store_lex unicode:"$\x{a2}", rx80_cur
    length rx80_eos, rx80_tgt
    eq $I19, 1, rx80_restart213
    gt rx80_pos, rx80_eos, rx80_fail214
    repr_get_attr_int $I11, self, rx80_curclass, "$!from"
    ne $I11, -1, rxscan81_done220
    goto rxscan81_scan219
  rxscan81_loop218:
    inc rx80_pos
    gt rx80_pos, rx80_eos, rx80_fail214
    repr_bind_attr_int rx80_cur, rx80_curclass, "$!from", rx80_pos
  rxscan81_scan219:
    nqp_rxmark rx80_bstack, rxscan81_loop218, rx80_pos, 0
  rxscan81_done220:
    repr_bind_attr_int rx80_cur, rx80_curclass, "$!pos", rx80_pos
    $P11 = rx80_cur."termaltseq"()
    repr_get_attr_int $I11, $P11, rx80_curclass, "$!pos"
    lt $I11, 0, rx80_fail214
    nqp_rxmark rx80_bstack, rxsubrule82_pass221, -1, 0
  rxsubrule82_pass221:
    rx80_cstack = rx80_cur."!cursor_capture"($P11, "termaltseq")
    repr_get_attr_int rx80_pos, $P11, rx80_curclass, "$!pos"
    rx80_cur."!cursor_pass"(rx80_pos, "termseq")
    .return (rx80_cur)
  rx80_restart213:
    repr_get_attr_obj rx80_cstack, rx80_cur, rx80_curclass, "$!cstack"
  rx80_fail214:
    unless rx80_bstack, rx80_done212
    pop $I19, rx80_bstack
    if_null rx80_cstack, rx80_cstack_done217
    unless rx80_cstack, rx80_cstack_done217
    dec $I19
    set $P11, rx80_cstack[$I19]
  rx80_cstack_done217:
    pop rx80_rep, rx80_bstack
    pop rx80_pos, rx80_bstack
    pop $I19, rx80_bstack
    lt rx80_pos, -1, rx80_done212
    lt rx80_pos, 0, rx80_fail214
    eq $I19, 0, rx80_fail214
    nqp_islist $I20, rx80_cstack
    unless $I20, rx80_jump215
    elements $I18, rx80_bstack
    le $I18, 0, rx80_cut216
    dec $I18
    set $I18, rx80_bstack[$I18]
  rx80_cut216:
    assign rx80_cstack, $I18
  rx80_jump215:
    jump $I19
  rx80_done212:
    rx80_cur."!cursor_fail"()
    .return (rx80_cur) 
.end
.HLL "nqp"
.namespace []
.sub "termaltseq" :subid("cuid_26_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 166
    .param pmc __lowered_lex_43 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_44 
    set self, __lowered_lex_43
    .local pmc rx83_start
    .local string rx83_tgt
    .local int rx83_pos
    .local int rx83_off
    .local int rx83_eos
    .local int rx83_rep
    .local pmc rx83_cur
    .local pmc rx83_curclass
    .local pmc rx83_bstack
    .local pmc rx83_cstack
    rx83_start = self."!cursor_start_all"()
    set rx83_cur, rx83_start[0]
    set rx83_tgt, rx83_start[1]
    set rx83_pos, rx83_start[2]
    set rx83_curclass, rx83_start[3]
    set rx83_bstack, rx83_start[4]
    set $I19, rx83_start[5]
    store_lex unicode:"$\x{a2}", rx83_cur
    length rx83_eos, rx83_tgt
    eq $I19, 1, rx83_restart224
    gt rx83_pos, rx83_eos, rx83_fail225
    repr_get_attr_int $I11, self, rx83_curclass, "$!from"
    ne $I11, -1, rxscan84_done231
    goto rxscan84_scan230
  rxscan84_loop229:
    inc rx83_pos
    gt rx83_pos, rx83_eos, rx83_fail225
    repr_bind_attr_int rx83_cur, rx83_curclass, "$!from", rx83_pos
  rxscan84_scan230:
    nqp_rxmark rx83_bstack, rxscan84_loop229, rx83_pos, 0
  rxscan84_done231:
    repr_bind_attr_int rx83_cur, rx83_curclass, "$!pos", rx83_pos
    $P11 = rx83_cur."termconjseq"()
    repr_get_attr_int $I11, $P11, rx83_curclass, "$!pos"
    lt $I11, 0, rx83_fail225
    nqp_rxmark rx83_bstack, rxsubrule85_pass232, -1, 0
  rxsubrule85_pass232:
    rx83_cstack = rx83_cur."!cursor_capture"($P11, "termconjseq")
    repr_get_attr_int rx83_pos, $P11, rx83_curclass, "$!pos"
    nqp_rxmark rx83_bstack, rxquantr86_done234, rx83_pos, 0
  rxquantr86_loop233:
    repr_bind_attr_int rx83_cur, rx83_curclass, "$!pos", rx83_pos
    $P11 = rx83_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx83_curclass, "$!pos"
    ge $I11, 0, rx83_fail225
    add $I11, rx83_pos, 2
    gt $I11, rx83_eos, rx83_fail225
    nqp_string_equal_at $I11, rx83_tgt, ucs4:"||", rx83_pos
    ne $I11, 1, rx83_fail225
    add rx83_pos, 2
    repr_bind_attr_int rx83_cur, rx83_curclass, "$!pos", rx83_pos
    $P11 = rx83_cur."ws"()
    repr_get_attr_int $I11, $P11, rx83_curclass, "$!pos"
    lt $I11, 0, rx83_fail225
    repr_get_attr_int rx83_pos, $P11, rx83_curclass, "$!pos"
    repr_bind_attr_int rx83_cur, rx83_curclass, "$!pos", rx83_pos
    store_lex unicode:"$\x{a2}", rx83_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_44, $P5001
.annotate 'line', 168
    box $P5002, 1
    store_dynamic_lex "$*SEQ", $P5002
    repr_bind_attr_int rx83_cur, rx83_curclass, "$!pos", rx83_pos
    $P11 = rx83_cur."termconjseq"()
    repr_get_attr_int $I11, $P11, rx83_curclass, "$!pos"
    lt $I11, 0, rx83_fail225
    nqp_rxmark rx83_bstack, rxsubrule88_pass236, -1, 0
  rxsubrule88_pass236:
    rx83_cstack = rx83_cur."!cursor_capture"($P11, "termconjseq")
    repr_get_attr_int rx83_pos, $P11, rx83_curclass, "$!pos"
    nqp_rxpeek $I19, rx83_bstack, rxquantr86_done234
    inc $I19
    inc $I19
    set rx83_rep, rx83_bstack[$I19]
    nqp_rxcommit rx83_bstack, rxquantr86_done234
    inc rx83_rep
    nqp_rxmark rx83_bstack, rxquantr86_done234, rx83_pos, rx83_rep
    goto rxquantr86_loop233
  rxquantr86_done234:
    rx83_cur."!cursor_pass"(rx83_pos, "termaltseq")
    .return (rx83_cur)
  rx83_restart224:
    repr_get_attr_obj rx83_cstack, rx83_cur, rx83_curclass, "$!cstack"
  rx83_fail225:
    unless rx83_bstack, rx83_done223
    pop $I19, rx83_bstack
    if_null rx83_cstack, rx83_cstack_done228
    unless rx83_cstack, rx83_cstack_done228
    dec $I19
    set $P11, rx83_cstack[$I19]
  rx83_cstack_done228:
    pop rx83_rep, rx83_bstack
    pop rx83_pos, rx83_bstack
    pop $I19, rx83_bstack
    lt rx83_pos, -1, rx83_done223
    lt rx83_pos, 0, rx83_fail225
    eq $I19, 0, rx83_fail225
    nqp_islist $I20, rx83_cstack
    unless $I20, rx83_jump226
    elements $I18, rx83_bstack
    le $I18, 0, rx83_cut227
    dec $I18
    set $I18, rx83_bstack[$I18]
  rx83_cut227:
    assign rx83_cstack, $I18
  rx83_jump226:
    jump $I19
  rx83_done223:
    rx83_cur."!cursor_fail"()
    .return (rx83_cur) 
.end
.HLL "nqp"
.namespace []
.sub "termconjseq" :subid("cuid_27_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 171
    .param pmc __lowered_lex_45 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_46 
    set self, __lowered_lex_45
    .local pmc rx89_start
    .local string rx89_tgt
    .local int rx89_pos
    .local int rx89_off
    .local int rx89_eos
    .local int rx89_rep
    .local pmc rx89_cur
    .local pmc rx89_curclass
    .local pmc rx89_bstack
    .local pmc rx89_cstack
    rx89_start = self."!cursor_start_all"()
    set rx89_cur, rx89_start[0]
    set rx89_tgt, rx89_start[1]
    set rx89_pos, rx89_start[2]
    set rx89_curclass, rx89_start[3]
    set rx89_bstack, rx89_start[4]
    set $I19, rx89_start[5]
    store_lex unicode:"$\x{a2}", rx89_cur
    length rx89_eos, rx89_tgt
    eq $I19, 1, rx89_restart239
    gt rx89_pos, rx89_eos, rx89_fail240
    repr_get_attr_int $I11, self, rx89_curclass, "$!from"
    ne $I11, -1, rxscan90_done246
    goto rxscan90_scan245
  rxscan90_loop244:
    inc rx89_pos
    gt rx89_pos, rx89_eos, rx89_fail240
    repr_bind_attr_int rx89_cur, rx89_curclass, "$!from", rx89_pos
  rxscan90_scan245:
    nqp_rxmark rx89_bstack, rxscan90_loop244, rx89_pos, 0
  rxscan90_done246:
    repr_bind_attr_int rx89_cur, rx89_curclass, "$!pos", rx89_pos
    $P11 = rx89_cur."termalt"()
    repr_get_attr_int $I11, $P11, rx89_curclass, "$!pos"
    lt $I11, 0, rx89_fail240
    nqp_rxmark rx89_bstack, rxsubrule91_pass247, -1, 0
  rxsubrule91_pass247:
    rx89_cstack = rx89_cur."!cursor_capture"($P11, "termalt")
    repr_get_attr_int rx89_pos, $P11, rx89_curclass, "$!pos"
    nqp_rxmark rx89_bstack, rxquantr92_done249, rx89_pos, 0
  rxquantr92_loop248:
    repr_bind_attr_int rx89_cur, rx89_curclass, "$!pos", rx89_pos
    $P11 = rx89_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx89_curclass, "$!pos"
    ge $I11, 0, rx89_fail240
    add $I11, rx89_pos, 2
    gt $I11, rx89_eos, rx89_fail240
    nqp_string_equal_at $I11, rx89_tgt, ucs4:"&&", rx89_pos
    ne $I11, 1, rx89_fail240
    add rx89_pos, 2
    repr_bind_attr_int rx89_cur, rx89_curclass, "$!pos", rx89_pos
    $P11 = rx89_cur."ws"()
    repr_get_attr_int $I11, $P11, rx89_curclass, "$!pos"
    lt $I11, 0, rx89_fail240
    repr_get_attr_int rx89_pos, $P11, rx89_curclass, "$!pos"
    repr_bind_attr_int rx89_cur, rx89_curclass, "$!pos", rx89_pos
    store_lex unicode:"$\x{a2}", rx89_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_46, $P5001
.annotate 'line', 173
    box $P5002, 0
    store_dynamic_lex "$*SEQ", $P5002
    repr_bind_attr_int rx89_cur, rx89_curclass, "$!pos", rx89_pos
    $P11 = rx89_cur."termalt"()
    repr_get_attr_int $I11, $P11, rx89_curclass, "$!pos"
    lt $I11, 0, rx89_fail240
    nqp_rxmark rx89_bstack, rxsubrule94_pass251, -1, 0
  rxsubrule94_pass251:
    rx89_cstack = rx89_cur."!cursor_capture"($P11, "termalt")
    repr_get_attr_int rx89_pos, $P11, rx89_curclass, "$!pos"
    nqp_rxpeek $I19, rx89_bstack, rxquantr92_done249
    inc $I19
    inc $I19
    set rx89_rep, rx89_bstack[$I19]
    nqp_rxcommit rx89_bstack, rxquantr92_done249
    inc rx89_rep
    nqp_rxmark rx89_bstack, rxquantr92_done249, rx89_pos, rx89_rep
    goto rxquantr92_loop248
  rxquantr92_done249:
    rx89_cur."!cursor_pass"(rx89_pos, "termconjseq")
    .return (rx89_cur)
  rx89_restart239:
    repr_get_attr_obj rx89_cstack, rx89_cur, rx89_curclass, "$!cstack"
  rx89_fail240:
    unless rx89_bstack, rx89_done238
    pop $I19, rx89_bstack
    if_null rx89_cstack, rx89_cstack_done243
    unless rx89_cstack, rx89_cstack_done243
    dec $I19
    set $P11, rx89_cstack[$I19]
  rx89_cstack_done243:
    pop rx89_rep, rx89_bstack
    pop rx89_pos, rx89_bstack
    pop $I19, rx89_bstack
    lt rx89_pos, -1, rx89_done238
    lt rx89_pos, 0, rx89_fail240
    eq $I19, 0, rx89_fail240
    nqp_islist $I20, rx89_cstack
    unless $I20, rx89_jump241
    elements $I18, rx89_bstack
    le $I18, 0, rx89_cut242
    dec $I18
    set $I18, rx89_bstack[$I18]
  rx89_cut242:
    assign rx89_cstack, $I18
  rx89_jump241:
    jump $I19
  rx89_done238:
    rx89_cur."!cursor_fail"()
    .return (rx89_cur) 
.end
.HLL "nqp"
.namespace []
.sub "termalt" :subid("cuid_28_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 176
    .param pmc __lowered_lex_47 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_48 
    set self, __lowered_lex_47
    .local pmc rx95_start
    .local string rx95_tgt
    .local int rx95_pos
    .local int rx95_off
    .local int rx95_eos
    .local int rx95_rep
    .local pmc rx95_cur
    .local pmc rx95_curclass
    .local pmc rx95_bstack
    .local pmc rx95_cstack
    rx95_start = self."!cursor_start_all"()
    set rx95_cur, rx95_start[0]
    set rx95_tgt, rx95_start[1]
    set rx95_pos, rx95_start[2]
    set rx95_curclass, rx95_start[3]
    set rx95_bstack, rx95_start[4]
    set $I19, rx95_start[5]
    store_lex unicode:"$\x{a2}", rx95_cur
    length rx95_eos, rx95_tgt
    eq $I19, 1, rx95_restart254
    gt rx95_pos, rx95_eos, rx95_fail255
    repr_get_attr_int $I11, self, rx95_curclass, "$!from"
    ne $I11, -1, rxscan96_done261
    goto rxscan96_scan260
  rxscan96_loop259:
    inc rx95_pos
    gt rx95_pos, rx95_eos, rx95_fail255
    repr_bind_attr_int rx95_cur, rx95_curclass, "$!from", rx95_pos
  rxscan96_scan260:
    nqp_rxmark rx95_bstack, rxscan96_loop259, rx95_pos, 0
  rxscan96_done261:
    repr_bind_attr_int rx95_cur, rx95_curclass, "$!pos", rx95_pos
    $P11 = rx95_cur."termconj"()
    repr_get_attr_int $I11, $P11, rx95_curclass, "$!pos"
    lt $I11, 0, rx95_fail255
    nqp_rxmark rx95_bstack, rxsubrule97_pass262, -1, 0
  rxsubrule97_pass262:
    rx95_cstack = rx95_cur."!cursor_capture"($P11, "termconj")
    repr_get_attr_int rx95_pos, $P11, rx95_curclass, "$!pos"
    nqp_rxmark rx95_bstack, rxquantr98_done264, rx95_pos, 0
  rxquantr98_loop263:
    repr_bind_attr_int rx95_cur, rx95_curclass, "$!pos", rx95_pos
    $P11 = rx95_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx95_curclass, "$!pos"
    ge $I11, 0, rx95_fail255
    add $I11, rx95_pos, 1
    gt $I11, rx95_eos, rx95_fail255
    ord $I11, rx95_tgt, rx95_pos
    ne $I11, 124, rx95_fail255
    add rx95_pos, 1
    ge rx95_pos, rx95_eos, rx95_fail255
    substr $S11, rx95_tgt, rx95_pos, 1
    index $I11, ucs4:"|", $S11
    ge $I11, 0, rx95_fail255
    repr_bind_attr_int rx95_cur, rx95_curclass, "$!pos", rx95_pos
    $P11 = rx95_cur."ws"()
    repr_get_attr_int $I11, $P11, rx95_curclass, "$!pos"
    lt $I11, 0, rx95_fail255
    repr_get_attr_int rx95_pos, $P11, rx95_curclass, "$!pos"
    repr_bind_attr_int rx95_cur, rx95_curclass, "$!pos", rx95_pos
    store_lex unicode:"$\x{a2}", rx95_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_48, $P5001
.annotate 'line', 178
    box $P5002, 0
    store_dynamic_lex "$*SEQ", $P5002
    repr_bind_attr_int rx95_cur, rx95_curclass, "$!pos", rx95_pos
    $P11 = rx95_cur."termconj"()
    repr_get_attr_int $I11, $P11, rx95_curclass, "$!pos"
    lt $I11, 0, rx95_fail255
    nqp_rxmark rx95_bstack, rxsubrule100_pass266, -1, 0
  rxsubrule100_pass266:
    rx95_cstack = rx95_cur."!cursor_capture"($P11, "termconj")
    repr_get_attr_int rx95_pos, $P11, rx95_curclass, "$!pos"
    nqp_rxpeek $I19, rx95_bstack, rxquantr98_done264
    inc $I19
    inc $I19
    set rx95_rep, rx95_bstack[$I19]
    nqp_rxcommit rx95_bstack, rxquantr98_done264
    inc rx95_rep
    nqp_rxmark rx95_bstack, rxquantr98_done264, rx95_pos, rx95_rep
    goto rxquantr98_loop263
  rxquantr98_done264:
    rx95_cur."!cursor_pass"(rx95_pos, "termalt")
    .return (rx95_cur)
  rx95_restart254:
    repr_get_attr_obj rx95_cstack, rx95_cur, rx95_curclass, "$!cstack"
  rx95_fail255:
    unless rx95_bstack, rx95_done253
    pop $I19, rx95_bstack
    if_null rx95_cstack, rx95_cstack_done258
    unless rx95_cstack, rx95_cstack_done258
    dec $I19
    set $P11, rx95_cstack[$I19]
  rx95_cstack_done258:
    pop rx95_rep, rx95_bstack
    pop rx95_pos, rx95_bstack
    pop $I19, rx95_bstack
    lt rx95_pos, -1, rx95_done253
    lt rx95_pos, 0, rx95_fail255
    eq $I19, 0, rx95_fail255
    nqp_islist $I20, rx95_cstack
    unless $I20, rx95_jump256
    elements $I18, rx95_bstack
    le $I18, 0, rx95_cut257
    dec $I18
    set $I18, rx95_bstack[$I18]
  rx95_cut257:
    assign rx95_cstack, $I18
  rx95_jump256:
    jump $I19
  rx95_done253:
    rx95_cur."!cursor_fail"()
    .return (rx95_cur) 
.end
.HLL "nqp"
.namespace []
.sub "termconj" :subid("cuid_29_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 181
    .param pmc __lowered_lex_49 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_50 
    set self, __lowered_lex_49
    .local pmc rx101_start
    .local string rx101_tgt
    .local int rx101_pos
    .local int rx101_off
    .local int rx101_eos
    .local int rx101_rep
    .local pmc rx101_cur
    .local pmc rx101_curclass
    .local pmc rx101_bstack
    .local pmc rx101_cstack
    rx101_start = self."!cursor_start_all"()
    set rx101_cur, rx101_start[0]
    set rx101_tgt, rx101_start[1]
    set rx101_pos, rx101_start[2]
    set rx101_curclass, rx101_start[3]
    set rx101_bstack, rx101_start[4]
    set $I19, rx101_start[5]
    store_lex unicode:"$\x{a2}", rx101_cur
    length rx101_eos, rx101_tgt
    eq $I19, 1, rx101_restart269
    gt rx101_pos, rx101_eos, rx101_fail270
    repr_get_attr_int $I11, self, rx101_curclass, "$!from"
    ne $I11, -1, rxscan102_done276
    goto rxscan102_scan275
  rxscan102_loop274:
    inc rx101_pos
    gt rx101_pos, rx101_eos, rx101_fail270
    repr_bind_attr_int rx101_cur, rx101_curclass, "$!from", rx101_pos
  rxscan102_scan275:
    nqp_rxmark rx101_bstack, rxscan102_loop274, rx101_pos, 0
  rxscan102_done276:
    repr_bind_attr_int rx101_cur, rx101_curclass, "$!pos", rx101_pos
    $P11 = rx101_cur."termish"()
    repr_get_attr_int $I11, $P11, rx101_curclass, "$!pos"
    lt $I11, 0, rx101_fail270
    nqp_rxmark rx101_bstack, rxsubrule103_pass277, -1, 0
  rxsubrule103_pass277:
    rx101_cstack = rx101_cur."!cursor_capture"($P11, "termish")
    repr_get_attr_int rx101_pos, $P11, rx101_curclass, "$!pos"
    nqp_rxmark rx101_bstack, rxquantr104_done279, rx101_pos, 0
  rxquantr104_loop278:
    repr_bind_attr_int rx101_cur, rx101_curclass, "$!pos", rx101_pos
    $P11 = rx101_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx101_curclass, "$!pos"
    ge $I11, 0, rx101_fail270
    add $I11, rx101_pos, 1
    gt $I11, rx101_eos, rx101_fail270
    ord $I11, rx101_tgt, rx101_pos
    ne $I11, 38, rx101_fail270
    add rx101_pos, 1
    ge rx101_pos, rx101_eos, rx101_fail270
    substr $S11, rx101_tgt, rx101_pos, 1
    index $I11, ucs4:"&", $S11
    ge $I11, 0, rx101_fail270
    repr_bind_attr_int rx101_cur, rx101_curclass, "$!pos", rx101_pos
    $P11 = rx101_cur."ws"()
    repr_get_attr_int $I11, $P11, rx101_curclass, "$!pos"
    lt $I11, 0, rx101_fail270
    repr_get_attr_int rx101_pos, $P11, rx101_curclass, "$!pos"
    repr_bind_attr_int rx101_cur, rx101_curclass, "$!pos", rx101_pos
    store_lex unicode:"$\x{a2}", rx101_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_50, $P5001
.annotate 'line', 183
    box $P5002, 0
    store_dynamic_lex "$*SEQ", $P5002
    repr_bind_attr_int rx101_cur, rx101_curclass, "$!pos", rx101_pos
    $P11 = rx101_cur."termish"()
    repr_get_attr_int $I11, $P11, rx101_curclass, "$!pos"
    lt $I11, 0, rx101_fail270
    nqp_rxmark rx101_bstack, rxsubrule106_pass281, -1, 0
  rxsubrule106_pass281:
    rx101_cstack = rx101_cur."!cursor_capture"($P11, "termish")
    repr_get_attr_int rx101_pos, $P11, rx101_curclass, "$!pos"
    nqp_rxpeek $I19, rx101_bstack, rxquantr104_done279
    inc $I19
    inc $I19
    set rx101_rep, rx101_bstack[$I19]
    nqp_rxcommit rx101_bstack, rxquantr104_done279
    inc rx101_rep
    nqp_rxmark rx101_bstack, rxquantr104_done279, rx101_pos, rx101_rep
    goto rxquantr104_loop278
  rxquantr104_done279:
    rx101_cur."!cursor_pass"(rx101_pos, "termconj")
    .return (rx101_cur)
  rx101_restart269:
    repr_get_attr_obj rx101_cstack, rx101_cur, rx101_curclass, "$!cstack"
  rx101_fail270:
    unless rx101_bstack, rx101_done268
    pop $I19, rx101_bstack
    if_null rx101_cstack, rx101_cstack_done273
    unless rx101_cstack, rx101_cstack_done273
    dec $I19
    set $P11, rx101_cstack[$I19]
  rx101_cstack_done273:
    pop rx101_rep, rx101_bstack
    pop rx101_pos, rx101_bstack
    pop $I19, rx101_bstack
    lt rx101_pos, -1, rx101_done268
    lt rx101_pos, 0, rx101_fail270
    eq $I19, 0, rx101_fail270
    nqp_islist $I20, rx101_cstack
    unless $I20, rx101_jump271
    elements $I18, rx101_bstack
    le $I18, 0, rx101_cut272
    dec $I18
    set $I18, rx101_bstack[$I18]
  rx101_cut272:
    assign rx101_cstack, $I18
  rx101_jump271:
    jump $I19
  rx101_done268:
    rx101_cur."!cursor_fail"()
    .return (rx101_cur) 
.end
.HLL "nqp"
.namespace []
.sub "termish" :subid("cuid_30_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 186
    .param pmc _lex_param_0 
    .const 'Sub' $P5013 = 'cuid_31_1431289913.64791' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_32_1431289913.64791' 
    capture_lex $P5013 
    .const 'Sub' $P5013 = 'cuid_33_1431289913.64791' 
    capture_lex $P5013 
    .lex "$*SIGOK", $P101 
    .lex "$*VARDEF", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_5 
    set self, _lex_param_0
    .local pmc rx107_start
    .local string rx107_tgt
    .local int rx107_pos
    .local int rx107_off
    .local int rx107_eos
    .local int rx107_rep
    .local pmc rx107_cur
    .local pmc rx107_curclass
    .local pmc rx107_bstack
    .local pmc rx107_cstack
    rx107_start = self."!cursor_start_all"()
    set rx107_cur, rx107_start[0]
    set rx107_tgt, rx107_start[1]
    set rx107_pos, rx107_start[2]
    set rx107_curclass, rx107_start[3]
    set rx107_bstack, rx107_start[4]
    set $I19, rx107_start[5]
    store_lex unicode:"$\x{a2}", rx107_cur
    length rx107_eos, rx107_tgt
    eq $I19, 1, rx107_restart284
    gt rx107_pos, rx107_eos, rx107_fail285
    repr_get_attr_int $I11, self, rx107_curclass, "$!from"
    ne $I11, -1, rxscan108_done291
    goto rxscan108_scan290
  rxscan108_loop289:
    inc rx107_pos
    gt rx107_pos, rx107_eos, rx107_fail285
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!from", rx107_pos
  rxscan108_scan290:
    nqp_rxmark rx107_bstack, rxscan108_loop289, rx107_pos, 0
  rxscan108_done291:
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    store_lex unicode:"$\x{a2}", rx107_cur
    box $P5001, 0
    set $P101, $P5001
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    store_lex unicode:"$\x{a2}", rx107_cur
    box $P5002, 0
    set $P102, $P5002
  alt109_0293:
    nqp_rxmark rx107_bstack, alt109_1298, rx107_pos, 0
    nqp_rxmark rx107_bstack, rxquantr110_done295, -1, 0
  rxquantr110_loop294:
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."quantified_atom"()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    goto rxsubrule111_pass296
  rxsubrule111_back297:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
  rxsubrule111_pass296:
    rx107_cstack = rx107_cur."!cursor_capture"($P11, "noun")
    set_addr $I11, rxsubrule111_back297
    push rx107_bstack, $I11
    push rx107_bstack, 0
    push rx107_bstack, rx107_pos
    elements $I11, rx107_cstack
    push rx107_bstack, $I11
    repr_get_attr_int rx107_pos, $P11, rx107_curclass, "$!pos"
    nqp_rxpeek $I19, rx107_bstack, rxquantr110_done295
    inc $I19
    inc $I19
    set rx107_rep, rx107_bstack[$I19]
    nqp_rxcommit rx107_bstack, rxquantr110_done295
    inc rx107_rep
    nqp_rxmark rx107_bstack, rxquantr110_done295, rx107_pos, rx107_rep
    goto rxquantr110_loop294
  rxquantr110_done295:
    goto alt109_end292
  alt109_1298:
    nqp_rxmark rx107_bstack, alt109_2311, rx107_pos, 0
    .const 'Sub' $P5003 = 'cuid_31_1431289913.64791' 
    capture_lex $P5003
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."before"($P5003)
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."throw_null_pattern"()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    repr_get_attr_int rx107_pos, $P11, rx107_curclass, "$!pos"
    goto alt109_end292
  alt109_2311:
    nqp_rxmark rx107_bstack, alt109_3321, rx107_pos, 0
    .const 'Sub' $P5004 = 'cuid_32_1431289913.64791' 
    capture_lex $P5004
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."before"($P5004)
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."throw_null_pattern"()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    repr_get_attr_int rx107_pos, $P11, rx107_curclass, "$!pos"
    goto alt109_end292
  alt109_3321:
    nqp_rxmark rx107_bstack, alt109_4324, rx107_pos, 0
    is_cclass $I11, .CCLASS_NEWLINE, rx107_tgt, rx107_pos
    if $I11, rxanchor119_done322
    ne rx107_pos, rx107_eos, rx107_fail285
    eq rx107_pos, 0, rxanchor119_done322
    sub $I11, rx107_pos, 1
    is_cclass $I11, .CCLASS_NEWLINE, rx107_tgt, $I11
    if $I11, rx107_fail285
  rxanchor119_done322:
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."throw_regex_not_terminated"()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    repr_get_attr_int rx107_pos, $P11, rx107_curclass, "$!pos"
    goto alt109_end292
  alt109_4324:
    nqp_rxmark rx107_bstack, alt109_5336, rx107_pos, 0
    .const 'Sub' $P5005 = 'cuid_33_1431289913.64791' 
    capture_lex $P5005
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur.$P5005()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    nqp_rxmark rx107_bstack, rxsubrule122_pass332, -1, 0
  rxsubrule122_pass332:
    rx107_cstack = rx107_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx107_pos, $P11, rx107_curclass, "$!pos"
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    store_lex unicode:"$\x{a2}", rx107_cur
    $P5006 = $P103."MATCH"()
    set $P104, $P5006
.annotate 'line', 194
    nqp_decontainerize $P5007, _lex_param_0
    set fb_tmp_5, $P104
    repr_defined $I5001, fb_tmp_5
    unless $I5001 goto if123_else333 
    set $P5008, fb_tmp_5[0]
    set $P5010, $P5008
    goto if123_end334
  if123_else333:
    null $P5009
    set $P5010, $P5009
  if123_end334:
    unless_null $P5010, vivi_124335
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_124335:
    set $S5001, $P5010
    $P5012 = $P5007."throw_unrecognized_metachar"($S5001)
    goto alt109_end292
  alt109_5336:
    repr_bind_attr_int rx107_cur, rx107_curclass, "$!pos", rx107_pos
    $P11 = rx107_cur."throw_regex_not_terminated"()
    repr_get_attr_int $I11, $P11, rx107_curclass, "$!pos"
    lt $I11, 0, rx107_fail285
    repr_get_attr_int rx107_pos, $P11, rx107_curclass, "$!pos"
  alt109_end292:
    rx107_cur."!cursor_pass"(rx107_pos, "termish")
    .return (rx107_cur)
  rx107_restart284:
    repr_get_attr_obj rx107_cstack, rx107_cur, rx107_curclass, "$!cstack"
  rx107_fail285:
    unless rx107_bstack, rx107_done283
    pop $I19, rx107_bstack
    if_null rx107_cstack, rx107_cstack_done288
    unless rx107_cstack, rx107_cstack_done288
    dec $I19
    set $P11, rx107_cstack[$I19]
  rx107_cstack_done288:
    pop rx107_rep, rx107_bstack
    pop rx107_pos, rx107_bstack
    pop $I19, rx107_bstack
    lt rx107_pos, -1, rx107_done283
    lt rx107_pos, 0, rx107_fail285
    eq $I19, 0, rx107_fail285
    nqp_islist $I20, rx107_cstack
    unless $I20, rx107_jump286
    elements $I18, rx107_bstack
    le $I18, 0, rx107_cut287
    dec $I18
    set $I18, rx107_bstack[$I18]
  rx107_cut287:
    assign rx107_cstack, $I18
  rx107_jump286:
    jump $I19
  rx107_done283:
    rx107_cur."!cursor_fail"()
    .return (rx107_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_31_1431289913.64791") :anon :lex :outer("cuid_30_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx112_start
    .local string rx112_tgt
    .local int rx112_pos
    .local int rx112_off
    .local int rx112_eos
    .local int rx112_rep
    .local pmc rx112_cur
    .local pmc rx112_curclass
    .local pmc rx112_bstack
    .local pmc rx112_cstack
    rx112_start = self."!cursor_start_all"()
    set rx112_cur, rx112_start[0]
    set rx112_tgt, rx112_start[1]
    set rx112_pos, rx112_start[2]
    set rx112_curclass, rx112_start[3]
    set rx112_bstack, rx112_start[4]
    set $I19, rx112_start[5]
    store_lex unicode:"$\x{a2}", rx112_cur
    length rx112_eos, rx112_tgt
    eq $I19, 1, rx112_restart301
    gt rx112_pos, rx112_eos, rx112_fail302
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt113_0307
    nqp_push_label $P11, alt113_1309
    nqp_rxmark rx112_bstack, alt113_end306, -1, 0
    rx112_cur."!alt"(rx112_pos, "alt_nfa__6_1431289914.06373", $P11)
    goto rx112_fail302
  alt113_0307:
    repr_bind_attr_int rx112_cur, rx112_curclass, "$!pos", rx112_pos
    $P11 = rx112_cur."rxstopper"()
    repr_get_attr_int $I11, $P11, rx112_curclass, "$!pos"
    lt $I11, 0, rx112_fail302
    nqp_rxmark rx112_bstack, rxsubrule114_pass308, -1, 0
  rxsubrule114_pass308:
    rx112_cstack = rx112_cur."!cursor_capture"($P11, "rxstopper")
    repr_get_attr_int rx112_pos, $P11, rx112_curclass, "$!pos"
    goto alt113_end306
  alt113_1309:
    ge rx112_pos, rx112_eos, rx112_fail302
    substr $S11, rx112_tgt, rx112_pos, 1
    index $I11, ucs4:"&|~", $S11
    lt $I11, 0, rx112_fail302
    inc rx112_pos
    goto alt113_end306
  alt113_end306:
    rx112_cur."!cursor_pass"(rx112_pos)
    .return (rx112_cur)
  rx112_restart301:
    repr_get_attr_obj rx112_cstack, rx112_cur, rx112_curclass, "$!cstack"
  rx112_fail302:
    unless rx112_bstack, rx112_done300
    pop $I19, rx112_bstack
    if_null rx112_cstack, rx112_cstack_done305
    unless rx112_cstack, rx112_cstack_done305
    dec $I19
    set $P11, rx112_cstack[$I19]
  rx112_cstack_done305:
    pop rx112_rep, rx112_bstack
    pop rx112_pos, rx112_bstack
    pop $I19, rx112_bstack
    lt rx112_pos, -1, rx112_done300
    lt rx112_pos, 0, rx112_fail302
    eq $I19, 0, rx112_fail302
    nqp_islist $I20, rx112_cstack
    unless $I20, rx112_jump303
    elements $I18, rx112_bstack
    le $I18, 0, rx112_cut304
    dec $I18
    set $I18, rx112_bstack[$I18]
  rx112_cut304:
    assign rx112_cstack, $I18
  rx112_jump303:
    jump $I19
  rx112_done300:
    rx112_cur."!cursor_fail"()
    .return (rx112_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_32_1431289913.64791") :anon :lex :outer("cuid_30_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx116_start
    .local string rx116_tgt
    .local int rx116_pos
    .local int rx116_off
    .local int rx116_eos
    .local int rx116_rep
    .local pmc rx116_cur
    .local pmc rx116_curclass
    .local pmc rx116_bstack
    .local pmc rx116_cstack
    rx116_start = self."!cursor_start_all"()
    set rx116_cur, rx116_start[0]
    set rx116_tgt, rx116_start[1]
    set rx116_pos, rx116_start[2]
    set rx116_curclass, rx116_start[3]
    set rx116_bstack, rx116_start[4]
    set $I19, rx116_start[5]
    store_lex unicode:"$\x{a2}", rx116_cur
    length rx116_eos, rx116_tgt
    eq $I19, 1, rx116_restart314
    gt rx116_pos, rx116_eos, rx116_fail315
    repr_bind_attr_int rx116_cur, rx116_curclass, "$!pos", rx116_pos
    $P11 = rx116_cur."infixstopper"()
    repr_get_attr_int $I11, $P11, rx116_curclass, "$!pos"
    lt $I11, 0, rx116_fail315
    nqp_rxmark rx116_bstack, rxsubrule117_pass319, -1, 0
  rxsubrule117_pass319:
    rx116_cstack = rx116_cur."!cursor_capture"($P11, "infixstopper")
    repr_get_attr_int rx116_pos, $P11, rx116_curclass, "$!pos"
    rx116_cur."!cursor_pass"(rx116_pos)
    .return (rx116_cur)
  rx116_restart314:
    repr_get_attr_obj rx116_cstack, rx116_cur, rx116_curclass, "$!cstack"
  rx116_fail315:
    unless rx116_bstack, rx116_done313
    pop $I19, rx116_bstack
    if_null rx116_cstack, rx116_cstack_done318
    unless rx116_cstack, rx116_cstack_done318
    dec $I19
    set $P11, rx116_cstack[$I19]
  rx116_cstack_done318:
    pop rx116_rep, rx116_bstack
    pop rx116_pos, rx116_bstack
    pop $I19, rx116_bstack
    lt rx116_pos, -1, rx116_done313
    lt rx116_pos, 0, rx116_fail315
    eq $I19, 0, rx116_fail315
    nqp_islist $I20, rx116_cstack
    unless $I20, rx116_jump316
    elements $I18, rx116_bstack
    le $I18, 0, rx116_cut317
    dec $I18
    set $I18, rx116_bstack[$I18]
  rx116_cut317:
    assign rx116_cstack, $I18
  rx116_jump316:
    jump $I19
  rx116_done313:
    rx116_cur."!cursor_fail"()
    .return (rx116_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_33_1431289913.64791") :anon :lex :outer("cuid_30_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx121_start
    .local string rx121_tgt
    .local int rx121_pos
    .local int rx121_off
    .local int rx121_eos
    .local int rx121_rep
    .local pmc rx121_cur
    .local pmc rx121_curclass
    .local pmc rx121_bstack
    .local pmc rx121_cstack
    rx121_start = self."!cursor_start_all"()
    set rx121_cur, rx121_start[0]
    set rx121_tgt, rx121_start[1]
    set rx121_pos, rx121_start[2]
    set rx121_curclass, rx121_start[3]
    set rx121_bstack, rx121_start[4]
    set $I19, rx121_start[5]
    store_lex unicode:"$\x{a2}", rx121_cur
    length rx121_eos, rx121_tgt
    eq $I19, 1, rx121_restart327
    gt rx121_pos, rx121_eos, rx121_fail328
    ge rx121_pos, rx121_eos, rx121_fail328
    is_cclass $I11, .CCLASS_WORD, rx121_tgt, rx121_pos
    if $I11, rx121_fail328
    inc rx121_pos
    rx121_cur."!cursor_pass"(rx121_pos)
    .return (rx121_cur)
  rx121_restart327:
    repr_get_attr_obj rx121_cstack, rx121_cur, rx121_curclass, "$!cstack"
  rx121_fail328:
    unless rx121_bstack, rx121_done326
    pop $I19, rx121_bstack
    if_null rx121_cstack, rx121_cstack_done331
    unless rx121_cstack, rx121_cstack_done331
    dec $I19
    set $P11, rx121_cstack[$I19]
  rx121_cstack_done331:
    pop rx121_rep, rx121_bstack
    pop rx121_pos, rx121_bstack
    pop $I19, rx121_bstack
    lt rx121_pos, -1, rx121_done326
    lt rx121_pos, 0, rx121_fail328
    eq $I19, 0, rx121_fail328
    nqp_islist $I20, rx121_cstack
    unless $I20, rx121_jump329
    elements $I18, rx121_bstack
    le $I18, 0, rx121_cut330
    dec $I18
    set $I18, rx121_bstack[$I18]
  rx121_cut330:
    assign rx121_cstack, $I18
  rx121_jump329:
    jump $I19
  rx121_done326:
    rx121_cur."!cursor_fail"()
    .return (rx121_cur) 
.end
.HLL "nqp"
.namespace []
.sub "SIGOK" :subid("cuid_34_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 199
    .param pmc __lowered_lex_51 
    .local pmc fb_tmp_6 
    .local pmc fb_tmp_7 
    .local pmc pkg_viv_tmp_4 
    find_dynamic_lex $P5001, "%*RX"
    unless_null $P5001, fallback340
    nqp_get_sc_object $P5003, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5002, $P5003
    set pkg_viv_tmp_4, $P5002
    set fb_tmp_7, pkg_viv_tmp_4
    repr_defined $I5002, fb_tmp_7
    unless $I5002 goto if127_else341 
    set $P5004, fb_tmp_7["%RX"]
    set $P5006, $P5004
    goto if127_end342
  if127_else341:
    null $P5005
    set $P5006, $P5005
  if127_end342:
    unless_null $P5006, vivi_128343
    new $P5007, 'Hash'
    set pkg_viv_tmp_4["%RX"], $P5007
    set $P5006, $P5007
  vivi_128343:
    unless_null $P5006, vivi_129344
    die "Contextual %*RX not found"
    box $P5008, "Contextual %*RX not found"
    set $P5006, $P5008
  vivi_129344:
    set $P5001, $P5006
  fallback340:
    set fb_tmp_6, $P5001
    repr_defined $I5001, fb_tmp_6
    unless $I5001 goto if126_else338 
    set $P5009, fb_tmp_6["s"]
    set $P5011, $P5009
    goto if126_end339
  if126_else338:
    null $P5010
    set $P5011, $P5010
  if126_end339:
    unless_null $P5011, vivi_130345
    nqp_get_sc_object $P5012, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5011, $P5012
  vivi_130345:
    store_dynamic_lex "$*SIGOK", $P5011
    nqp_decontainerize $P5013, __lowered_lex_51
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "quantified_atom" :subid("cuid_35_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 201
    .param pmc __lowered_lex_52 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_53 
    .local pmc fb_tmp_8 
    .local pmc fb_tmp_9 
    set self, __lowered_lex_52
    .local pmc rx131_start
    .local string rx131_tgt
    .local int rx131_pos
    .local int rx131_off
    .local int rx131_eos
    .local int rx131_rep
    .local pmc rx131_cur
    .local pmc rx131_curclass
    .local pmc rx131_bstack
    .local pmc rx131_cstack
    rx131_start = self."!cursor_start_all"()
    set rx131_cur, rx131_start[0]
    set rx131_tgt, rx131_start[1]
    set rx131_pos, rx131_start[2]
    set rx131_curclass, rx131_start[3]
    set rx131_bstack, rx131_start[4]
    set $I19, rx131_start[5]
    store_lex unicode:"$\x{a2}", rx131_cur
    length rx131_eos, rx131_tgt
    eq $I19, 1, rx131_restart348
    gt rx131_pos, rx131_eos, rx131_fail349
    repr_get_attr_int $I11, self, rx131_curclass, "$!from"
    ne $I11, -1, rxscan132_done355
    goto rxscan132_scan354
  rxscan132_loop353:
    inc rx131_pos
    gt rx131_pos, rx131_eos, rx131_fail349
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!from", rx131_pos
  rxscan132_scan354:
    nqp_rxmark rx131_bstack, rxscan132_loop353, rx131_pos, 0
  rxscan132_done355:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."rxstopper"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    ge $I11, 0, rx131_fail349
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."atom"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    nqp_rxmark rx131_bstack, rxsubrule133_pass356, -1, 0
  rxsubrule133_pass356:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "atom")
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
  alt134_0358:
    nqp_rxmark rx131_bstack, alt134_1381, rx131_pos, 0
    nqp_rxmark rx131_bstack, rxquantr135_done360, rx131_pos, 0
  rxquantr135_loop359:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."sigmaybe"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    goto rxsubrule136_pass361
  rxsubrule136_back362:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
  rxsubrule136_pass361:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "sigmaybe")
    set_addr $I11, rxsubrule136_back362
    push rx131_bstack, $I11
    push rx131_bstack, 0
    push rx131_bstack, rx131_pos
    elements $I11, rx131_cstack
    push rx131_bstack, $I11
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    nqp_rxpeek $I19, rx131_bstack, rxquantr135_done360
    inc $I19
    inc $I19
    set rx131_rep, rx131_bstack[$I19]
    nqp_rxcommit rx131_bstack, rxquantr135_done360
    inc rx131_rep
  rxquantr135_done360:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt137_0364
    nqp_push_label $P11, alt137_1366
    nqp_rxmark rx131_bstack, alt137_end363, -1, 0
    rx131_cur."!alt"(rx131_pos, "alt_nfa__7_1431289914.10975", $P11)
    goto rx131_fail349
  alt137_0364:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."rxstopper"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    ge $I11, 0, rx131_fail349
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."quantifier"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    nqp_rxmark rx131_bstack, rxsubrule138_pass365, -1, 0
  rxsubrule138_pass365:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "quantifier")
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    goto alt137_end363
  alt137_1366:
    ge rx131_pos, rx131_eos, rx131_fail349
    substr $S11, rx131_tgt, rx131_pos, 1
    index $I11, ucs4:":", $S11
    lt $I11, 0, rx131_fail349
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."backmod"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    nqp_rxmark rx131_bstack, rxsubrule139_pass367, -1, 0
  rxsubrule139_pass367:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "backmod")
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."alpha"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    ge $I11, 0, rx131_fail349
    goto alt137_end363
  alt137_end363:
    nqp_rxcommit rx131_bstack, alt137_end363
    nqp_rxmark rx131_bstack, rxquantr140_done369, rx131_pos, 0
  rxquantr140_loop368:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    store_lex unicode:"$\x{a2}", rx131_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_53, $P5001
.annotate 'line', 210
    find_dynamic_lex $P5002, "$*VARDEF"
    unless_null $P5002, fallback370
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5003, $P5004
    set fb_tmp_8, $P5003
    repr_defined $I5001, fb_tmp_8
    unless $I5001 goto if141_else371 
    set $P5005, fb_tmp_8["$VARDEF"]
    set $P5007, $P5005
    goto if141_end372
  if141_else371:
    null $P5006
    set $P5007, $P5006
  if141_end372:
    unless_null $P5007, vivi_142373
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5007, $P5008
  vivi_142373:
    unless_null $P5007, vivi_143374
    die "Contextual $*VARDEF not found"
    box $P5009, "Contextual $*VARDEF not found"
    set $P5007, $P5009
  vivi_143374:
    set $P5002, $P5007
  fallback370:
    if $P5002, rx131_fail349
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."sigmaybe"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    nqp_rxmark rx131_bstack, rxsubrule145_pass376, -1, 0
  rxsubrule145_pass376:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "sigfinal")
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    nqp_rxpeek $I19, rx131_bstack, rxquantr140_done369
    inc $I19
    inc $I19
    set rx131_rep, rx131_bstack[$I19]
    nqp_rxcommit rx131_bstack, rxquantr140_done369
    inc rx131_rep
  rxquantr140_done369:
    nqp_rxmark rx131_bstack, rxquantr146_done378, rx131_pos, 0
  rxquantr146_loop377:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."ws"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."separator"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    nqp_rxmark rx131_bstack, rxsubrule148_pass380, -1, 0
  rxsubrule148_pass380:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "separator")
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    nqp_rxpeek $I19, rx131_bstack, rxquantr146_done378
    inc $I19
    inc $I19
    set rx131_rep, rx131_bstack[$I19]
    nqp_rxcommit rx131_bstack, rxquantr146_done378
    inc rx131_rep
  rxquantr146_done378:
    goto alt134_end357
  alt134_1381:
    nqp_rxmark rx131_bstack, rxquantr149_done383, rx131_pos, 0
  rxquantr149_loop382:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    store_lex unicode:"$\x{a2}", rx131_cur
    $P5010 = $P101."MATCH"()
    set __lowered_lex_53, $P5010
.annotate 'line', 212
    find_dynamic_lex $P5011, "$*VARDEF"
    unless_null $P5011, fallback384
    nqp_get_sc_object $P5013, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5012, $P5013
    set fb_tmp_9, $P5012
    repr_defined $I5002, fb_tmp_9
    unless $I5002 goto if150_else385 
    set $P5014, fb_tmp_9["$VARDEF"]
    set $P5016, $P5014
    goto if150_end386
  if150_else385:
    null $P5015
    set $P5016, $P5015
  if150_end386:
    unless_null $P5016, vivi_151387
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_151387:
    unless_null $P5016, vivi_152388
    die "Contextual $*VARDEF not found"
    box $P5018, "Contextual $*VARDEF not found"
    set $P5016, $P5018
  vivi_152388:
    set $P5011, $P5016
  fallback384:
    if $P5011, rx131_fail349
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    $P11 = rx131_cur."sigmaybe"()
    repr_get_attr_int $I11, $P11, rx131_curclass, "$!pos"
    lt $I11, 0, rx131_fail349
    nqp_rxmark rx131_bstack, rxsubrule153_pass389, -1, 0
  rxsubrule153_pass389:
    rx131_cstack = rx131_cur."!cursor_capture"($P11, "sigfinal")
    repr_get_attr_int rx131_pos, $P11, rx131_curclass, "$!pos"
    nqp_rxpeek $I19, rx131_bstack, rxquantr149_done383
    inc $I19
    inc $I19
    set rx131_rep, rx131_bstack[$I19]
    nqp_rxcommit rx131_bstack, rxquantr149_done383
    inc rx131_rep
  rxquantr149_done383:
  alt134_end357:
    repr_bind_attr_int rx131_cur, rx131_curclass, "$!pos", rx131_pos
    store_lex unicode:"$\x{a2}", rx131_cur
    $P5019 = $P101."MATCH"()
    set __lowered_lex_53, $P5019
.annotate 'line', 214
    box $P5020, 0
    store_dynamic_lex "$*SIGOK", $P5020
    rx131_cur."!cursor_pass"(rx131_pos, "quantified_atom")
    .return (rx131_cur)
  rx131_restart348:
    repr_get_attr_obj rx131_cstack, rx131_cur, rx131_curclass, "$!cstack"
  rx131_fail349:
    unless rx131_bstack, rx131_done347
    pop $I19, rx131_bstack
    if_null rx131_cstack, rx131_cstack_done352
    unless rx131_cstack, rx131_cstack_done352
    dec $I19
    set $P11, rx131_cstack[$I19]
  rx131_cstack_done352:
    pop rx131_rep, rx131_bstack
    pop rx131_pos, rx131_bstack
    pop $I19, rx131_bstack
    lt rx131_pos, -1, rx131_done347
    lt rx131_pos, 0, rx131_fail349
    eq $I19, 0, rx131_fail349
    nqp_islist $I20, rx131_cstack
    unless $I20, rx131_jump350
    elements $I18, rx131_bstack
    le $I18, 0, rx131_cut351
    dec $I18
    set $I18, rx131_bstack[$I18]
  rx131_cut351:
    assign rx131_cstack, $I18
  rx131_jump350:
    jump $I19
  rx131_done347:
    rx131_cur."!cursor_fail"()
    .return (rx131_cur) 
.end
.HLL "nqp"
.namespace []
.sub "separator" :subid("cuid_36_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 217
    .param pmc _lex_param_0 
    .lex "$*VARDEF", $P101 
    .lex "$*SIGOK", $P102 
    .lex utf8:"$\x{a2}", $P103 
    .lex "$/", $P104 
    .lex "self", _lex_param_0 
    .local pmc self 
    set self, _lex_param_0
    .local pmc rx154_start
    .local string rx154_tgt
    .local int rx154_pos
    .local int rx154_off
    .local int rx154_eos
    .local int rx154_rep
    .local pmc rx154_cur
    .local pmc rx154_curclass
    .local pmc rx154_bstack
    .local pmc rx154_cstack
    rx154_start = self."!cursor_start_all"()
    set rx154_cur, rx154_start[0]
    set rx154_tgt, rx154_start[1]
    set rx154_pos, rx154_start[2]
    set rx154_curclass, rx154_start[3]
    set rx154_bstack, rx154_start[4]
    set $I19, rx154_start[5]
    store_lex unicode:"$\x{a2}", rx154_cur
    length rx154_eos, rx154_tgt
    eq $I19, 1, rx154_restart392
    gt rx154_pos, rx154_eos, rx154_fail393
    repr_get_attr_int $I11, self, rx154_curclass, "$!from"
    ne $I11, -1, rxscan155_done399
    goto rxscan155_scan398
  rxscan155_loop397:
    inc rx154_pos
    gt rx154_pos, rx154_eos, rx154_fail393
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!from", rx154_pos
  rxscan155_scan398:
    nqp_rxmark rx154_bstack, rxscan155_loop397, rx154_pos, 0
  rxscan155_done399:
    nqp_rxmark rx154_bstack, rxcap156_fail401, rx154_pos, 0
    add $I11, rx154_pos, 1
    gt $I11, rx154_eos, rx154_fail393
    ord $I11, rx154_tgt, rx154_pos
    ne $I11, 37, rx154_fail393
    add rx154_pos, 1
    nqp_rxmark rx154_bstack, rxquantr157_done403, rx154_pos, 0
  rxquantr157_loop402:
    add $I11, rx154_pos, 1
    gt $I11, rx154_eos, rx154_fail393
    ord $I11, rx154_tgt, rx154_pos
    ne $I11, 37, rx154_fail393
    add rx154_pos, 1
    nqp_rxpeek $I19, rx154_bstack, rxquantr157_done403
    inc $I19
    inc $I19
    set rx154_rep, rx154_bstack[$I19]
    nqp_rxcommit rx154_bstack, rxquantr157_done403
    inc rx154_rep
  rxquantr157_done403:
    nqp_rxpeek $I19, rx154_bstack, rxcap156_fail401
    inc $I19
    set $I11, rx154_bstack[$I19]
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!pos", rx154_pos
    $P11 = rx154_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx154_pos)
    rx154_cstack = rx154_cur."!cursor_capture"($P11, "septype")
    goto rxcap156_done400
  rxcap156_fail401:
    goto rx154_fail393
  rxcap156_done400:
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!pos", rx154_pos
    $P11 = rx154_cur."ws"()
    repr_get_attr_int $I11, $P11, rx154_curclass, "$!pos"
    lt $I11, 0, rx154_fail393
    goto rxsubrule158_pass404
  rxsubrule158_back405:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx154_curclass, "$!pos"
    lt $I11, 0, rx154_fail393
  rxsubrule158_pass404:
    rx154_cstack = rx154_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule158_back405
    push rx154_bstack, $I11
    push rx154_bstack, 0
    push rx154_bstack, rx154_pos
    elements $I11, rx154_cstack
    push rx154_bstack, $I11
    repr_get_attr_int rx154_pos, $P11, rx154_curclass, "$!pos"
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!pos", rx154_pos
    store_lex unicode:"$\x{a2}", rx154_cur
    box $P5001, 0
    set $P101, $P5001
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!pos", rx154_pos
    store_lex unicode:"$\x{a2}", rx154_cur
    box $P5002, 0
    set $P102, $P5002
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!pos", rx154_pos
    $P11 = rx154_cur."quantified_atom"()
    repr_get_attr_int $I11, $P11, rx154_curclass, "$!pos"
    lt $I11, 0, rx154_fail393
    goto rxsubrule159_pass406
  rxsubrule159_back407:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx154_curclass, "$!pos"
    lt $I11, 0, rx154_fail393
  rxsubrule159_pass406:
    rx154_cstack = rx154_cur."!cursor_capture"($P11, "quantified_atom")
    set_addr $I11, rxsubrule159_back407
    push rx154_bstack, $I11
    push rx154_bstack, 0
    push rx154_bstack, rx154_pos
    elements $I11, rx154_cstack
    push rx154_bstack, $I11
    repr_get_attr_int rx154_pos, $P11, rx154_curclass, "$!pos"
    repr_bind_attr_int rx154_cur, rx154_curclass, "$!pos", rx154_pos
    $P11 = rx154_cur."ws"()
    repr_get_attr_int $I11, $P11, rx154_curclass, "$!pos"
    lt $I11, 0, rx154_fail393
    goto rxsubrule160_pass408
  rxsubrule160_back409:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx154_curclass, "$!pos"
    lt $I11, 0, rx154_fail393
  rxsubrule160_pass408:
    rx154_cstack = rx154_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule160_back409
    push rx154_bstack, $I11
    push rx154_bstack, 0
    push rx154_bstack, rx154_pos
    elements $I11, rx154_cstack
    push rx154_bstack, $I11
    repr_get_attr_int rx154_pos, $P11, rx154_curclass, "$!pos"
    rx154_cur."!cursor_pass"(rx154_pos, "separator")
    .return (rx154_cur)
  rx154_restart392:
    repr_get_attr_obj rx154_cstack, rx154_cur, rx154_curclass, "$!cstack"
  rx154_fail393:
    unless rx154_bstack, rx154_done391
    pop $I19, rx154_bstack
    if_null rx154_cstack, rx154_cstack_done396
    unless rx154_cstack, rx154_cstack_done396
    dec $I19
    set $P11, rx154_cstack[$I19]
  rx154_cstack_done396:
    pop rx154_rep, rx154_bstack
    pop rx154_pos, rx154_bstack
    pop $I19, rx154_bstack
    lt rx154_pos, -1, rx154_done391
    lt rx154_pos, 0, rx154_fail393
    eq $I19, 0, rx154_fail393
    nqp_islist $I20, rx154_cstack
    unless $I20, rx154_jump394
    elements $I18, rx154_bstack
    le $I18, 0, rx154_cut395
    dec $I18
    set $I18, rx154_bstack[$I18]
  rx154_cut395:
    assign rx154_cstack, $I18
  rx154_jump394:
    jump $I19
  rx154_done391:
    rx154_cur."!cursor_fail"()
    .return (rx154_cur) 
.end
.HLL "nqp"
.namespace []
.sub "atom" :subid("cuid_37_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 224
    .param pmc __lowered_lex_54 
    .const 'Sub' $P5002 = 'cuid_38_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_55 
    set self, __lowered_lex_54
    .const 'Sub' $P5001 = 'cuid_38_1431289913.64791' 
    capture_lex $P5001
    .local pmc rx161_start
    .local string rx161_tgt
    .local int rx161_pos
    .local int rx161_off
    .local int rx161_eos
    .local int rx161_rep
    .local pmc rx161_cur
    .local pmc rx161_curclass
    .local pmc rx161_bstack
    .local pmc rx161_cstack
    rx161_start = self."!cursor_start_all"()
    set rx161_cur, rx161_start[0]
    set rx161_tgt, rx161_start[1]
    set rx161_pos, rx161_start[2]
    set rx161_curclass, rx161_start[3]
    set rx161_bstack, rx161_start[4]
    set $I19, rx161_start[5]
    store_lex unicode:"$\x{a2}", rx161_cur
    length rx161_eos, rx161_tgt
    eq $I19, 1, rx161_restart412
    gt rx161_pos, rx161_eos, rx161_fail413
    repr_get_attr_int $I11, self, rx161_curclass, "$!from"
    ne $I11, -1, rxscan162_done419
    goto rxscan162_scan418
  rxscan162_loop417:
    inc rx161_pos
    gt rx161_pos, rx161_eos, rx161_fail413
    repr_bind_attr_int rx161_cur, rx161_curclass, "$!from", rx161_pos
  rxscan162_scan418:
    nqp_rxmark rx161_bstack, rxscan162_loop417, rx161_pos, 0
  rxscan162_done419:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt163_0421
    nqp_push_label $P11, alt163_1427
    nqp_rxmark rx161_bstack, alt163_end420, -1, 0
    rx161_cur."!alt"(rx161_pos, "alt_nfa__8_1431289914.13299", $P11)
    goto rx161_fail413
  alt163_0421:
    ge rx161_pos, rx161_eos, rx161_fail413
    is_cclass $I11, .CCLASS_WORD, rx161_tgt, rx161_pos
    unless $I11, rx161_fail413
    inc rx161_pos
    nqp_rxmark rx161_bstack, rxquantr164_done423, rx161_pos, 0
  rxquantr164_loop422:
  rxquantg165_loop424:
    ge rx161_pos, rx161_eos, rx161_fail413
    is_cclass $I11, .CCLASS_WORD, rx161_tgt, rx161_pos
    unless $I11, rx161_fail413
    inc rx161_pos
    nqp_rxmark rx161_bstack, rxquantg165_done425, rx161_pos, rx161_rep
    goto rxquantg165_loop424
  rxquantg165_done425:
    ge rx161_pos, rx161_eos, rx161_fail413
    is_cclass $I11, .CCLASS_WORD, rx161_tgt, rx161_pos
    unless $I11, rx161_fail413
    nqp_rxpeek $I19, rx161_bstack, rxquantr164_done423
    inc $I19
    inc $I19
    set rx161_rep, rx161_bstack[$I19]
    nqp_rxcommit rx161_bstack, rxquantr164_done423
    inc rx161_rep
  rxquantr164_done423:
    repr_bind_attr_int rx161_cur, rx161_curclass, "$!pos", rx161_pos
    $P11 = rx161_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx161_curclass, "$!pos"
    lt $I11, 0, rx161_fail413
    repr_get_attr_int rx161_pos, $P11, rx161_curclass, "$!pos"
    goto alt163_end420
  alt163_1427:
    repr_bind_attr_int rx161_cur, rx161_curclass, "$!pos", rx161_pos
    $P11 = rx161_cur."metachar"()
    repr_get_attr_int $I11, $P11, rx161_curclass, "$!pos"
    lt $I11, 0, rx161_fail413
    nqp_rxmark rx161_bstack, rxsubrule167_pass428, -1, 0
  rxsubrule167_pass428:
    rx161_cstack = rx161_cur."!cursor_capture"($P11, "metachar")
    repr_get_attr_int rx161_pos, $P11, rx161_curclass, "$!pos"
    goto alt163_end420
  alt163_end420:
    nqp_rxcommit rx161_bstack, alt163_end420
    rx161_cur."!cursor_pass"(rx161_pos, "atom")
    .return (rx161_cur)
  rx161_restart412:
    repr_get_attr_obj rx161_cstack, rx161_cur, rx161_curclass, "$!cstack"
  rx161_fail413:
    unless rx161_bstack, rx161_done411
    pop $I19, rx161_bstack
    if_null rx161_cstack, rx161_cstack_done416
    unless rx161_cstack, rx161_cstack_done416
    dec $I19
    set $P11, rx161_cstack[$I19]
  rx161_cstack_done416:
    pop rx161_rep, rx161_bstack
    pop rx161_pos, rx161_bstack
    pop $I19, rx161_bstack
    lt rx161_pos, -1, rx161_done411
    lt rx161_pos, 0, rx161_fail413
    eq $I19, 0, rx161_fail413
    nqp_islist $I20, rx161_cstack
    unless $I20, rx161_jump414
    elements $I18, rx161_bstack
    le $I18, 0, rx161_cut415
    dec $I18
    set $I18, rx161_bstack[$I18]
  rx161_cut415:
    assign rx161_cstack, $I18
  rx161_jump414:
    jump $I19
  rx161_done411:
    rx161_cur."!cursor_fail"()
    .return (rx161_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_38_1431289913.64791") :anon :lex :outer("cuid_37_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "sigmaybe" :subid("cuid_39_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 232
    .param pmc self 
    $P5001 = self."!protoregex"("sigmaybe")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "sigmaybe:sym<normspace>" :subid("cuid_40_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 234
    .param pmc __lowered_lex_56 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_57 
    .local pmc fb_tmp_10 
    set self, __lowered_lex_56
    .local pmc rx168_start
    .local string rx168_tgt
    .local int rx168_pos
    .local int rx168_off
    .local int rx168_eos
    .local int rx168_rep
    .local pmc rx168_cur
    .local pmc rx168_curclass
    .local pmc rx168_bstack
    .local pmc rx168_cstack
    rx168_start = self."!cursor_start_all"()
    set rx168_cur, rx168_start[0]
    set rx168_tgt, rx168_start[1]
    set rx168_pos, rx168_start[2]
    set rx168_curclass, rx168_start[3]
    set rx168_bstack, rx168_start[4]
    set $I19, rx168_start[5]
    store_lex unicode:"$\x{a2}", rx168_cur
    length rx168_eos, rx168_tgt
    eq $I19, 1, rx168_restart431
    gt rx168_pos, rx168_eos, rx168_fail432
    repr_get_attr_int $I11, self, rx168_curclass, "$!from"
    ne $I11, -1, rxscan169_done438
    goto rxscan169_scan437
  rxscan169_loop436:
    inc rx168_pos
    gt rx168_pos, rx168_eos, rx168_fail432
    repr_bind_attr_int rx168_cur, rx168_curclass, "$!from", rx168_pos
  rxscan169_scan437:
    nqp_rxmark rx168_bstack, rxscan169_loop436, rx168_pos, 0
  rxscan169_done438:
    repr_bind_attr_int rx168_cur, rx168_curclass, "$!pos", rx168_pos
    store_lex unicode:"$\x{a2}", rx168_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_57, $P5001
.annotate 'line', 235
    find_dynamic_lex $P5002, "$*SIGOK"
    unless_null $P5002, fallback439
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5003, $P5004
    set fb_tmp_10, $P5003
    repr_defined $I5001, fb_tmp_10
    unless $I5001 goto if170_else440 
    set $P5005, fb_tmp_10["$SIGOK"]
    set $P5007, $P5005
    goto if170_end441
  if170_else440:
    null $P5006
    set $P5007, $P5006
  if170_end441:
    unless_null $P5007, vivi_171442
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5007, $P5008
  vivi_171442:
    unless_null $P5007, vivi_172443
    die "Contextual $*SIGOK not found"
    box $P5009, "Contextual $*SIGOK not found"
    set $P5007, $P5009
  vivi_172443:
    set $P5002, $P5007
  fallback439:
    if $P5002, rx168_fail432
    repr_bind_attr_int rx168_cur, rx168_curclass, "$!pos", rx168_pos
    $P11 = rx168_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx168_curclass, "$!pos"
    lt $I11, 0, rx168_fail432
    nqp_rxmark rx168_bstack, rxsubrule173_pass444, -1, 0
  rxsubrule173_pass444:
    rx168_cstack = rx168_cur."!cursor_capture"($P11, "normspace")
    repr_get_attr_int rx168_pos, $P11, rx168_curclass, "$!pos"
    rx168_cur."!cursor_pass"(rx168_pos, "sigmaybe:sym<normspace>")
    .return (rx168_cur)
  rx168_restart431:
    repr_get_attr_obj rx168_cstack, rx168_cur, rx168_curclass, "$!cstack"
  rx168_fail432:
    unless rx168_bstack, rx168_done430
    pop $I19, rx168_bstack
    if_null rx168_cstack, rx168_cstack_done435
    unless rx168_cstack, rx168_cstack_done435
    dec $I19
    set $P11, rx168_cstack[$I19]
  rx168_cstack_done435:
    pop rx168_rep, rx168_bstack
    pop rx168_pos, rx168_bstack
    pop $I19, rx168_bstack
    lt rx168_pos, -1, rx168_done430
    lt rx168_pos, 0, rx168_fail432
    eq $I19, 0, rx168_fail432
    nqp_islist $I20, rx168_cstack
    unless $I20, rx168_jump433
    elements $I18, rx168_bstack
    le $I18, 0, rx168_cut434
    dec $I18
    set $I18, rx168_bstack[$I18]
  rx168_cut434:
    assign rx168_cstack, $I18
  rx168_jump433:
    jump $I19
  rx168_done430:
    rx168_cur."!cursor_fail"()
    .return (rx168_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigmaybe:sym<sigwhite>" :subid("cuid_41_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 238
    .param pmc __lowered_lex_58 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_59 
    .local pmc fb_tmp_11 
    set self, __lowered_lex_58
    .local pmc rx174_start
    .local string rx174_tgt
    .local int rx174_pos
    .local int rx174_off
    .local int rx174_eos
    .local int rx174_rep
    .local pmc rx174_cur
    .local pmc rx174_curclass
    .local pmc rx174_bstack
    .local pmc rx174_cstack
    rx174_start = self."!cursor_start_all"()
    set rx174_cur, rx174_start[0]
    set rx174_tgt, rx174_start[1]
    set rx174_pos, rx174_start[2]
    set rx174_curclass, rx174_start[3]
    set rx174_bstack, rx174_start[4]
    set $I19, rx174_start[5]
    store_lex unicode:"$\x{a2}", rx174_cur
    length rx174_eos, rx174_tgt
    eq $I19, 1, rx174_restart447
    gt rx174_pos, rx174_eos, rx174_fail448
    repr_get_attr_int $I11, self, rx174_curclass, "$!from"
    ne $I11, -1, rxscan175_done454
    goto rxscan175_scan453
  rxscan175_loop452:
    inc rx174_pos
    gt rx174_pos, rx174_eos, rx174_fail448
    repr_bind_attr_int rx174_cur, rx174_curclass, "$!from", rx174_pos
  rxscan175_scan453:
    nqp_rxmark rx174_bstack, rxscan175_loop452, rx174_pos, 0
  rxscan175_done454:
    repr_bind_attr_int rx174_cur, rx174_curclass, "$!pos", rx174_pos
    store_lex unicode:"$\x{a2}", rx174_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_59, $P5001
.annotate 'line', 239
    find_dynamic_lex $P5002, "$*SIGOK"
    unless_null $P5002, fallback455
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5003, $P5004
    set fb_tmp_11, $P5003
    repr_defined $I5001, fb_tmp_11
    unless $I5001 goto if176_else456 
    set $P5005, fb_tmp_11["$SIGOK"]
    set $P5007, $P5005
    goto if176_end457
  if176_else456:
    null $P5006
    set $P5007, $P5006
  if176_end457:
    unless_null $P5007, vivi_177458
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5007, $P5008
  vivi_177458:
    unless_null $P5007, vivi_178459
    die "Contextual $*SIGOK not found"
    box $P5009, "Contextual $*SIGOK not found"
    set $P5007, $P5009
  vivi_178459:
    set $P5002, $P5007
  fallback455:
    unless $P5002, rx174_fail448
    repr_bind_attr_int rx174_cur, rx174_curclass, "$!pos", rx174_pos
    $P11 = rx174_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx174_curclass, "$!pos"
    lt $I11, 0, rx174_fail448
    nqp_rxmark rx174_bstack, rxsubrule179_pass460, -1, 0
  rxsubrule179_pass460:
    rx174_cstack = rx174_cur."!cursor_capture"($P11, "normspace")
    repr_get_attr_int rx174_pos, $P11, rx174_curclass, "$!pos"
    rx174_cur."!cursor_pass"(rx174_pos, "sigmaybe:sym<sigwhite>")
    .return (rx174_cur)
  rx174_restart447:
    repr_get_attr_obj rx174_cstack, rx174_cur, rx174_curclass, "$!cstack"
  rx174_fail448:
    unless rx174_bstack, rx174_done446
    pop $I19, rx174_bstack
    if_null rx174_cstack, rx174_cstack_done451
    unless rx174_cstack, rx174_cstack_done451
    dec $I19
    set $P11, rx174_cstack[$I19]
  rx174_cstack_done451:
    pop rx174_rep, rx174_bstack
    pop rx174_pos, rx174_bstack
    pop $I19, rx174_bstack
    lt rx174_pos, -1, rx174_done446
    lt rx174_pos, 0, rx174_fail448
    eq $I19, 0, rx174_fail448
    nqp_islist $I20, rx174_cstack
    unless $I20, rx174_jump449
    elements $I18, rx174_bstack
    le $I18, 0, rx174_cut450
    dec $I18
    set $I18, rx174_bstack[$I18]
  rx174_cut450:
    assign rx174_cstack, $I18
  rx174_jump449:
    jump $I19
  rx174_done446:
    rx174_cur."!cursor_fail"()
    .return (rx174_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier" :subid("cuid_42_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 242
    .param pmc self 
    $P5001 = self."!protoregex"("quantifier")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<%>" :subid("cuid_43_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 243
    .param pmc __lowered_lex_60 
    .const 'Sub' $P5009 = 'cuid_44_1431289913.64791' 
    capture_lex $P5009 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_61 
    .local pmc fb_tmp_12 
    set self, __lowered_lex_60
    .local pmc rx180_start
    .local string rx180_tgt
    .local int rx180_pos
    .local int rx180_off
    .local int rx180_eos
    .local int rx180_rep
    .local pmc rx180_cur
    .local pmc rx180_curclass
    .local pmc rx180_bstack
    .local pmc rx180_cstack
    rx180_start = self."!cursor_start_all"()
    set rx180_cur, rx180_start[0]
    set rx180_tgt, rx180_start[1]
    set rx180_pos, rx180_start[2]
    set rx180_curclass, rx180_start[3]
    set rx180_bstack, rx180_start[4]
    set $I19, rx180_start[5]
    store_lex unicode:"$\x{a2}", rx180_cur
    length rx180_eos, rx180_tgt
    eq $I19, 1, rx180_restart463
    gt rx180_pos, rx180_eos, rx180_fail464
    repr_get_attr_int $I11, self, rx180_curclass, "$!from"
    ne $I11, -1, rxscan181_done470
    goto rxscan181_scan469
  rxscan181_loop468:
    inc rx180_pos
    gt rx180_pos, rx180_eos, rx180_fail464
    repr_bind_attr_int rx180_cur, rx180_curclass, "$!from", rx180_pos
  rxscan181_scan469:
    nqp_rxmark rx180_bstack, rxscan181_loop468, rx180_pos, 0
  rxscan181_done470:
    .const 'Sub' $P5001 = 'cuid_44_1431289913.64791' 
    capture_lex $P5001
    repr_bind_attr_int rx180_cur, rx180_curclass, "$!pos", rx180_pos
    $P11 = rx180_cur.$P5001()
    repr_get_attr_int $I11, $P11, rx180_curclass, "$!pos"
    lt $I11, 0, rx180_fail464
    nqp_rxmark rx180_bstack, rxsubrule184_pass480, -1, 0
  rxsubrule184_pass480:
    rx180_cstack = rx180_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx180_pos, $P11, rx180_curclass, "$!pos"
    repr_bind_attr_int rx180_cur, rx180_curclass, "$!pos", rx180_pos
    store_lex unicode:"$\x{a2}", rx180_cur
    $P5002 = $P101."MATCH"()
    set __lowered_lex_61, $P5002
.annotate 'line', 244
.annotate 'line', 245
    $P5003 = __lowered_lex_61."CURSOR"()
    set fb_tmp_12, __lowered_lex_61
    repr_defined $I5001, fb_tmp_12
    unless $I5001 goto if185_else481 
    set $P5004, fb_tmp_12[0]
    set $P5006, $P5004
    goto if185_end482
  if185_else481:
    null $P5005
    set $P5006, $P5005
  if185_end482:
    unless_null $P5006, vivi_186483
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_186483:
    set $S5002, $P5006
    concat $S5001, "Missing quantifier on the left argument of ", $S5002
    $P5008 = $P5003."panic"($S5001)
    rx180_cur."!cursor_pass"(rx180_pos, "quantifier:sym<%>")
    .return (rx180_cur)
  rx180_restart463:
    repr_get_attr_obj rx180_cstack, rx180_cur, rx180_curclass, "$!cstack"
  rx180_fail464:
    unless rx180_bstack, rx180_done462
    pop $I19, rx180_bstack
    if_null rx180_cstack, rx180_cstack_done467
    unless rx180_cstack, rx180_cstack_done467
    dec $I19
    set $P11, rx180_cstack[$I19]
  rx180_cstack_done467:
    pop rx180_rep, rx180_bstack
    pop rx180_pos, rx180_bstack
    pop $I19, rx180_bstack
    lt rx180_pos, -1, rx180_done462
    lt rx180_pos, 0, rx180_fail464
    eq $I19, 0, rx180_fail464
    nqp_islist $I20, rx180_cstack
    unless $I20, rx180_jump465
    elements $I18, rx180_bstack
    le $I18, 0, rx180_cut466
    dec $I18
    set $I18, rx180_bstack[$I18]
  rx180_cut466:
    assign rx180_cstack, $I18
  rx180_jump465:
    jump $I19
  rx180_done462:
    rx180_cur."!cursor_fail"()
    .return (rx180_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_44_1431289913.64791") :anon :lex :outer("cuid_43_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx182_start
    .local string rx182_tgt
    .local int rx182_pos
    .local int rx182_off
    .local int rx182_eos
    .local int rx182_rep
    .local pmc rx182_cur
    .local pmc rx182_curclass
    .local pmc rx182_bstack
    .local pmc rx182_cstack
    rx182_start = self."!cursor_start_all"()
    set rx182_cur, rx182_start[0]
    set rx182_tgt, rx182_start[1]
    set rx182_pos, rx182_start[2]
    set rx182_curclass, rx182_start[3]
    set rx182_bstack, rx182_start[4]
    set $I19, rx182_start[5]
    store_lex unicode:"$\x{a2}", rx182_cur
    length rx182_eos, rx182_tgt
    eq $I19, 1, rx182_restart473
    gt rx182_pos, rx182_eos, rx182_fail474
    add $I11, rx182_pos, 1
    gt $I11, rx182_eos, rx182_fail474
    ord $I11, rx182_tgt, rx182_pos
    ne $I11, 37, rx182_fail474
    add rx182_pos, 1
    nqp_rxmark rx182_bstack, rxquantr183_done479, rx182_pos, 0
  rxquantr183_loop478:
    add $I11, rx182_pos, 1
    gt $I11, rx182_eos, rx182_fail474
    ord $I11, rx182_tgt, rx182_pos
    ne $I11, 37, rx182_fail474
    add rx182_pos, 1
    nqp_rxpeek $I19, rx182_bstack, rxquantr183_done479
    inc $I19
    inc $I19
    set rx182_rep, rx182_bstack[$I19]
    nqp_rxcommit rx182_bstack, rxquantr183_done479
    inc rx182_rep
  rxquantr183_done479:
    rx182_cur."!cursor_pass"(rx182_pos)
    .return (rx182_cur)
  rx182_restart473:
    repr_get_attr_obj rx182_cstack, rx182_cur, rx182_curclass, "$!cstack"
  rx182_fail474:
    unless rx182_bstack, rx182_done472
    pop $I19, rx182_bstack
    if_null rx182_cstack, rx182_cstack_done477
    unless rx182_cstack, rx182_cstack_done477
    dec $I19
    set $P11, rx182_cstack[$I19]
  rx182_cstack_done477:
    pop rx182_rep, rx182_bstack
    pop rx182_pos, rx182_bstack
    pop $I19, rx182_bstack
    lt rx182_pos, -1, rx182_done472
    lt rx182_pos, 0, rx182_fail474
    eq $I19, 0, rx182_fail474
    nqp_islist $I20, rx182_cstack
    unless $I20, rx182_jump475
    elements $I18, rx182_bstack
    le $I18, 0, rx182_cut476
    dec $I18
    set $I18, rx182_bstack[$I18]
  rx182_cut476:
    assign rx182_cstack, $I18
  rx182_jump475:
    jump $I19
  rx182_done472:
    rx182_cur."!cursor_fail"()
    .return (rx182_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<*>" :subid("cuid_45_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 248
    .param pmc __lowered_lex_62 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_63 
    set self, __lowered_lex_62
    .local pmc rx187_start
    .local string rx187_tgt
    .local int rx187_pos
    .local int rx187_off
    .local int rx187_eos
    .local int rx187_rep
    .local pmc rx187_cur
    .local pmc rx187_curclass
    .local pmc rx187_bstack
    .local pmc rx187_cstack
    rx187_start = self."!cursor_start_all"()
    set rx187_cur, rx187_start[0]
    set rx187_tgt, rx187_start[1]
    set rx187_pos, rx187_start[2]
    set rx187_curclass, rx187_start[3]
    set rx187_bstack, rx187_start[4]
    set $I19, rx187_start[5]
    store_lex unicode:"$\x{a2}", rx187_cur
    length rx187_eos, rx187_tgt
    eq $I19, 1, rx187_restart486
    gt rx187_pos, rx187_eos, rx187_fail487
    repr_get_attr_int $I11, self, rx187_curclass, "$!from"
    ne $I11, -1, rxscan188_done493
    goto rxscan188_scan492
  rxscan188_loop491:
    inc rx187_pos
    gt rx187_pos, rx187_eos, rx187_fail487
    repr_bind_attr_int rx187_cur, rx187_curclass, "$!from", rx187_pos
  rxscan188_scan492:
    nqp_rxmark rx187_bstack, rxscan188_loop491, rx187_pos, 0
  rxscan188_done493:
    nqp_rxmark rx187_bstack, rxcap189_fail495, rx187_pos, 0
    add $I11, rx187_pos, 1
    gt $I11, rx187_eos, rx187_fail487
    ord $I11, rx187_tgt, rx187_pos
    ne $I11, 42, rx187_fail487
    add rx187_pos, 1
    nqp_rxpeek $I19, rx187_bstack, rxcap189_fail495
    inc $I19
    set $I11, rx187_bstack[$I19]
    repr_bind_attr_int rx187_cur, rx187_curclass, "$!pos", rx187_pos
    $P11 = rx187_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx187_pos)
    rx187_cstack = rx187_cur."!cursor_capture"($P11, "sym")
    goto rxcap189_done494
  rxcap189_fail495:
    goto rx187_fail487
  rxcap189_done494:
    repr_bind_attr_int rx187_cur, rx187_curclass, "$!pos", rx187_pos
    $P11 = rx187_cur."backmod"()
    repr_get_attr_int $I11, $P11, rx187_curclass, "$!pos"
    lt $I11, 0, rx187_fail487
    nqp_rxmark rx187_bstack, rxsubrule190_pass496, -1, 0
  rxsubrule190_pass496:
    rx187_cstack = rx187_cur."!cursor_capture"($P11, "backmod")
    repr_get_attr_int rx187_pos, $P11, rx187_curclass, "$!pos"
    rx187_cur."!cursor_pass"(rx187_pos, "quantifier:sym<*>")
    .return (rx187_cur)
  rx187_restart486:
    repr_get_attr_obj rx187_cstack, rx187_cur, rx187_curclass, "$!cstack"
  rx187_fail487:
    unless rx187_bstack, rx187_done485
    pop $I19, rx187_bstack
    if_null rx187_cstack, rx187_cstack_done490
    unless rx187_cstack, rx187_cstack_done490
    dec $I19
    set $P11, rx187_cstack[$I19]
  rx187_cstack_done490:
    pop rx187_rep, rx187_bstack
    pop rx187_pos, rx187_bstack
    pop $I19, rx187_bstack
    lt rx187_pos, -1, rx187_done485
    lt rx187_pos, 0, rx187_fail487
    eq $I19, 0, rx187_fail487
    nqp_islist $I20, rx187_cstack
    unless $I20, rx187_jump488
    elements $I18, rx187_bstack
    le $I18, 0, rx187_cut489
    dec $I18
    set $I18, rx187_bstack[$I18]
  rx187_cut489:
    assign rx187_cstack, $I18
  rx187_jump488:
    jump $I19
  rx187_done485:
    rx187_cur."!cursor_fail"()
    .return (rx187_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<+>" :subid("cuid_46_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 249
    .param pmc __lowered_lex_64 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_65 
    set self, __lowered_lex_64
    .local pmc rx191_start
    .local string rx191_tgt
    .local int rx191_pos
    .local int rx191_off
    .local int rx191_eos
    .local int rx191_rep
    .local pmc rx191_cur
    .local pmc rx191_curclass
    .local pmc rx191_bstack
    .local pmc rx191_cstack
    rx191_start = self."!cursor_start_all"()
    set rx191_cur, rx191_start[0]
    set rx191_tgt, rx191_start[1]
    set rx191_pos, rx191_start[2]
    set rx191_curclass, rx191_start[3]
    set rx191_bstack, rx191_start[4]
    set $I19, rx191_start[5]
    store_lex unicode:"$\x{a2}", rx191_cur
    length rx191_eos, rx191_tgt
    eq $I19, 1, rx191_restart499
    gt rx191_pos, rx191_eos, rx191_fail500
    repr_get_attr_int $I11, self, rx191_curclass, "$!from"
    ne $I11, -1, rxscan192_done506
    goto rxscan192_scan505
  rxscan192_loop504:
    inc rx191_pos
    gt rx191_pos, rx191_eos, rx191_fail500
    repr_bind_attr_int rx191_cur, rx191_curclass, "$!from", rx191_pos
  rxscan192_scan505:
    nqp_rxmark rx191_bstack, rxscan192_loop504, rx191_pos, 0
  rxscan192_done506:
    nqp_rxmark rx191_bstack, rxcap193_fail508, rx191_pos, 0
    add $I11, rx191_pos, 1
    gt $I11, rx191_eos, rx191_fail500
    ord $I11, rx191_tgt, rx191_pos
    ne $I11, 43, rx191_fail500
    add rx191_pos, 1
    nqp_rxpeek $I19, rx191_bstack, rxcap193_fail508
    inc $I19
    set $I11, rx191_bstack[$I19]
    repr_bind_attr_int rx191_cur, rx191_curclass, "$!pos", rx191_pos
    $P11 = rx191_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx191_pos)
    rx191_cstack = rx191_cur."!cursor_capture"($P11, "sym")
    goto rxcap193_done507
  rxcap193_fail508:
    goto rx191_fail500
  rxcap193_done507:
    repr_bind_attr_int rx191_cur, rx191_curclass, "$!pos", rx191_pos
    $P11 = rx191_cur."backmod"()
    repr_get_attr_int $I11, $P11, rx191_curclass, "$!pos"
    lt $I11, 0, rx191_fail500
    nqp_rxmark rx191_bstack, rxsubrule194_pass509, -1, 0
  rxsubrule194_pass509:
    rx191_cstack = rx191_cur."!cursor_capture"($P11, "backmod")
    repr_get_attr_int rx191_pos, $P11, rx191_curclass, "$!pos"
    rx191_cur."!cursor_pass"(rx191_pos, "quantifier:sym<+>")
    .return (rx191_cur)
  rx191_restart499:
    repr_get_attr_obj rx191_cstack, rx191_cur, rx191_curclass, "$!cstack"
  rx191_fail500:
    unless rx191_bstack, rx191_done498
    pop $I19, rx191_bstack
    if_null rx191_cstack, rx191_cstack_done503
    unless rx191_cstack, rx191_cstack_done503
    dec $I19
    set $P11, rx191_cstack[$I19]
  rx191_cstack_done503:
    pop rx191_rep, rx191_bstack
    pop rx191_pos, rx191_bstack
    pop $I19, rx191_bstack
    lt rx191_pos, -1, rx191_done498
    lt rx191_pos, 0, rx191_fail500
    eq $I19, 0, rx191_fail500
    nqp_islist $I20, rx191_cstack
    unless $I20, rx191_jump501
    elements $I18, rx191_bstack
    le $I18, 0, rx191_cut502
    dec $I18
    set $I18, rx191_bstack[$I18]
  rx191_cut502:
    assign rx191_cstack, $I18
  rx191_jump501:
    jump $I19
  rx191_done498:
    rx191_cur."!cursor_fail"()
    .return (rx191_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<?>" :subid("cuid_47_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 250
    .param pmc __lowered_lex_66 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_67 
    set self, __lowered_lex_66
    .local pmc rx195_start
    .local string rx195_tgt
    .local int rx195_pos
    .local int rx195_off
    .local int rx195_eos
    .local int rx195_rep
    .local pmc rx195_cur
    .local pmc rx195_curclass
    .local pmc rx195_bstack
    .local pmc rx195_cstack
    rx195_start = self."!cursor_start_all"()
    set rx195_cur, rx195_start[0]
    set rx195_tgt, rx195_start[1]
    set rx195_pos, rx195_start[2]
    set rx195_curclass, rx195_start[3]
    set rx195_bstack, rx195_start[4]
    set $I19, rx195_start[5]
    store_lex unicode:"$\x{a2}", rx195_cur
    length rx195_eos, rx195_tgt
    eq $I19, 1, rx195_restart512
    gt rx195_pos, rx195_eos, rx195_fail513
    repr_get_attr_int $I11, self, rx195_curclass, "$!from"
    ne $I11, -1, rxscan196_done519
    goto rxscan196_scan518
  rxscan196_loop517:
    inc rx195_pos
    gt rx195_pos, rx195_eos, rx195_fail513
    repr_bind_attr_int rx195_cur, rx195_curclass, "$!from", rx195_pos
  rxscan196_scan518:
    nqp_rxmark rx195_bstack, rxscan196_loop517, rx195_pos, 0
  rxscan196_done519:
    nqp_rxmark rx195_bstack, rxcap197_fail521, rx195_pos, 0
    add $I11, rx195_pos, 1
    gt $I11, rx195_eos, rx195_fail513
    ord $I11, rx195_tgt, rx195_pos
    ne $I11, 63, rx195_fail513
    add rx195_pos, 1
    nqp_rxpeek $I19, rx195_bstack, rxcap197_fail521
    inc $I19
    set $I11, rx195_bstack[$I19]
    repr_bind_attr_int rx195_cur, rx195_curclass, "$!pos", rx195_pos
    $P11 = rx195_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx195_pos)
    rx195_cstack = rx195_cur."!cursor_capture"($P11, "sym")
    goto rxcap197_done520
  rxcap197_fail521:
    goto rx195_fail513
  rxcap197_done520:
    repr_bind_attr_int rx195_cur, rx195_curclass, "$!pos", rx195_pos
    $P11 = rx195_cur."backmod"()
    repr_get_attr_int $I11, $P11, rx195_curclass, "$!pos"
    lt $I11, 0, rx195_fail513
    nqp_rxmark rx195_bstack, rxsubrule198_pass522, -1, 0
  rxsubrule198_pass522:
    rx195_cstack = rx195_cur."!cursor_capture"($P11, "backmod")
    repr_get_attr_int rx195_pos, $P11, rx195_curclass, "$!pos"
    rx195_cur."!cursor_pass"(rx195_pos, "quantifier:sym<?>")
    .return (rx195_cur)
  rx195_restart512:
    repr_get_attr_obj rx195_cstack, rx195_cur, rx195_curclass, "$!cstack"
  rx195_fail513:
    unless rx195_bstack, rx195_done511
    pop $I19, rx195_bstack
    if_null rx195_cstack, rx195_cstack_done516
    unless rx195_cstack, rx195_cstack_done516
    dec $I19
    set $P11, rx195_cstack[$I19]
  rx195_cstack_done516:
    pop rx195_rep, rx195_bstack
    pop rx195_pos, rx195_bstack
    pop $I19, rx195_bstack
    lt rx195_pos, -1, rx195_done511
    lt rx195_pos, 0, rx195_fail513
    eq $I19, 0, rx195_fail513
    nqp_islist $I20, rx195_cstack
    unless $I20, rx195_jump514
    elements $I18, rx195_bstack
    le $I18, 0, rx195_cut515
    dec $I18
    set $I18, rx195_bstack[$I18]
  rx195_cut515:
    assign rx195_cstack, $I18
  rx195_jump514:
    jump $I19
  rx195_done511:
    rx195_cur."!cursor_fail"()
    .return (rx195_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<{N,M}>" :subid("cuid_48_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 251
    .param pmc __lowered_lex_68 
    .const 'Sub' $P5006 = 'cuid_49_1431289913.64791' 
    capture_lex $P5006 
    .const 'Sub' $P5006 = 'cuid_50_1431289913.64791' 
    capture_lex $P5006 
    .const 'Sub' $P5006 = 'cuid_51_1431289913.64791' 
    capture_lex $P5006 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_69 
    set self, __lowered_lex_68
    .local pmc rx199_start
    .local string rx199_tgt
    .local int rx199_pos
    .local int rx199_off
    .local int rx199_eos
    .local int rx199_rep
    .local pmc rx199_cur
    .local pmc rx199_curclass
    .local pmc rx199_bstack
    .local pmc rx199_cstack
    rx199_start = self."!cursor_start_all"()
    set rx199_cur, rx199_start[0]
    set rx199_tgt, rx199_start[1]
    set rx199_pos, rx199_start[2]
    set rx199_curclass, rx199_start[3]
    set rx199_bstack, rx199_start[4]
    set $I19, rx199_start[5]
    store_lex unicode:"$\x{a2}", rx199_cur
    length rx199_eos, rx199_tgt
    eq $I19, 1, rx199_restart525
    gt rx199_pos, rx199_eos, rx199_fail526
    repr_get_attr_int $I11, self, rx199_curclass, "$!from"
    ne $I11, -1, rxscan200_done532
    goto rxscan200_scan531
  rxscan200_loop530:
    inc rx199_pos
    gt rx199_pos, rx199_eos, rx199_fail526
    repr_bind_attr_int rx199_cur, rx199_curclass, "$!from", rx199_pos
  rxscan200_scan531:
    nqp_rxmark rx199_bstack, rxscan200_loop530, rx199_pos, 0
  rxscan200_done532:
    repr_bind_attr_int rx199_cur, rx199_curclass, "$!pos", rx199_pos
    store_lex unicode:"$\x{a2}", rx199_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_69, $P5001
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    add $I11, rx199_pos, 1
    gt $I11, rx199_eos, rx199_fail526
    ord $I11, rx199_tgt, rx199_pos
    ne $I11, 123, rx199_fail526
    add rx199_pos, 1
    .const 'Sub' $P5003 = 'cuid_49_1431289913.64791' 
    capture_lex $P5003
    repr_bind_attr_int rx199_cur, rx199_curclass, "$!pos", rx199_pos
    $P11 = rx199_cur.$P5003()
    repr_get_attr_int $I11, $P11, rx199_curclass, "$!pos"
    lt $I11, 0, rx199_fail526
    nqp_rxmark rx199_bstack, rxsubrule203_pass542, -1, 0
  rxsubrule203_pass542:
    rx199_cstack = rx199_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx199_pos, $P11, rx199_curclass, "$!pos"
    .const 'Sub' $P5004 = 'cuid_50_1431289913.64791' 
    capture_lex $P5004
    repr_bind_attr_int rx199_cur, rx199_curclass, "$!pos", rx199_pos
    $P11 = rx199_cur.$P5004()
    repr_get_attr_int $I11, $P11, rx199_curclass, "$!pos"
    lt $I11, 0, rx199_fail526
    nqp_rxmark rx199_bstack, rxsubrule206_pass552, -1, 0
  rxsubrule206_pass552:
    rx199_cstack = rx199_cur."!cursor_capture"($P11, "1")
    repr_get_attr_int rx199_pos, $P11, rx199_curclass, "$!pos"
    .const 'Sub' $P5005 = 'cuid_51_1431289913.64791' 
    capture_lex $P5005
    repr_bind_attr_int rx199_cur, rx199_curclass, "$!pos", rx199_pos
    $P11 = rx199_cur.$P5005()
    repr_get_attr_int $I11, $P11, rx199_curclass, "$!pos"
    lt $I11, 0, rx199_fail526
    nqp_rxmark rx199_bstack, rxsubrule209_pass562, -1, 0
  rxsubrule209_pass562:
    rx199_cstack = rx199_cur."!cursor_capture"($P11, "2")
    repr_get_attr_int rx199_pos, $P11, rx199_curclass, "$!pos"
    add $I11, rx199_pos, 1
    gt $I11, rx199_eos, rx199_fail526
    ord $I11, rx199_tgt, rx199_pos
    ne $I11, 125, rx199_fail526
    add rx199_pos, 1
    repr_bind_attr_int rx199_cur, rx199_curclass, "$!pos", rx199_pos
    $P11 = rx199_cur."obs"("{N,M} as general quantifier", "** N..M (or ** N..*)")
    repr_get_attr_int $I11, $P11, rx199_curclass, "$!pos"
    lt $I11, 0, rx199_fail526
    repr_get_attr_int rx199_pos, $P11, rx199_curclass, "$!pos"
    rx199_cur."!cursor_pass"(rx199_pos, "quantifier:sym<{N,M}>")
    .return (rx199_cur)
  rx199_restart525:
    repr_get_attr_obj rx199_cstack, rx199_cur, rx199_curclass, "$!cstack"
  rx199_fail526:
    unless rx199_bstack, rx199_done524
    pop $I19, rx199_bstack
    if_null rx199_cstack, rx199_cstack_done529
    unless rx199_cstack, rx199_cstack_done529
    dec $I19
    set $P11, rx199_cstack[$I19]
  rx199_cstack_done529:
    pop rx199_rep, rx199_bstack
    pop rx199_pos, rx199_bstack
    pop $I19, rx199_bstack
    lt rx199_pos, -1, rx199_done524
    lt rx199_pos, 0, rx199_fail526
    eq $I19, 0, rx199_fail526
    nqp_islist $I20, rx199_cstack
    unless $I20, rx199_jump527
    elements $I18, rx199_bstack
    le $I18, 0, rx199_cut528
    dec $I18
    set $I18, rx199_bstack[$I18]
  rx199_cut528:
    assign rx199_cstack, $I18
  rx199_jump527:
    jump $I19
  rx199_done524:
    rx199_cur."!cursor_fail"()
    .return (rx199_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_49_1431289913.64791") :anon :lex :outer("cuid_48_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx201_start
    .local string rx201_tgt
    .local int rx201_pos
    .local int rx201_off
    .local int rx201_eos
    .local int rx201_rep
    .local pmc rx201_cur
    .local pmc rx201_curclass
    .local pmc rx201_bstack
    .local pmc rx201_cstack
    rx201_start = self."!cursor_start_all"()
    set rx201_cur, rx201_start[0]
    set rx201_tgt, rx201_start[1]
    set rx201_pos, rx201_start[2]
    set rx201_curclass, rx201_start[3]
    set rx201_bstack, rx201_start[4]
    set $I19, rx201_start[5]
    store_lex unicode:"$\x{a2}", rx201_cur
    length rx201_eos, rx201_tgt
    eq $I19, 1, rx201_restart535
    gt rx201_pos, rx201_eos, rx201_fail536
    nqp_rxmark rx201_bstack, rxquantr202_done541, -1, 0
  rxquantr202_loop540:
    ge rx201_pos, rx201_eos, rx201_fail536
    is_cclass $I11, .CCLASS_NUMERIC, rx201_tgt, rx201_pos
    unless $I11, rx201_fail536
    inc rx201_pos
    nqp_rxpeek $I19, rx201_bstack, rxquantr202_done541
    inc $I19
    inc $I19
    set rx201_rep, rx201_bstack[$I19]
    nqp_rxcommit rx201_bstack, rxquantr202_done541
    inc rx201_rep
    nqp_rxmark rx201_bstack, rxquantr202_done541, rx201_pos, rx201_rep
    goto rxquantr202_loop540
  rxquantr202_done541:
    rx201_cur."!cursor_pass"(rx201_pos)
    .return (rx201_cur)
  rx201_restart535:
    repr_get_attr_obj rx201_cstack, rx201_cur, rx201_curclass, "$!cstack"
  rx201_fail536:
    unless rx201_bstack, rx201_done534
    pop $I19, rx201_bstack
    if_null rx201_cstack, rx201_cstack_done539
    unless rx201_cstack, rx201_cstack_done539
    dec $I19
    set $P11, rx201_cstack[$I19]
  rx201_cstack_done539:
    pop rx201_rep, rx201_bstack
    pop rx201_pos, rx201_bstack
    pop $I19, rx201_bstack
    lt rx201_pos, -1, rx201_done534
    lt rx201_pos, 0, rx201_fail536
    eq $I19, 0, rx201_fail536
    nqp_islist $I20, rx201_cstack
    unless $I20, rx201_jump537
    elements $I18, rx201_bstack
    le $I18, 0, rx201_cut538
    dec $I18
    set $I18, rx201_bstack[$I18]
  rx201_cut538:
    assign rx201_cstack, $I18
  rx201_jump537:
    jump $I19
  rx201_done534:
    rx201_cur."!cursor_fail"()
    .return (rx201_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_50_1431289913.64791") :anon :lex :outer("cuid_48_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx204_start
    .local string rx204_tgt
    .local int rx204_pos
    .local int rx204_off
    .local int rx204_eos
    .local int rx204_rep
    .local pmc rx204_cur
    .local pmc rx204_curclass
    .local pmc rx204_bstack
    .local pmc rx204_cstack
    rx204_start = self."!cursor_start_all"()
    set rx204_cur, rx204_start[0]
    set rx204_tgt, rx204_start[1]
    set rx204_pos, rx204_start[2]
    set rx204_curclass, rx204_start[3]
    set rx204_bstack, rx204_start[4]
    set $I19, rx204_start[5]
    store_lex unicode:"$\x{a2}", rx204_cur
    length rx204_eos, rx204_tgt
    eq $I19, 1, rx204_restart545
    gt rx204_pos, rx204_eos, rx204_fail546
    nqp_rxmark rx204_bstack, rxquantr205_done551, rx204_pos, 0
  rxquantr205_loop550:
    add $I11, rx204_pos, 1
    gt $I11, rx204_eos, rx204_fail546
    ord $I11, rx204_tgt, rx204_pos
    ne $I11, 44, rx204_fail546
    add rx204_pos, 1
    nqp_rxpeek $I19, rx204_bstack, rxquantr205_done551
    inc $I19
    inc $I19
    set rx204_rep, rx204_bstack[$I19]
    nqp_rxcommit rx204_bstack, rxquantr205_done551
    inc rx204_rep
  rxquantr205_done551:
    rx204_cur."!cursor_pass"(rx204_pos)
    .return (rx204_cur)
  rx204_restart545:
    repr_get_attr_obj rx204_cstack, rx204_cur, rx204_curclass, "$!cstack"
  rx204_fail546:
    unless rx204_bstack, rx204_done544
    pop $I19, rx204_bstack
    if_null rx204_cstack, rx204_cstack_done549
    unless rx204_cstack, rx204_cstack_done549
    dec $I19
    set $P11, rx204_cstack[$I19]
  rx204_cstack_done549:
    pop rx204_rep, rx204_bstack
    pop rx204_pos, rx204_bstack
    pop $I19, rx204_bstack
    lt rx204_pos, -1, rx204_done544
    lt rx204_pos, 0, rx204_fail546
    eq $I19, 0, rx204_fail546
    nqp_islist $I20, rx204_cstack
    unless $I20, rx204_jump547
    elements $I18, rx204_bstack
    le $I18, 0, rx204_cut548
    dec $I18
    set $I18, rx204_bstack[$I18]
  rx204_cut548:
    assign rx204_cstack, $I18
  rx204_jump547:
    jump $I19
  rx204_done544:
    rx204_cur."!cursor_fail"()
    .return (rx204_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_51_1431289913.64791") :anon :lex :outer("cuid_48_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx207_start
    .local string rx207_tgt
    .local int rx207_pos
    .local int rx207_off
    .local int rx207_eos
    .local int rx207_rep
    .local pmc rx207_cur
    .local pmc rx207_curclass
    .local pmc rx207_bstack
    .local pmc rx207_cstack
    rx207_start = self."!cursor_start_all"()
    set rx207_cur, rx207_start[0]
    set rx207_tgt, rx207_start[1]
    set rx207_pos, rx207_start[2]
    set rx207_curclass, rx207_start[3]
    set rx207_bstack, rx207_start[4]
    set $I19, rx207_start[5]
    store_lex unicode:"$\x{a2}", rx207_cur
    length rx207_eos, rx207_tgt
    eq $I19, 1, rx207_restart555
    gt rx207_pos, rx207_eos, rx207_fail556
    nqp_rxmark rx207_bstack, rxquantr208_done561, rx207_pos, 0
  rxquantr208_loop560:
    ge rx207_pos, rx207_eos, rx207_fail556
    is_cclass $I11, .CCLASS_NUMERIC, rx207_tgt, rx207_pos
    unless $I11, rx207_fail556
    inc rx207_pos
    nqp_rxpeek $I19, rx207_bstack, rxquantr208_done561
    inc $I19
    inc $I19
    set rx207_rep, rx207_bstack[$I19]
    nqp_rxcommit rx207_bstack, rxquantr208_done561
    inc rx207_rep
    nqp_rxmark rx207_bstack, rxquantr208_done561, rx207_pos, rx207_rep
    goto rxquantr208_loop560
  rxquantr208_done561:
    rx207_cur."!cursor_pass"(rx207_pos)
    .return (rx207_cur)
  rx207_restart555:
    repr_get_attr_obj rx207_cstack, rx207_cur, rx207_curclass, "$!cstack"
  rx207_fail556:
    unless rx207_bstack, rx207_done554
    pop $I19, rx207_bstack
    if_null rx207_cstack, rx207_cstack_done559
    unless rx207_cstack, rx207_cstack_done559
    dec $I19
    set $P11, rx207_cstack[$I19]
  rx207_cstack_done559:
    pop rx207_rep, rx207_bstack
    pop rx207_pos, rx207_bstack
    pop $I19, rx207_bstack
    lt rx207_pos, -1, rx207_done554
    lt rx207_pos, 0, rx207_fail556
    eq $I19, 0, rx207_fail556
    nqp_islist $I20, rx207_cstack
    unless $I20, rx207_jump557
    elements $I18, rx207_bstack
    le $I18, 0, rx207_cut558
    dec $I18
    set $I18, rx207_bstack[$I18]
  rx207_cut558:
    assign rx207_cstack, $I18
  rx207_jump557:
    jump $I19
  rx207_done554:
    rx207_cur."!cursor_fail"()
    .return (rx207_cur) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<**>" :subid("cuid_52_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 254
    .param pmc __lowered_lex_70 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_71 
    .local pmc fb_tmp_13 
    .local pmc fb_tmp_14 
    set self, __lowered_lex_70
    .local pmc rx211_start
    .local string rx211_tgt
    .local int rx211_pos
    .local int rx211_off
    .local int rx211_eos
    .local int rx211_rep
    .local pmc rx211_cur
    .local pmc rx211_curclass
    .local pmc rx211_bstack
    .local pmc rx211_cstack
    rx211_start = self."!cursor_start_all"()
    set rx211_cur, rx211_start[0]
    set rx211_tgt, rx211_start[1]
    set rx211_pos, rx211_start[2]
    set rx211_curclass, rx211_start[3]
    set rx211_bstack, rx211_start[4]
    set $I19, rx211_start[5]
    store_lex unicode:"$\x{a2}", rx211_cur
    length rx211_eos, rx211_tgt
    eq $I19, 1, rx211_restart566
    gt rx211_pos, rx211_eos, rx211_fail567
    repr_get_attr_int $I11, self, rx211_curclass, "$!from"
    ne $I11, -1, rxscan212_done573
    goto rxscan212_scan572
  rxscan212_loop571:
    inc rx211_pos
    gt rx211_pos, rx211_eos, rx211_fail567
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!from", rx211_pos
  rxscan212_scan572:
    nqp_rxmark rx211_bstack, rxscan212_loop571, rx211_pos, 0
  rxscan212_done573:
    nqp_rxmark rx211_bstack, rxcap213_fail575, rx211_pos, 0
    add $I11, rx211_pos, 2
    gt $I11, rx211_eos, rx211_fail567
    nqp_string_equal_at $I11, rx211_tgt, ucs4:"**", rx211_pos
    ne $I11, 1, rx211_fail567
    add rx211_pos, 2
    nqp_rxpeek $I19, rx211_bstack, rxcap213_fail575
    inc $I19
    set $I11, rx211_bstack[$I19]
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx211_pos)
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "sym")
    goto rxcap213_done574
  rxcap213_fail575:
    goto rx211_fail567
  rxcap213_done574:
    nqp_rxmark rx211_bstack, rxquantr214_done577, rx211_pos, 0
  rxquantr214_loop576:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    goto rxsubrule215_pass578
  rxsubrule215_back579:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
  rxsubrule215_pass578:
    rx211_cstack = rx211_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule215_back579
    push rx211_bstack, $I11
    push rx211_bstack, 0
    push rx211_bstack, rx211_pos
    elements $I11, rx211_cstack
    push rx211_bstack, $I11
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxpeek $I19, rx211_bstack, rxquantr214_done577
    inc $I19
    inc $I19
    set rx211_rep, rx211_bstack[$I19]
    nqp_rxcommit rx211_bstack, rxquantr214_done577
    inc rx211_rep
  rxquantr214_done577:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."backmod"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    nqp_rxmark rx211_bstack, rxsubrule216_pass580, -1, 0
  rxsubrule216_pass580:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "backmod")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxmark rx211_bstack, rxquantr217_done582, rx211_pos, 0
  rxquantr217_loop581:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    goto rxsubrule218_pass583
  rxsubrule218_back584:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
  rxsubrule218_pass583:
    rx211_cstack = rx211_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule218_back584
    push rx211_bstack, $I11
    push rx211_bstack, 0
    push rx211_bstack, rx211_pos
    elements $I11, rx211_cstack
    push rx211_bstack, $I11
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxpeek $I19, rx211_bstack, rxquantr217_done582
    inc $I19
    inc $I19
    set rx211_rep, rx211_bstack[$I19]
    nqp_rxcommit rx211_bstack, rxquantr217_done582
    inc rx211_rep
  rxquantr217_done582:
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt219_0586
    nqp_push_label $P11, alt219_1591
    nqp_push_label $P11, alt219_2615
    nqp_rxmark rx211_bstack, alt219_end585, -1, 0
    rx211_cur."!alt"(rx211_pos, "alt_nfa__10_1431289914.2714", $P11)
    goto rx211_fail567
  alt219_0586:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."integer"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    nqp_rxmark rx211_bstack, rxsubrule220_pass587, -1, 0
  rxsubrule220_pass587:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "min")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxmark rx211_bstack, rxquantr221_done589, -1, 0
  rxquantr221_loop588:
    ge rx211_pos, rx211_eos, rx211_fail567
    is_cclass $I11, .CCLASS_WHITESPACE, rx211_tgt, rx211_pos
    unless $I11, rx211_fail567
    inc rx211_pos
    nqp_rxpeek $I19, rx211_bstack, rxquantr221_done589
    inc $I19
    inc $I19
    set rx211_rep, rx211_bstack[$I19]
    nqp_rxcommit rx211_bstack, rxquantr221_done589
    inc rx211_rep
    nqp_rxmark rx211_bstack, rxquantr221_done589, rx211_pos, rx211_rep
    goto rxquantr221_loop588
  rxquantr221_done589:
    add $I11, rx211_pos, 2
    gt $I11, rx211_eos, rx211_fail567
    nqp_string_equal_at $I11, rx211_tgt, ucs4:"..", rx211_pos
    ne $I11, 1, rx211_fail567
    add rx211_pos, 2
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."throw_spaces_in_bare_range"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    goto alt219_end585
  alt219_1591:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."integer"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    nqp_rxmark rx211_bstack, rxsubrule223_pass592, -1, 0
  rxsubrule223_pass592:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "min")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    nqp_rxmark rx211_bstack, rxquantr224_done594, rx211_pos, 0
  rxquantr224_loop593:
    add $I11, rx211_pos, 2
    gt $I11, rx211_eos, rx211_fail567
    nqp_string_equal_at $I11, rx211_tgt, ucs4:"..", rx211_pos
    ne $I11, 1, rx211_fail567
    add rx211_pos, 2
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt225_0596
    nqp_push_label $P11, alt225_1604
    nqp_push_label $P11, alt225_2607
    nqp_rxmark rx211_bstack, alt225_end595, -1, 0
    rx211_cur."!alt"(rx211_pos, "alt_nfa__9_1431289914.27084", $P11)
    goto rx211_fail567
  alt225_0596:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."integer"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    nqp_rxmark rx211_bstack, rxsubrule226_pass597, -1, 0
  rxsubrule226_pass597:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "max")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    store_lex unicode:"$\x{a2}", rx211_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_71, $P5001
.annotate 'line', 261
.annotate 'line', 262
    unless_null __lowered_lex_71, fallback602
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_71, $P5002
  fallback602:
    set fb_tmp_13, __lowered_lex_71
    repr_defined $I5002, fb_tmp_13
    unless $I5002 goto if228_else600 
    set $P5003, fb_tmp_13["max"]
    set $P5005, $P5003
    goto if228_end601
  if228_else600:
    null $P5004
    set $P5005, $P5004
  if228_end601:
    unless_null $P5005, vivi_229603
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_229603:
    $P5007 = $P5005."Str"()
    set $N5001, $P5007
    set $N5002, 0
    islt $I5001, $N5001, $N5002
    box $P5011, $I5001
    set $P5010, $P5011
    unless $I5001 goto if227_end599 
    $P5008 = __lowered_lex_71."CURSOR"()
    $P5009 = $P5008."panic"("Negative numbers are not allowed as quantifiers")
    set $P5010, $P5009
  if227_end599:
    goto alt225_end595
  alt225_1604:
    nqp_rxmark rx211_bstack, rxcap230_fail606, rx211_pos, 0
    add $I11, rx211_pos, 1
    gt $I11, rx211_eos, rx211_fail567
    ord $I11, rx211_tgt, rx211_pos
    ne $I11, 42, rx211_fail567
    add rx211_pos, 1
    nqp_rxpeek $I19, rx211_bstack, rxcap230_fail606
    inc $I19
    set $I11, rx211_bstack[$I19]
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx211_pos)
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "max")
    goto rxcap230_done605
  rxcap230_fail606:
    goto rx211_fail567
  rxcap230_done605:
    goto alt225_end595
  alt225_2607:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."throw_malformed_range"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    goto alt225_end595
  alt225_end595:
    nqp_rxcommit rx211_bstack, alt225_end595
    nqp_rxpeek $I19, rx211_bstack, rxquantr224_done594
    inc $I19
    inc $I19
    set rx211_rep, rx211_bstack[$I19]
    nqp_rxcommit rx211_bstack, rxquantr224_done594
    inc rx211_rep
  rxquantr224_done594:
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    store_lex unicode:"$\x{a2}", rx211_cur
    $P5012 = $P101."MATCH"()
    set __lowered_lex_71, $P5012
.annotate 'line', 268
    unless_null __lowered_lex_71, fallback613
    nqp_get_sc_object $P5013, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_71, $P5013
  fallback613:
    set fb_tmp_14, __lowered_lex_71
    repr_defined $I5004, fb_tmp_14
    unless $I5004 goto if233_else611 
    set $P5014, fb_tmp_14["min"]
    set $P5016, $P5014
    goto if233_end612
  if233_else611:
    null $P5015
    set $P5016, $P5015
  if233_end612:
    unless_null $P5016, vivi_234614
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_234614:
    $P5018 = $P5016."Str"()
    set $N5003, $P5018
    set $N5004, 0
    islt $I5003, $N5003, $N5004
    box $P5022, $I5003
    set $P5021, $P5022
    unless $I5003 goto if232_end610 
    $P5019 = __lowered_lex_71."CURSOR"()
    $P5020 = $P5019."panic"("Negative numbers are not allowed as quantifiers")
    set $P5021, $P5020
  if232_end610:
    goto alt219_end585
  alt219_2615:
    ge rx211_pos, rx211_eos, rx211_fail567
    substr $S11, rx211_tgt, rx211_pos, 1
    index $I11, ucs4:"{", $S11
    lt $I11, 0, rx211_fail567
    repr_bind_attr_int rx211_cur, rx211_curclass, "$!pos", rx211_pos
    $P11 = rx211_cur."codeblock"()
    repr_get_attr_int $I11, $P11, rx211_curclass, "$!pos"
    lt $I11, 0, rx211_fail567
    nqp_rxmark rx211_bstack, rxsubrule235_pass616, -1, 0
  rxsubrule235_pass616:
    rx211_cstack = rx211_cur."!cursor_capture"($P11, "codeblock")
    repr_get_attr_int rx211_pos, $P11, rx211_curclass, "$!pos"
    goto alt219_end585
  alt219_end585:
    nqp_rxcommit rx211_bstack, alt219_end585
    rx211_cur."!cursor_pass"(rx211_pos, "quantifier:sym<**>")
    .return (rx211_cur)
  rx211_restart566:
    repr_get_attr_obj rx211_cstack, rx211_cur, rx211_curclass, "$!cstack"
  rx211_fail567:
    unless rx211_bstack, rx211_done565
    pop $I19, rx211_bstack
    if_null rx211_cstack, rx211_cstack_done570
    unless rx211_cstack, rx211_cstack_done570
    dec $I19
    set $P11, rx211_cstack[$I19]
  rx211_cstack_done570:
    pop rx211_rep, rx211_bstack
    pop rx211_pos, rx211_bstack
    pop $I19, rx211_bstack
    lt rx211_pos, -1, rx211_done565
    lt rx211_pos, 0, rx211_fail567
    eq $I19, 0, rx211_fail567
    nqp_islist $I20, rx211_cstack
    unless $I20, rx211_jump568
    elements $I18, rx211_bstack
    le $I18, 0, rx211_cut569
    dec $I18
    set $I18, rx211_bstack[$I18]
  rx211_cut569:
    assign rx211_cstack, $I18
  rx211_jump568:
    jump $I19
  rx211_done565:
    rx211_cur."!cursor_fail"()
    .return (rx211_cur) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_53_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 273
    .param pmc __lowered_lex_72 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_73 
    set self, __lowered_lex_72
    .local pmc rx236_start
    .local string rx236_tgt
    .local int rx236_pos
    .local int rx236_off
    .local int rx236_eos
    .local int rx236_rep
    .local pmc rx236_cur
    .local pmc rx236_curclass
    .local pmc rx236_bstack
    .local pmc rx236_cstack
    rx236_start = self."!cursor_start_all"()
    set rx236_cur, rx236_start[0]
    set rx236_tgt, rx236_start[1]
    set rx236_pos, rx236_start[2]
    set rx236_curclass, rx236_start[3]
    set rx236_bstack, rx236_start[4]
    set $I19, rx236_start[5]
    store_lex unicode:"$\x{a2}", rx236_cur
    length rx236_eos, rx236_tgt
    eq $I19, 1, rx236_restart619
    gt rx236_pos, rx236_eos, rx236_fail620
    repr_get_attr_int $I11, self, rx236_curclass, "$!from"
    ne $I11, -1, rxscan237_done626
    goto rxscan237_scan625
  rxscan237_loop624:
    inc rx236_pos
    gt rx236_pos, rx236_eos, rx236_fail620
    repr_bind_attr_int rx236_cur, rx236_curclass, "$!from", rx236_pos
  rxscan237_scan625:
    nqp_rxmark rx236_bstack, rxscan237_loop624, rx236_pos, 0
  rxscan237_done626:
    repr_bind_attr_int rx236_cur, rx236_curclass, "$!pos", rx236_pos
    $P11 = rx236_cur."LANG"("MAIN", "pblock")
    repr_get_attr_int $I11, $P11, rx236_curclass, "$!pos"
    lt $I11, 0, rx236_fail620
    nqp_rxmark rx236_bstack, rxsubrule238_pass627, -1, 0
  rxsubrule238_pass627:
    rx236_cstack = rx236_cur."!cursor_capture"($P11, "block")
    repr_get_attr_int rx236_pos, $P11, rx236_curclass, "$!pos"
    rx236_cur."!cursor_pass"(rx236_pos, "codeblock")
    .return (rx236_cur)
  rx236_restart619:
    repr_get_attr_obj rx236_cstack, rx236_cur, rx236_curclass, "$!cstack"
  rx236_fail620:
    unless rx236_bstack, rx236_done618
    pop $I19, rx236_bstack
    if_null rx236_cstack, rx236_cstack_done623
    unless rx236_cstack, rx236_cstack_done623
    dec $I19
    set $P11, rx236_cstack[$I19]
  rx236_cstack_done623:
    pop rx236_rep, rx236_bstack
    pop rx236_pos, rx236_bstack
    pop $I19, rx236_bstack
    lt rx236_pos, -1, rx236_done618
    lt rx236_pos, 0, rx236_fail620
    eq $I19, 0, rx236_fail620
    nqp_islist $I20, rx236_cstack
    unless $I20, rx236_jump621
    elements $I18, rx236_bstack
    le $I18, 0, rx236_cut622
    dec $I18
    set $I18, rx236_bstack[$I18]
  rx236_cut622:
    assign rx236_cstack, $I18
  rx236_jump621:
    jump $I19
  rx236_done618:
    rx236_cur."!cursor_fail"()
    .return (rx236_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backmod" :subid("cuid_54_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 277
    .param pmc __lowered_lex_74 
    .const 'Sub' $P5002 = 'cuid_55_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_75 
    set self, __lowered_lex_74
    .local pmc rx239_start
    .local string rx239_tgt
    .local int rx239_pos
    .local int rx239_off
    .local int rx239_eos
    .local int rx239_rep
    .local pmc rx239_cur
    .local pmc rx239_curclass
    .local pmc rx239_bstack
    .local pmc rx239_cstack
    rx239_start = self."!cursor_start_all"()
    set rx239_cur, rx239_start[0]
    set rx239_tgt, rx239_start[1]
    set rx239_pos, rx239_start[2]
    set rx239_curclass, rx239_start[3]
    set rx239_bstack, rx239_start[4]
    set $I19, rx239_start[5]
    store_lex unicode:"$\x{a2}", rx239_cur
    length rx239_eos, rx239_tgt
    eq $I19, 1, rx239_restart630
    gt rx239_pos, rx239_eos, rx239_fail631
    repr_get_attr_int $I11, self, rx239_curclass, "$!from"
    ne $I11, -1, rxscan240_done637
    goto rxscan240_scan636
  rxscan240_loop635:
    inc rx239_pos
    gt rx239_pos, rx239_eos, rx239_fail631
    repr_bind_attr_int rx239_cur, rx239_curclass, "$!from", rx239_pos
  rxscan240_scan636:
    nqp_rxmark rx239_bstack, rxscan240_loop635, rx239_pos, 0
  rxscan240_done637:
    nqp_rxmark rx239_bstack, rxquantr241_done639, rx239_pos, 0
  rxquantr241_loop638:
    add $I11, rx239_pos, 1
    gt $I11, rx239_eos, rx239_fail631
    ord $I11, rx239_tgt, rx239_pos
    ne $I11, 58, rx239_fail631
    add rx239_pos, 1
    nqp_rxpeek $I19, rx239_bstack, rxquantr241_done639
    inc $I19
    inc $I19
    set rx239_rep, rx239_bstack[$I19]
    nqp_rxcommit rx239_bstack, rxquantr241_done639
    inc rx239_rep
  rxquantr241_done639:
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt242_0641
    nqp_push_label $P11, alt242_1642
    nqp_push_label $P11, alt242_2643
    nqp_rxmark rx239_bstack, alt242_end640, -1, 0
    rx239_cur."!alt"(rx239_pos, "alt_nfa__11_1431289914.28514", $P11)
    goto rx239_fail631
  alt242_0641:
    add $I11, rx239_pos, 1
    gt $I11, rx239_eos, rx239_fail631
    ord $I11, rx239_tgt, rx239_pos
    ne $I11, 63, rx239_fail631
    add rx239_pos, 1
    goto alt242_end640
  alt242_1642:
    add $I11, rx239_pos, 1
    gt $I11, rx239_eos, rx239_fail631
    ord $I11, rx239_tgt, rx239_pos
    ne $I11, 33, rx239_fail631
    add rx239_pos, 1
    goto alt242_end640
  alt242_2643:
    .const 'Sub' $P5001 = 'cuid_55_1431289913.64791' 
    capture_lex $P5001
    repr_bind_attr_int rx239_cur, rx239_curclass, "$!pos", rx239_pos
    $P11 = rx239_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx239_curclass, "$!pos"
    ge $I11, 0, rx239_fail631
    goto alt242_end640
  alt242_end640:
    nqp_rxcommit rx239_bstack, alt242_end640
    rx239_cur."!cursor_pass"(rx239_pos, "backmod")
    .return (rx239_cur)
  rx239_restart630:
    repr_get_attr_obj rx239_cstack, rx239_cur, rx239_curclass, "$!cstack"
  rx239_fail631:
    unless rx239_bstack, rx239_done629
    pop $I19, rx239_bstack
    if_null rx239_cstack, rx239_cstack_done634
    unless rx239_cstack, rx239_cstack_done634
    dec $I19
    set $P11, rx239_cstack[$I19]
  rx239_cstack_done634:
    pop rx239_rep, rx239_bstack
    pop rx239_pos, rx239_bstack
    pop $I19, rx239_bstack
    lt rx239_pos, -1, rx239_done629
    lt rx239_pos, 0, rx239_fail631
    eq $I19, 0, rx239_fail631
    nqp_islist $I20, rx239_cstack
    unless $I20, rx239_jump632
    elements $I18, rx239_bstack
    le $I18, 0, rx239_cut633
    dec $I18
    set $I18, rx239_bstack[$I18]
  rx239_cut633:
    assign rx239_cstack, $I18
  rx239_jump632:
    jump $I19
  rx239_done629:
    rx239_cur."!cursor_fail"()
    .return (rx239_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_55_1431289913.64791") :anon :lex :outer("cuid_54_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx243_start
    .local string rx243_tgt
    .local int rx243_pos
    .local int rx243_off
    .local int rx243_eos
    .local int rx243_rep
    .local pmc rx243_cur
    .local pmc rx243_curclass
    .local pmc rx243_bstack
    .local pmc rx243_cstack
    rx243_start = self."!cursor_start_all"()
    set rx243_cur, rx243_start[0]
    set rx243_tgt, rx243_start[1]
    set rx243_pos, rx243_start[2]
    set rx243_curclass, rx243_start[3]
    set rx243_bstack, rx243_start[4]
    set $I19, rx243_start[5]
    store_lex unicode:"$\x{a2}", rx243_cur
    length rx243_eos, rx243_tgt
    eq $I19, 1, rx243_restart646
    gt rx243_pos, rx243_eos, rx243_fail647
    add $I11, rx243_pos, 1
    gt $I11, rx243_eos, rx243_fail647
    ord $I11, rx243_tgt, rx243_pos
    ne $I11, 58, rx243_fail647
    add rx243_pos, 1
    rx243_cur."!cursor_pass"(rx243_pos)
    .return (rx243_cur)
  rx243_restart646:
    repr_get_attr_obj rx243_cstack, rx243_cur, rx243_curclass, "$!cstack"
  rx243_fail647:
    unless rx243_bstack, rx243_done645
    pop $I19, rx243_bstack
    if_null rx243_cstack, rx243_cstack_done650
    unless rx243_cstack, rx243_cstack_done650
    dec $I19
    set $P11, rx243_cstack[$I19]
  rx243_cstack_done650:
    pop rx243_rep, rx243_bstack
    pop rx243_pos, rx243_bstack
    pop $I19, rx243_bstack
    lt rx243_pos, -1, rx243_done645
    lt rx243_pos, 0, rx243_fail647
    eq $I19, 0, rx243_fail647
    nqp_islist $I20, rx243_cstack
    unless $I20, rx243_jump648
    elements $I18, rx243_bstack
    le $I18, 0, rx243_cut649
    dec $I18
    set $I18, rx243_bstack[$I18]
  rx243_cut649:
    assign rx243_cstack, $I18
  rx243_jump648:
    jump $I19
  rx243_done645:
    rx243_cur."!cursor_fail"()
    .return (rx243_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar" :subid("cuid_56_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 279
    .param pmc self 
    $P5001 = self."!protoregex"("metachar")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<[ ]>" :subid("cuid_57_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 280
    .param pmc __lowered_lex_76 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_77 
    set self, __lowered_lex_76
    .local pmc rx244_start
    .local string rx244_tgt
    .local int rx244_pos
    .local int rx244_off
    .local int rx244_eos
    .local int rx244_rep
    .local pmc rx244_cur
    .local pmc rx244_curclass
    .local pmc rx244_bstack
    .local pmc rx244_cstack
    rx244_start = self."!cursor_start_all"()
    set rx244_cur, rx244_start[0]
    set rx244_tgt, rx244_start[1]
    set rx244_pos, rx244_start[2]
    set rx244_curclass, rx244_start[3]
    set rx244_bstack, rx244_start[4]
    set $I19, rx244_start[5]
    store_lex unicode:"$\x{a2}", rx244_cur
    length rx244_eos, rx244_tgt
    eq $I19, 1, rx244_restart653
    gt rx244_pos, rx244_eos, rx244_fail654
    repr_get_attr_int $I11, self, rx244_curclass, "$!from"
    ne $I11, -1, rxscan245_done660
    goto rxscan245_scan659
  rxscan245_loop658:
    inc rx244_pos
    index rx244_pos, rx244_tgt, ucs4:"[", rx244_pos
    eq rx244_pos, -1, rx244_fail654
    repr_bind_attr_int rx244_cur, rx244_curclass, "$!from", rx244_pos
  rxscan245_scan659:
    nqp_rxmark rx244_bstack, rxscan245_loop658, rx244_pos, 0
  rxscan245_done660:
    add $I11, rx244_pos, 1
    gt $I11, rx244_eos, rx244_fail654
    ord $I11, rx244_tgt, rx244_pos
    ne $I11, 91, rx244_fail654
    add rx244_pos, 1
    repr_bind_attr_int rx244_cur, rx244_curclass, "$!pos", rx244_pos
    $P11 = rx244_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx244_curclass, "$!pos"
    lt $I11, 0, rx244_fail654
    nqp_rxmark rx244_bstack, rxsubrule246_pass661, -1, 0
  rxsubrule246_pass661:
    rx244_cstack = rx244_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx244_pos, $P11, rx244_curclass, "$!pos"
  alt247_0663:
    nqp_rxmark rx244_bstack, alt247_1664, rx244_pos, 0
    add $I11, rx244_pos, 1
    gt $I11, rx244_eos, rx244_fail654
    ord $I11, rx244_tgt, rx244_pos
    ne $I11, 93, rx244_fail654
    add rx244_pos, 1
    goto alt247_end662
  alt247_1664:
    repr_bind_attr_int rx244_cur, rx244_curclass, "$!pos", rx244_pos
    $P11 = rx244_cur."FAILGOAL"("']' ")
    repr_get_attr_int $I11, $P11, rx244_curclass, "$!pos"
    lt $I11, 0, rx244_fail654
    goto rxsubrule248_pass665
  rxsubrule248_back666:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx244_curclass, "$!pos"
    lt $I11, 0, rx244_fail654
  rxsubrule248_pass665:
    rx244_cstack = rx244_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule248_back666
    push rx244_bstack, $I11
    push rx244_bstack, 0
    push rx244_bstack, rx244_pos
    elements $I11, rx244_cstack
    push rx244_bstack, $I11
    repr_get_attr_int rx244_pos, $P11, rx244_curclass, "$!pos"
  alt247_end662:
    repr_bind_attr_int rx244_cur, rx244_curclass, "$!pos", rx244_pos
    $P11 = rx244_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx244_curclass, "$!pos"
    lt $I11, 0, rx244_fail654
    repr_get_attr_int rx244_pos, $P11, rx244_curclass, "$!pos"
    rx244_cur."!cursor_pass"(rx244_pos, "metachar:sym<[ ]>")
    .return (rx244_cur)
  rx244_restart653:
    repr_get_attr_obj rx244_cstack, rx244_cur, rx244_curclass, "$!cstack"
  rx244_fail654:
    unless rx244_bstack, rx244_done652
    pop $I19, rx244_bstack
    if_null rx244_cstack, rx244_cstack_done657
    unless rx244_cstack, rx244_cstack_done657
    dec $I19
    set $P11, rx244_cstack[$I19]
  rx244_cstack_done657:
    pop rx244_rep, rx244_bstack
    pop rx244_pos, rx244_bstack
    pop $I19, rx244_bstack
    lt rx244_pos, -1, rx244_done652
    lt rx244_pos, 0, rx244_fail654
    eq $I19, 0, rx244_fail654
    nqp_islist $I20, rx244_cstack
    unless $I20, rx244_jump655
    elements $I18, rx244_bstack
    le $I18, 0, rx244_cut656
    dec $I18
    set $I18, rx244_bstack[$I18]
  rx244_cut656:
    assign rx244_cstack, $I18
  rx244_jump655:
    jump $I19
  rx244_done652:
    rx244_cur."!cursor_fail"()
    .return (rx244_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<( )>" :subid("cuid_58_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 281
    .param pmc __lowered_lex_78 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_79 
    set self, __lowered_lex_78
    .local pmc rx250_start
    .local string rx250_tgt
    .local int rx250_pos
    .local int rx250_off
    .local int rx250_eos
    .local int rx250_rep
    .local pmc rx250_cur
    .local pmc rx250_curclass
    .local pmc rx250_bstack
    .local pmc rx250_cstack
    rx250_start = self."!cursor_start_all"()
    set rx250_cur, rx250_start[0]
    set rx250_tgt, rx250_start[1]
    set rx250_pos, rx250_start[2]
    set rx250_curclass, rx250_start[3]
    set rx250_bstack, rx250_start[4]
    set $I19, rx250_start[5]
    store_lex unicode:"$\x{a2}", rx250_cur
    length rx250_eos, rx250_tgt
    eq $I19, 1, rx250_restart670
    gt rx250_pos, rx250_eos, rx250_fail671
    repr_get_attr_int $I11, self, rx250_curclass, "$!from"
    ne $I11, -1, rxscan251_done677
    goto rxscan251_scan676
  rxscan251_loop675:
    inc rx250_pos
    index rx250_pos, rx250_tgt, ucs4:"(", rx250_pos
    eq rx250_pos, -1, rx250_fail671
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!from", rx250_pos
  rxscan251_scan676:
    nqp_rxmark rx250_bstack, rxscan251_loop675, rx250_pos, 0
  rxscan251_done677:
    add $I11, rx250_pos, 1
    gt $I11, rx250_eos, rx250_fail671
    ord $I11, rx250_tgt, rx250_pos
    ne $I11, 40, rx250_fail671
    add rx250_pos, 1
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail671
    nqp_rxmark rx250_bstack, rxsubrule252_pass678, -1, 0
  rxsubrule252_pass678:
    rx250_cstack = rx250_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
  alt253_0680:
    nqp_rxmark rx250_bstack, alt253_1681, rx250_pos, 0
    add $I11, rx250_pos, 1
    gt $I11, rx250_eos, rx250_fail671
    ord $I11, rx250_tgt, rx250_pos
    ne $I11, 41, rx250_fail671
    add rx250_pos, 1
    goto alt253_end679
  alt253_1681:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."FAILGOAL"("')' ")
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail671
    goto rxsubrule254_pass682
  rxsubrule254_back683:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail671
  rxsubrule254_pass682:
    rx250_cstack = rx250_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule254_back683
    push rx250_bstack, $I11
    push rx250_bstack, 0
    push rx250_bstack, rx250_pos
    elements $I11, rx250_cstack
    push rx250_bstack, $I11
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
  alt253_end679:
    repr_bind_attr_int rx250_cur, rx250_curclass, "$!pos", rx250_pos
    $P11 = rx250_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx250_curclass, "$!pos"
    lt $I11, 0, rx250_fail671
    repr_get_attr_int rx250_pos, $P11, rx250_curclass, "$!pos"
    rx250_cur."!cursor_pass"(rx250_pos, "metachar:sym<( )>")
    .return (rx250_cur)
  rx250_restart670:
    repr_get_attr_obj rx250_cstack, rx250_cur, rx250_curclass, "$!cstack"
  rx250_fail671:
    unless rx250_bstack, rx250_done669
    pop $I19, rx250_bstack
    if_null rx250_cstack, rx250_cstack_done674
    unless rx250_cstack, rx250_cstack_done674
    dec $I19
    set $P11, rx250_cstack[$I19]
  rx250_cstack_done674:
    pop rx250_rep, rx250_bstack
    pop rx250_pos, rx250_bstack
    pop $I19, rx250_bstack
    lt rx250_pos, -1, rx250_done669
    lt rx250_pos, 0, rx250_fail671
    eq $I19, 0, rx250_fail671
    nqp_islist $I20, rx250_cstack
    unless $I20, rx250_jump672
    elements $I18, rx250_bstack
    le $I18, 0, rx250_cut673
    dec $I18
    set $I18, rx250_bstack[$I18]
  rx250_cut673:
    assign rx250_cstack, $I18
  rx250_jump672:
    jump $I19
  rx250_done669:
    rx250_cur."!cursor_fail"()
    .return (rx250_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<'>" :subid("cuid_59_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 282
    .param pmc __lowered_lex_80 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_81 
    set self, __lowered_lex_80
    .local pmc rx256_start
    .local string rx256_tgt
    .local int rx256_pos
    .local int rx256_off
    .local int rx256_eos
    .local int rx256_rep
    .local pmc rx256_cur
    .local pmc rx256_curclass
    .local pmc rx256_bstack
    .local pmc rx256_cstack
    rx256_start = self."!cursor_start_all"()
    set rx256_cur, rx256_start[0]
    set rx256_tgt, rx256_start[1]
    set rx256_pos, rx256_start[2]
    set rx256_curclass, rx256_start[3]
    set rx256_bstack, rx256_start[4]
    set $I19, rx256_start[5]
    store_lex unicode:"$\x{a2}", rx256_cur
    length rx256_eos, rx256_tgt
    eq $I19, 1, rx256_restart687
    gt rx256_pos, rx256_eos, rx256_fail688
    repr_get_attr_int $I11, self, rx256_curclass, "$!from"
    ne $I11, -1, rxscan257_done694
    goto rxscan257_scan693
  rxscan257_loop692:
    inc rx256_pos
    gt rx256_pos, rx256_eos, rx256_fail688
    repr_bind_attr_int rx256_cur, rx256_curclass, "$!from", rx256_pos
  rxscan257_scan693:
    nqp_rxmark rx256_bstack, rxscan257_loop692, rx256_pos, 0
  rxscan257_done694:
    ge rx256_pos, rx256_eos, rx256_fail688
    substr $S11, rx256_tgt, rx256_pos, 1
    index $I11, ucs4:"'\u2018\u201a", $S11
    lt $I11, 0, rx256_fail688
    repr_bind_attr_int rx256_cur, rx256_curclass, "$!pos", rx256_pos
    $P11 = rx256_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx256_curclass, "$!pos"
    lt $I11, 0, rx256_fail688
    nqp_rxmark rx256_bstack, rxsubrule258_pass695, -1, 0
  rxsubrule258_pass695:
    rx256_cstack = rx256_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx256_pos, $P11, rx256_curclass, "$!pos"
    repr_bind_attr_int rx256_cur, rx256_curclass, "$!pos", rx256_pos
    $P11 = rx256_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx256_curclass, "$!pos"
    lt $I11, 0, rx256_fail688
    repr_get_attr_int rx256_pos, $P11, rx256_curclass, "$!pos"
    rx256_cur."!cursor_pass"(rx256_pos, "metachar:sym<'>")
    .return (rx256_cur)
  rx256_restart687:
    repr_get_attr_obj rx256_cstack, rx256_cur, rx256_curclass, "$!cstack"
  rx256_fail688:
    unless rx256_bstack, rx256_done686
    pop $I19, rx256_bstack
    if_null rx256_cstack, rx256_cstack_done691
    unless rx256_cstack, rx256_cstack_done691
    dec $I19
    set $P11, rx256_cstack[$I19]
  rx256_cstack_done691:
    pop rx256_rep, rx256_bstack
    pop rx256_pos, rx256_bstack
    pop $I19, rx256_bstack
    lt rx256_pos, -1, rx256_done686
    lt rx256_pos, 0, rx256_fail688
    eq $I19, 0, rx256_fail688
    nqp_islist $I20, rx256_cstack
    unless $I20, rx256_jump689
    elements $I18, rx256_bstack
    le $I18, 0, rx256_cut690
    dec $I18
    set $I18, rx256_bstack[$I18]
  rx256_cut690:
    assign rx256_cstack, $I18
  rx256_jump689:
    jump $I19
  rx256_done686:
    rx256_cur."!cursor_fail"()
    .return (rx256_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<\">" :subid("cuid_60_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 283
    .param pmc __lowered_lex_82 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_83 
    set self, __lowered_lex_82
    .local pmc rx260_start
    .local string rx260_tgt
    .local int rx260_pos
    .local int rx260_off
    .local int rx260_eos
    .local int rx260_rep
    .local pmc rx260_cur
    .local pmc rx260_curclass
    .local pmc rx260_bstack
    .local pmc rx260_cstack
    rx260_start = self."!cursor_start_all"()
    set rx260_cur, rx260_start[0]
    set rx260_tgt, rx260_start[1]
    set rx260_pos, rx260_start[2]
    set rx260_curclass, rx260_start[3]
    set rx260_bstack, rx260_start[4]
    set $I19, rx260_start[5]
    store_lex unicode:"$\x{a2}", rx260_cur
    length rx260_eos, rx260_tgt
    eq $I19, 1, rx260_restart699
    gt rx260_pos, rx260_eos, rx260_fail700
    repr_get_attr_int $I11, self, rx260_curclass, "$!from"
    ne $I11, -1, rxscan261_done706
    goto rxscan261_scan705
  rxscan261_loop704:
    inc rx260_pos
    gt rx260_pos, rx260_eos, rx260_fail700
    repr_bind_attr_int rx260_cur, rx260_curclass, "$!from", rx260_pos
  rxscan261_scan705:
    nqp_rxmark rx260_bstack, rxscan261_loop704, rx260_pos, 0
  rxscan261_done706:
    ge rx260_pos, rx260_eos, rx260_fail700
    substr $S11, rx260_tgt, rx260_pos, 1
    index $I11, ucs4:"\"\u201c\u201e", $S11
    lt $I11, 0, rx260_fail700
    repr_bind_attr_int rx260_cur, rx260_curclass, "$!pos", rx260_pos
    $P11 = rx260_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx260_curclass, "$!pos"
    lt $I11, 0, rx260_fail700
    nqp_rxmark rx260_bstack, rxsubrule262_pass707, -1, 0
  rxsubrule262_pass707:
    rx260_cstack = rx260_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx260_pos, $P11, rx260_curclass, "$!pos"
    repr_bind_attr_int rx260_cur, rx260_curclass, "$!pos", rx260_pos
    $P11 = rx260_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx260_curclass, "$!pos"
    lt $I11, 0, rx260_fail700
    repr_get_attr_int rx260_pos, $P11, rx260_curclass, "$!pos"
    rx260_cur."!cursor_pass"(rx260_pos, "metachar:sym<\">")
    .return (rx260_cur)
  rx260_restart699:
    repr_get_attr_obj rx260_cstack, rx260_cur, rx260_curclass, "$!cstack"
  rx260_fail700:
    unless rx260_bstack, rx260_done698
    pop $I19, rx260_bstack
    if_null rx260_cstack, rx260_cstack_done703
    unless rx260_cstack, rx260_cstack_done703
    dec $I19
    set $P11, rx260_cstack[$I19]
  rx260_cstack_done703:
    pop rx260_rep, rx260_bstack
    pop rx260_pos, rx260_bstack
    pop $I19, rx260_bstack
    lt rx260_pos, -1, rx260_done698
    lt rx260_pos, 0, rx260_fail700
    eq $I19, 0, rx260_fail700
    nqp_islist $I20, rx260_cstack
    unless $I20, rx260_jump701
    elements $I18, rx260_bstack
    le $I18, 0, rx260_cut702
    dec $I18
    set $I18, rx260_bstack[$I18]
  rx260_cut702:
    assign rx260_cstack, $I18
  rx260_jump701:
    jump $I19
  rx260_done698:
    rx260_cur."!cursor_fail"()
    .return (rx260_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<.>" :subid("cuid_61_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 284
    .param pmc __lowered_lex_84 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_85 
    set self, __lowered_lex_84
    .local pmc rx264_start
    .local string rx264_tgt
    .local int rx264_pos
    .local int rx264_off
    .local int rx264_eos
    .local int rx264_rep
    .local pmc rx264_cur
    .local pmc rx264_curclass
    .local pmc rx264_bstack
    .local pmc rx264_cstack
    rx264_start = self."!cursor_start_all"()
    set rx264_cur, rx264_start[0]
    set rx264_tgt, rx264_start[1]
    set rx264_pos, rx264_start[2]
    set rx264_curclass, rx264_start[3]
    set rx264_bstack, rx264_start[4]
    set $I19, rx264_start[5]
    store_lex unicode:"$\x{a2}", rx264_cur
    length rx264_eos, rx264_tgt
    eq $I19, 1, rx264_restart711
    gt rx264_pos, rx264_eos, rx264_fail712
    repr_get_attr_int $I11, self, rx264_curclass, "$!from"
    ne $I11, -1, rxscan265_done718
    goto rxscan265_scan717
  rxscan265_loop716:
    inc rx264_pos
    gt rx264_pos, rx264_eos, rx264_fail712
    repr_bind_attr_int rx264_cur, rx264_curclass, "$!from", rx264_pos
  rxscan265_scan717:
    nqp_rxmark rx264_bstack, rxscan265_loop716, rx264_pos, 0
  rxscan265_done718:
    nqp_rxmark rx264_bstack, rxcap266_fail720, rx264_pos, 0
    add $I11, rx264_pos, 1
    gt $I11, rx264_eos, rx264_fail712
    ord $I11, rx264_tgt, rx264_pos
    ne $I11, 46, rx264_fail712
    add rx264_pos, 1
    nqp_rxpeek $I19, rx264_bstack, rxcap266_fail720
    inc $I19
    set $I11, rx264_bstack[$I19]
    repr_bind_attr_int rx264_cur, rx264_curclass, "$!pos", rx264_pos
    $P11 = rx264_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx264_pos)
    rx264_cstack = rx264_cur."!cursor_capture"($P11, "sym")
    goto rxcap266_done719
  rxcap266_fail720:
    goto rx264_fail712
  rxcap266_done719:
    repr_bind_attr_int rx264_cur, rx264_curclass, "$!pos", rx264_pos
    $P11 = rx264_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx264_curclass, "$!pos"
    lt $I11, 0, rx264_fail712
    repr_get_attr_int rx264_pos, $P11, rx264_curclass, "$!pos"
    rx264_cur."!cursor_pass"(rx264_pos, "metachar:sym<.>")
    .return (rx264_cur)
  rx264_restart711:
    repr_get_attr_obj rx264_cstack, rx264_cur, rx264_curclass, "$!cstack"
  rx264_fail712:
    unless rx264_bstack, rx264_done710
    pop $I19, rx264_bstack
    if_null rx264_cstack, rx264_cstack_done715
    unless rx264_cstack, rx264_cstack_done715
    dec $I19
    set $P11, rx264_cstack[$I19]
  rx264_cstack_done715:
    pop rx264_rep, rx264_bstack
    pop rx264_pos, rx264_bstack
    pop $I19, rx264_bstack
    lt rx264_pos, -1, rx264_done710
    lt rx264_pos, 0, rx264_fail712
    eq $I19, 0, rx264_fail712
    nqp_islist $I20, rx264_cstack
    unless $I20, rx264_jump713
    elements $I18, rx264_bstack
    le $I18, 0, rx264_cut714
    dec $I18
    set $I18, rx264_bstack[$I18]
  rx264_cut714:
    assign rx264_cstack, $I18
  rx264_jump713:
    jump $I19
  rx264_done710:
    rx264_cur."!cursor_fail"()
    .return (rx264_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<^>" :subid("cuid_62_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 285
    .param pmc __lowered_lex_86 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_87 
    set self, __lowered_lex_86
    .local pmc rx268_start
    .local string rx268_tgt
    .local int rx268_pos
    .local int rx268_off
    .local int rx268_eos
    .local int rx268_rep
    .local pmc rx268_cur
    .local pmc rx268_curclass
    .local pmc rx268_bstack
    .local pmc rx268_cstack
    rx268_start = self."!cursor_start_all"()
    set rx268_cur, rx268_start[0]
    set rx268_tgt, rx268_start[1]
    set rx268_pos, rx268_start[2]
    set rx268_curclass, rx268_start[3]
    set rx268_bstack, rx268_start[4]
    set $I19, rx268_start[5]
    store_lex unicode:"$\x{a2}", rx268_cur
    length rx268_eos, rx268_tgt
    eq $I19, 1, rx268_restart724
    gt rx268_pos, rx268_eos, rx268_fail725
    repr_get_attr_int $I11, self, rx268_curclass, "$!from"
    ne $I11, -1, rxscan269_done731
    goto rxscan269_scan730
  rxscan269_loop729:
    inc rx268_pos
    gt rx268_pos, rx268_eos, rx268_fail725
    repr_bind_attr_int rx268_cur, rx268_curclass, "$!from", rx268_pos
  rxscan269_scan730:
    nqp_rxmark rx268_bstack, rxscan269_loop729, rx268_pos, 0
  rxscan269_done731:
    nqp_rxmark rx268_bstack, rxcap270_fail733, rx268_pos, 0
    add $I11, rx268_pos, 1
    gt $I11, rx268_eos, rx268_fail725
    ord $I11, rx268_tgt, rx268_pos
    ne $I11, 94, rx268_fail725
    add rx268_pos, 1
    nqp_rxpeek $I19, rx268_bstack, rxcap270_fail733
    inc $I19
    set $I11, rx268_bstack[$I19]
    repr_bind_attr_int rx268_cur, rx268_curclass, "$!pos", rx268_pos
    $P11 = rx268_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx268_pos)
    rx268_cstack = rx268_cur."!cursor_capture"($P11, "sym")
    goto rxcap270_done732
  rxcap270_fail733:
    goto rx268_fail725
  rxcap270_done732:
    repr_bind_attr_int rx268_cur, rx268_curclass, "$!pos", rx268_pos
    $P11 = rx268_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx268_curclass, "$!pos"
    lt $I11, 0, rx268_fail725
    repr_get_attr_int rx268_pos, $P11, rx268_curclass, "$!pos"
    rx268_cur."!cursor_pass"(rx268_pos, "metachar:sym<^>")
    .return (rx268_cur)
  rx268_restart724:
    repr_get_attr_obj rx268_cstack, rx268_cur, rx268_curclass, "$!cstack"
  rx268_fail725:
    unless rx268_bstack, rx268_done723
    pop $I19, rx268_bstack
    if_null rx268_cstack, rx268_cstack_done728
    unless rx268_cstack, rx268_cstack_done728
    dec $I19
    set $P11, rx268_cstack[$I19]
  rx268_cstack_done728:
    pop rx268_rep, rx268_bstack
    pop rx268_pos, rx268_bstack
    pop $I19, rx268_bstack
    lt rx268_pos, -1, rx268_done723
    lt rx268_pos, 0, rx268_fail725
    eq $I19, 0, rx268_fail725
    nqp_islist $I20, rx268_cstack
    unless $I20, rx268_jump726
    elements $I18, rx268_bstack
    le $I18, 0, rx268_cut727
    dec $I18
    set $I18, rx268_bstack[$I18]
  rx268_cut727:
    assign rx268_cstack, $I18
  rx268_jump726:
    jump $I19
  rx268_done723:
    rx268_cur."!cursor_fail"()
    .return (rx268_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<^^>" :subid("cuid_63_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 286
    .param pmc __lowered_lex_88 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_89 
    set self, __lowered_lex_88
    .local pmc rx272_start
    .local string rx272_tgt
    .local int rx272_pos
    .local int rx272_off
    .local int rx272_eos
    .local int rx272_rep
    .local pmc rx272_cur
    .local pmc rx272_curclass
    .local pmc rx272_bstack
    .local pmc rx272_cstack
    rx272_start = self."!cursor_start_all"()
    set rx272_cur, rx272_start[0]
    set rx272_tgt, rx272_start[1]
    set rx272_pos, rx272_start[2]
    set rx272_curclass, rx272_start[3]
    set rx272_bstack, rx272_start[4]
    set $I19, rx272_start[5]
    store_lex unicode:"$\x{a2}", rx272_cur
    length rx272_eos, rx272_tgt
    eq $I19, 1, rx272_restart737
    gt rx272_pos, rx272_eos, rx272_fail738
    repr_get_attr_int $I11, self, rx272_curclass, "$!from"
    ne $I11, -1, rxscan273_done744
    goto rxscan273_scan743
  rxscan273_loop742:
    inc rx272_pos
    gt rx272_pos, rx272_eos, rx272_fail738
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!from", rx272_pos
  rxscan273_scan743:
    nqp_rxmark rx272_bstack, rxscan273_loop742, rx272_pos, 0
  rxscan273_done744:
    nqp_rxmark rx272_bstack, rxcap274_fail746, rx272_pos, 0
    add $I11, rx272_pos, 2
    gt $I11, rx272_eos, rx272_fail738
    nqp_string_equal_at $I11, rx272_tgt, ucs4:"^^", rx272_pos
    ne $I11, 1, rx272_fail738
    add rx272_pos, 2
    nqp_rxpeek $I19, rx272_bstack, rxcap274_fail746
    inc $I19
    set $I11, rx272_bstack[$I19]
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx272_pos)
    rx272_cstack = rx272_cur."!cursor_capture"($P11, "sym")
    goto rxcap274_done745
  rxcap274_fail746:
    goto rx272_fail738
  rxcap274_done745:
    repr_bind_attr_int rx272_cur, rx272_curclass, "$!pos", rx272_pos
    $P11 = rx272_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx272_curclass, "$!pos"
    lt $I11, 0, rx272_fail738
    repr_get_attr_int rx272_pos, $P11, rx272_curclass, "$!pos"
    rx272_cur."!cursor_pass"(rx272_pos, "metachar:sym<^^>")
    .return (rx272_cur)
  rx272_restart737:
    repr_get_attr_obj rx272_cstack, rx272_cur, rx272_curclass, "$!cstack"
  rx272_fail738:
    unless rx272_bstack, rx272_done736
    pop $I19, rx272_bstack
    if_null rx272_cstack, rx272_cstack_done741
    unless rx272_cstack, rx272_cstack_done741
    dec $I19
    set $P11, rx272_cstack[$I19]
  rx272_cstack_done741:
    pop rx272_rep, rx272_bstack
    pop rx272_pos, rx272_bstack
    pop $I19, rx272_bstack
    lt rx272_pos, -1, rx272_done736
    lt rx272_pos, 0, rx272_fail738
    eq $I19, 0, rx272_fail738
    nqp_islist $I20, rx272_cstack
    unless $I20, rx272_jump739
    elements $I18, rx272_bstack
    le $I18, 0, rx272_cut740
    dec $I18
    set $I18, rx272_bstack[$I18]
  rx272_cut740:
    assign rx272_cstack, $I18
  rx272_jump739:
    jump $I19
  rx272_done736:
    rx272_cur."!cursor_fail"()
    .return (rx272_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<$>" :subid("cuid_64_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 287
    .param pmc __lowered_lex_90 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_91 
    set self, __lowered_lex_90
    .local pmc rx276_start
    .local string rx276_tgt
    .local int rx276_pos
    .local int rx276_off
    .local int rx276_eos
    .local int rx276_rep
    .local pmc rx276_cur
    .local pmc rx276_curclass
    .local pmc rx276_bstack
    .local pmc rx276_cstack
    rx276_start = self."!cursor_start_all"()
    set rx276_cur, rx276_start[0]
    set rx276_tgt, rx276_start[1]
    set rx276_pos, rx276_start[2]
    set rx276_curclass, rx276_start[3]
    set rx276_bstack, rx276_start[4]
    set $I19, rx276_start[5]
    store_lex unicode:"$\x{a2}", rx276_cur
    length rx276_eos, rx276_tgt
    eq $I19, 1, rx276_restart750
    gt rx276_pos, rx276_eos, rx276_fail751
    repr_get_attr_int $I11, self, rx276_curclass, "$!from"
    ne $I11, -1, rxscan277_done757
    goto rxscan277_scan756
  rxscan277_loop755:
    inc rx276_pos
    gt rx276_pos, rx276_eos, rx276_fail751
    repr_bind_attr_int rx276_cur, rx276_curclass, "$!from", rx276_pos
  rxscan277_scan756:
    nqp_rxmark rx276_bstack, rxscan277_loop755, rx276_pos, 0
  rxscan277_done757:
    nqp_rxmark rx276_bstack, rxcap278_fail759, rx276_pos, 0
    add $I11, rx276_pos, 1
    gt $I11, rx276_eos, rx276_fail751
    ord $I11, rx276_tgt, rx276_pos
    ne $I11, 36, rx276_fail751
    add rx276_pos, 1
    nqp_rxpeek $I19, rx276_bstack, rxcap278_fail759
    inc $I19
    set $I11, rx276_bstack[$I19]
    repr_bind_attr_int rx276_cur, rx276_curclass, "$!pos", rx276_pos
    $P11 = rx276_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx276_pos)
    rx276_cstack = rx276_cur."!cursor_capture"($P11, "sym")
    goto rxcap278_done758
  rxcap278_fail759:
    goto rx276_fail751
  rxcap278_done758:
    repr_bind_attr_int rx276_cur, rx276_curclass, "$!pos", rx276_pos
    $P11 = rx276_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx276_curclass, "$!pos"
    lt $I11, 0, rx276_fail751
    repr_get_attr_int rx276_pos, $P11, rx276_curclass, "$!pos"
    rx276_cur."!cursor_pass"(rx276_pos, "metachar:sym<$>")
    .return (rx276_cur)
  rx276_restart750:
    repr_get_attr_obj rx276_cstack, rx276_cur, rx276_curclass, "$!cstack"
  rx276_fail751:
    unless rx276_bstack, rx276_done749
    pop $I19, rx276_bstack
    if_null rx276_cstack, rx276_cstack_done754
    unless rx276_cstack, rx276_cstack_done754
    dec $I19
    set $P11, rx276_cstack[$I19]
  rx276_cstack_done754:
    pop rx276_rep, rx276_bstack
    pop rx276_pos, rx276_bstack
    pop $I19, rx276_bstack
    lt rx276_pos, -1, rx276_done749
    lt rx276_pos, 0, rx276_fail751
    eq $I19, 0, rx276_fail751
    nqp_islist $I20, rx276_cstack
    unless $I20, rx276_jump752
    elements $I18, rx276_bstack
    le $I18, 0, rx276_cut753
    dec $I18
    set $I18, rx276_bstack[$I18]
  rx276_cut753:
    assign rx276_cstack, $I18
  rx276_jump752:
    jump $I19
  rx276_done749:
    rx276_cur."!cursor_fail"()
    .return (rx276_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<$$>" :subid("cuid_65_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 288
    .param pmc __lowered_lex_92 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_93 
    set self, __lowered_lex_92
    .local pmc rx280_start
    .local string rx280_tgt
    .local int rx280_pos
    .local int rx280_off
    .local int rx280_eos
    .local int rx280_rep
    .local pmc rx280_cur
    .local pmc rx280_curclass
    .local pmc rx280_bstack
    .local pmc rx280_cstack
    rx280_start = self."!cursor_start_all"()
    set rx280_cur, rx280_start[0]
    set rx280_tgt, rx280_start[1]
    set rx280_pos, rx280_start[2]
    set rx280_curclass, rx280_start[3]
    set rx280_bstack, rx280_start[4]
    set $I19, rx280_start[5]
    store_lex unicode:"$\x{a2}", rx280_cur
    length rx280_eos, rx280_tgt
    eq $I19, 1, rx280_restart763
    gt rx280_pos, rx280_eos, rx280_fail764
    repr_get_attr_int $I11, self, rx280_curclass, "$!from"
    ne $I11, -1, rxscan281_done770
    goto rxscan281_scan769
  rxscan281_loop768:
    inc rx280_pos
    gt rx280_pos, rx280_eos, rx280_fail764
    repr_bind_attr_int rx280_cur, rx280_curclass, "$!from", rx280_pos
  rxscan281_scan769:
    nqp_rxmark rx280_bstack, rxscan281_loop768, rx280_pos, 0
  rxscan281_done770:
    nqp_rxmark rx280_bstack, rxcap282_fail772, rx280_pos, 0
    add $I11, rx280_pos, 2
    gt $I11, rx280_eos, rx280_fail764
    nqp_string_equal_at $I11, rx280_tgt, ucs4:"$$", rx280_pos
    ne $I11, 1, rx280_fail764
    add rx280_pos, 2
    nqp_rxpeek $I19, rx280_bstack, rxcap282_fail772
    inc $I19
    set $I11, rx280_bstack[$I19]
    repr_bind_attr_int rx280_cur, rx280_curclass, "$!pos", rx280_pos
    $P11 = rx280_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx280_pos)
    rx280_cstack = rx280_cur."!cursor_capture"($P11, "sym")
    goto rxcap282_done771
  rxcap282_fail772:
    goto rx280_fail764
  rxcap282_done771:
    repr_bind_attr_int rx280_cur, rx280_curclass, "$!pos", rx280_pos
    $P11 = rx280_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx280_curclass, "$!pos"
    lt $I11, 0, rx280_fail764
    repr_get_attr_int rx280_pos, $P11, rx280_curclass, "$!pos"
    rx280_cur."!cursor_pass"(rx280_pos, "metachar:sym<$$>")
    .return (rx280_cur)
  rx280_restart763:
    repr_get_attr_obj rx280_cstack, rx280_cur, rx280_curclass, "$!cstack"
  rx280_fail764:
    unless rx280_bstack, rx280_done762
    pop $I19, rx280_bstack
    if_null rx280_cstack, rx280_cstack_done767
    unless rx280_cstack, rx280_cstack_done767
    dec $I19
    set $P11, rx280_cstack[$I19]
  rx280_cstack_done767:
    pop rx280_rep, rx280_bstack
    pop rx280_pos, rx280_bstack
    pop $I19, rx280_bstack
    lt rx280_pos, -1, rx280_done762
    lt rx280_pos, 0, rx280_fail764
    eq $I19, 0, rx280_fail764
    nqp_islist $I20, rx280_cstack
    unless $I20, rx280_jump765
    elements $I18, rx280_bstack
    le $I18, 0, rx280_cut766
    dec $I18
    set $I18, rx280_bstack[$I18]
  rx280_cut766:
    assign rx280_cstack, $I18
  rx280_jump765:
    jump $I19
  rx280_done762:
    rx280_cur."!cursor_fail"()
    .return (rx280_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:::>" :subid("cuid_66_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 289
    .param pmc __lowered_lex_94 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_95 
    set self, __lowered_lex_94
    .local pmc rx284_start
    .local string rx284_tgt
    .local int rx284_pos
    .local int rx284_off
    .local int rx284_eos
    .local int rx284_rep
    .local pmc rx284_cur
    .local pmc rx284_curclass
    .local pmc rx284_bstack
    .local pmc rx284_cstack
    rx284_start = self."!cursor_start_all"()
    set rx284_cur, rx284_start[0]
    set rx284_tgt, rx284_start[1]
    set rx284_pos, rx284_start[2]
    set rx284_curclass, rx284_start[3]
    set rx284_bstack, rx284_start[4]
    set $I19, rx284_start[5]
    store_lex unicode:"$\x{a2}", rx284_cur
    length rx284_eos, rx284_tgt
    eq $I19, 1, rx284_restart776
    gt rx284_pos, rx284_eos, rx284_fail777
    repr_get_attr_int $I11, self, rx284_curclass, "$!from"
    ne $I11, -1, rxscan285_done783
    goto rxscan285_scan782
  rxscan285_loop781:
    inc rx284_pos
    gt rx284_pos, rx284_eos, rx284_fail777
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!from", rx284_pos
  rxscan285_scan782:
    nqp_rxmark rx284_bstack, rxscan285_loop781, rx284_pos, 0
  rxscan285_done783:
    nqp_rxmark rx284_bstack, rxcap286_fail785, rx284_pos, 0
    add $I11, rx284_pos, 3
    gt $I11, rx284_eos, rx284_fail777
    nqp_string_equal_at $I11, rx284_tgt, ucs4:":::", rx284_pos
    ne $I11, 1, rx284_fail777
    add rx284_pos, 3
    nqp_rxpeek $I19, rx284_bstack, rxcap286_fail785
    inc $I19
    set $I11, rx284_bstack[$I19]
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx284_pos)
    rx284_cstack = rx284_cur."!cursor_capture"($P11, "sym")
    goto rxcap286_done784
  rxcap286_fail785:
    goto rx284_fail777
  rxcap286_done784:
    repr_bind_attr_int rx284_cur, rx284_curclass, "$!pos", rx284_pos
    $P11 = rx284_cur."panic"("::: not yet implemented")
    repr_get_attr_int $I11, $P11, rx284_curclass, "$!pos"
    lt $I11, 0, rx284_fail777
    repr_get_attr_int rx284_pos, $P11, rx284_curclass, "$!pos"
    rx284_cur."!cursor_pass"(rx284_pos, "metachar:sym<:::>")
    .return (rx284_cur)
  rx284_restart776:
    repr_get_attr_obj rx284_cstack, rx284_cur, rx284_curclass, "$!cstack"
  rx284_fail777:
    unless rx284_bstack, rx284_done775
    pop $I19, rx284_bstack
    if_null rx284_cstack, rx284_cstack_done780
    unless rx284_cstack, rx284_cstack_done780
    dec $I19
    set $P11, rx284_cstack[$I19]
  rx284_cstack_done780:
    pop rx284_rep, rx284_bstack
    pop rx284_pos, rx284_bstack
    pop $I19, rx284_bstack
    lt rx284_pos, -1, rx284_done775
    lt rx284_pos, 0, rx284_fail777
    eq $I19, 0, rx284_fail777
    nqp_islist $I20, rx284_cstack
    unless $I20, rx284_jump778
    elements $I18, rx284_bstack
    le $I18, 0, rx284_cut779
    dec $I18
    set $I18, rx284_bstack[$I18]
  rx284_cut779:
    assign rx284_cstack, $I18
  rx284_jump778:
    jump $I19
  rx284_done775:
    rx284_cur."!cursor_fail"()
    .return (rx284_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<::>" :subid("cuid_67_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 290
    .param pmc __lowered_lex_96 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_97 
    set self, __lowered_lex_96
    .local pmc rx288_start
    .local string rx288_tgt
    .local int rx288_pos
    .local int rx288_off
    .local int rx288_eos
    .local int rx288_rep
    .local pmc rx288_cur
    .local pmc rx288_curclass
    .local pmc rx288_bstack
    .local pmc rx288_cstack
    rx288_start = self."!cursor_start_all"()
    set rx288_cur, rx288_start[0]
    set rx288_tgt, rx288_start[1]
    set rx288_pos, rx288_start[2]
    set rx288_curclass, rx288_start[3]
    set rx288_bstack, rx288_start[4]
    set $I19, rx288_start[5]
    store_lex unicode:"$\x{a2}", rx288_cur
    length rx288_eos, rx288_tgt
    eq $I19, 1, rx288_restart789
    gt rx288_pos, rx288_eos, rx288_fail790
    repr_get_attr_int $I11, self, rx288_curclass, "$!from"
    ne $I11, -1, rxscan289_done796
    goto rxscan289_scan795
  rxscan289_loop794:
    inc rx288_pos
    gt rx288_pos, rx288_eos, rx288_fail790
    repr_bind_attr_int rx288_cur, rx288_curclass, "$!from", rx288_pos
  rxscan289_scan795:
    nqp_rxmark rx288_bstack, rxscan289_loop794, rx288_pos, 0
  rxscan289_done796:
    nqp_rxmark rx288_bstack, rxcap290_fail798, rx288_pos, 0
    add $I11, rx288_pos, 2
    gt $I11, rx288_eos, rx288_fail790
    nqp_string_equal_at $I11, rx288_tgt, ucs4:"::", rx288_pos
    ne $I11, 1, rx288_fail790
    add rx288_pos, 2
    nqp_rxpeek $I19, rx288_bstack, rxcap290_fail798
    inc $I19
    set $I11, rx288_bstack[$I19]
    repr_bind_attr_int rx288_cur, rx288_curclass, "$!pos", rx288_pos
    $P11 = rx288_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx288_pos)
    rx288_cstack = rx288_cur."!cursor_capture"($P11, "sym")
    goto rxcap290_done797
  rxcap290_fail798:
    goto rx288_fail790
  rxcap290_done797:
    repr_bind_attr_int rx288_cur, rx288_curclass, "$!pos", rx288_pos
    $P11 = rx288_cur."panic"(":: not yet implemented")
    repr_get_attr_int $I11, $P11, rx288_curclass, "$!pos"
    lt $I11, 0, rx288_fail790
    repr_get_attr_int rx288_pos, $P11, rx288_curclass, "$!pos"
    rx288_cur."!cursor_pass"(rx288_pos, "metachar:sym<::>")
    .return (rx288_cur)
  rx288_restart789:
    repr_get_attr_obj rx288_cstack, rx288_cur, rx288_curclass, "$!cstack"
  rx288_fail790:
    unless rx288_bstack, rx288_done788
    pop $I19, rx288_bstack
    if_null rx288_cstack, rx288_cstack_done793
    unless rx288_cstack, rx288_cstack_done793
    dec $I19
    set $P11, rx288_cstack[$I19]
  rx288_cstack_done793:
    pop rx288_rep, rx288_bstack
    pop rx288_pos, rx288_bstack
    pop $I19, rx288_bstack
    lt rx288_pos, -1, rx288_done788
    lt rx288_pos, 0, rx288_fail790
    eq $I19, 0, rx288_fail790
    nqp_islist $I20, rx288_cstack
    unless $I20, rx288_jump791
    elements $I18, rx288_bstack
    le $I18, 0, rx288_cut792
    dec $I18
    set $I18, rx288_bstack[$I18]
  rx288_cut792:
    assign rx288_cstack, $I18
  rx288_jump791:
    jump $I19
  rx288_done788:
    rx288_cur."!cursor_fail"()
    .return (rx288_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<lwb>" :subid("cuid_68_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 291
    .param pmc __lowered_lex_98 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_99 
    set self, __lowered_lex_98
    .local pmc rx292_start
    .local string rx292_tgt
    .local int rx292_pos
    .local int rx292_off
    .local int rx292_eos
    .local int rx292_rep
    .local pmc rx292_cur
    .local pmc rx292_curclass
    .local pmc rx292_bstack
    .local pmc rx292_cstack
    rx292_start = self."!cursor_start_all"()
    set rx292_cur, rx292_start[0]
    set rx292_tgt, rx292_start[1]
    set rx292_pos, rx292_start[2]
    set rx292_curclass, rx292_start[3]
    set rx292_bstack, rx292_start[4]
    set $I19, rx292_start[5]
    store_lex unicode:"$\x{a2}", rx292_cur
    length rx292_eos, rx292_tgt
    eq $I19, 1, rx292_restart802
    gt rx292_pos, rx292_eos, rx292_fail803
    repr_get_attr_int $I11, self, rx292_curclass, "$!from"
    ne $I11, -1, rxscan293_done809
    goto rxscan293_scan808
  rxscan293_loop807:
    inc rx292_pos
    gt rx292_pos, rx292_eos, rx292_fail803
    repr_bind_attr_int rx292_cur, rx292_curclass, "$!from", rx292_pos
  rxscan293_scan808:
    nqp_rxmark rx292_bstack, rxscan293_loop807, rx292_pos, 0
  rxscan293_done809:
    nqp_rxmark rx292_bstack, rxcap294_fail811, rx292_pos, 0
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt295_0813
    nqp_push_label $P11, alt295_1814
    nqp_rxmark rx292_bstack, alt295_end812, -1, 0
    rx292_cur."!alt"(rx292_pos, "alt_nfa__12_1431289914.34738", $P11)
    goto rx292_fail803
  alt295_0813:
    add $I11, rx292_pos, 2
    gt $I11, rx292_eos, rx292_fail803
    nqp_string_equal_at $I11, rx292_tgt, ucs4:"<<", rx292_pos
    ne $I11, 1, rx292_fail803
    add rx292_pos, 2
    goto alt295_end812
  alt295_1814:
    add $I11, rx292_pos, 1
    gt $I11, rx292_eos, rx292_fail803
    ord $I11, rx292_tgt, rx292_pos
    ne $I11, 171, rx292_fail803
    add rx292_pos, 1
    goto alt295_end812
  alt295_end812:
    nqp_rxcommit rx292_bstack, alt295_end812
    nqp_rxpeek $I19, rx292_bstack, rxcap294_fail811
    inc $I19
    set $I11, rx292_bstack[$I19]
    repr_bind_attr_int rx292_cur, rx292_curclass, "$!pos", rx292_pos
    $P11 = rx292_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx292_pos)
    rx292_cstack = rx292_cur."!cursor_capture"($P11, "sym")
    goto rxcap294_done810
  rxcap294_fail811:
    goto rx292_fail803
  rxcap294_done810:
    repr_bind_attr_int rx292_cur, rx292_curclass, "$!pos", rx292_pos
    $P11 = rx292_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx292_curclass, "$!pos"
    lt $I11, 0, rx292_fail803
    repr_get_attr_int rx292_pos, $P11, rx292_curclass, "$!pos"
    rx292_cur."!cursor_pass"(rx292_pos, "metachar:sym<lwb>")
    .return (rx292_cur)
  rx292_restart802:
    repr_get_attr_obj rx292_cstack, rx292_cur, rx292_curclass, "$!cstack"
  rx292_fail803:
    unless rx292_bstack, rx292_done801
    pop $I19, rx292_bstack
    if_null rx292_cstack, rx292_cstack_done806
    unless rx292_cstack, rx292_cstack_done806
    dec $I19
    set $P11, rx292_cstack[$I19]
  rx292_cstack_done806:
    pop rx292_rep, rx292_bstack
    pop rx292_pos, rx292_bstack
    pop $I19, rx292_bstack
    lt rx292_pos, -1, rx292_done801
    lt rx292_pos, 0, rx292_fail803
    eq $I19, 0, rx292_fail803
    nqp_islist $I20, rx292_cstack
    unless $I20, rx292_jump804
    elements $I18, rx292_bstack
    le $I18, 0, rx292_cut805
    dec $I18
    set $I18, rx292_bstack[$I18]
  rx292_cut805:
    assign rx292_cstack, $I18
  rx292_jump804:
    jump $I19
  rx292_done801:
    rx292_cur."!cursor_fail"()
    .return (rx292_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<rwb>" :subid("cuid_69_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 292
    .param pmc __lowered_lex_100 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_101 
    set self, __lowered_lex_100
    .local pmc rx297_start
    .local string rx297_tgt
    .local int rx297_pos
    .local int rx297_off
    .local int rx297_eos
    .local int rx297_rep
    .local pmc rx297_cur
    .local pmc rx297_curclass
    .local pmc rx297_bstack
    .local pmc rx297_cstack
    rx297_start = self."!cursor_start_all"()
    set rx297_cur, rx297_start[0]
    set rx297_tgt, rx297_start[1]
    set rx297_pos, rx297_start[2]
    set rx297_curclass, rx297_start[3]
    set rx297_bstack, rx297_start[4]
    set $I19, rx297_start[5]
    store_lex unicode:"$\x{a2}", rx297_cur
    length rx297_eos, rx297_tgt
    eq $I19, 1, rx297_restart818
    gt rx297_pos, rx297_eos, rx297_fail819
    repr_get_attr_int $I11, self, rx297_curclass, "$!from"
    ne $I11, -1, rxscan298_done825
    goto rxscan298_scan824
  rxscan298_loop823:
    inc rx297_pos
    gt rx297_pos, rx297_eos, rx297_fail819
    repr_bind_attr_int rx297_cur, rx297_curclass, "$!from", rx297_pos
  rxscan298_scan824:
    nqp_rxmark rx297_bstack, rxscan298_loop823, rx297_pos, 0
  rxscan298_done825:
    nqp_rxmark rx297_bstack, rxcap299_fail827, rx297_pos, 0
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt300_0829
    nqp_push_label $P11, alt300_1830
    nqp_rxmark rx297_bstack, alt300_end828, -1, 0
    rx297_cur."!alt"(rx297_pos, "alt_nfa__13_1431289914.35398", $P11)
    goto rx297_fail819
  alt300_0829:
    add $I11, rx297_pos, 2
    gt $I11, rx297_eos, rx297_fail819
    nqp_string_equal_at $I11, rx297_tgt, ucs4:">>", rx297_pos
    ne $I11, 1, rx297_fail819
    add rx297_pos, 2
    goto alt300_end828
  alt300_1830:
    add $I11, rx297_pos, 1
    gt $I11, rx297_eos, rx297_fail819
    ord $I11, rx297_tgt, rx297_pos
    ne $I11, 187, rx297_fail819
    add rx297_pos, 1
    goto alt300_end828
  alt300_end828:
    nqp_rxcommit rx297_bstack, alt300_end828
    nqp_rxpeek $I19, rx297_bstack, rxcap299_fail827
    inc $I19
    set $I11, rx297_bstack[$I19]
    repr_bind_attr_int rx297_cur, rx297_curclass, "$!pos", rx297_pos
    $P11 = rx297_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx297_pos)
    rx297_cstack = rx297_cur."!cursor_capture"($P11, "sym")
    goto rxcap299_done826
  rxcap299_fail827:
    goto rx297_fail819
  rxcap299_done826:
    repr_bind_attr_int rx297_cur, rx297_curclass, "$!pos", rx297_pos
    $P11 = rx297_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx297_curclass, "$!pos"
    lt $I11, 0, rx297_fail819
    repr_get_attr_int rx297_pos, $P11, rx297_curclass, "$!pos"
    rx297_cur."!cursor_pass"(rx297_pos, "metachar:sym<rwb>")
    .return (rx297_cur)
  rx297_restart818:
    repr_get_attr_obj rx297_cstack, rx297_cur, rx297_curclass, "$!cstack"
  rx297_fail819:
    unless rx297_bstack, rx297_done817
    pop $I19, rx297_bstack
    if_null rx297_cstack, rx297_cstack_done822
    unless rx297_cstack, rx297_cstack_done822
    dec $I19
    set $P11, rx297_cstack[$I19]
  rx297_cstack_done822:
    pop rx297_rep, rx297_bstack
    pop rx297_pos, rx297_bstack
    pop $I19, rx297_bstack
    lt rx297_pos, -1, rx297_done817
    lt rx297_pos, 0, rx297_fail819
    eq $I19, 0, rx297_fail819
    nqp_islist $I20, rx297_cstack
    unless $I20, rx297_jump820
    elements $I18, rx297_bstack
    le $I18, 0, rx297_cut821
    dec $I18
    set $I18, rx297_bstack[$I18]
  rx297_cut821:
    assign rx297_cstack, $I18
  rx297_jump820:
    jump $I19
  rx297_done817:
    rx297_cur."!cursor_fail"()
    .return (rx297_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<from>" :subid("cuid_70_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 293
    .param pmc __lowered_lex_102 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_103 
    set self, __lowered_lex_102
    .local pmc rx302_start
    .local string rx302_tgt
    .local int rx302_pos
    .local int rx302_off
    .local int rx302_eos
    .local int rx302_rep
    .local pmc rx302_cur
    .local pmc rx302_curclass
    .local pmc rx302_bstack
    .local pmc rx302_cstack
    rx302_start = self."!cursor_start_all"()
    set rx302_cur, rx302_start[0]
    set rx302_tgt, rx302_start[1]
    set rx302_pos, rx302_start[2]
    set rx302_curclass, rx302_start[3]
    set rx302_bstack, rx302_start[4]
    set $I19, rx302_start[5]
    store_lex unicode:"$\x{a2}", rx302_cur
    length rx302_eos, rx302_tgt
    eq $I19, 1, rx302_restart834
    gt rx302_pos, rx302_eos, rx302_fail835
    repr_get_attr_int $I11, self, rx302_curclass, "$!from"
    ne $I11, -1, rxscan303_done841
    goto rxscan303_scan840
  rxscan303_loop839:
    inc rx302_pos
    index rx302_pos, rx302_tgt, ucs4:"<(", rx302_pos
    eq rx302_pos, -1, rx302_fail835
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!from", rx302_pos
  rxscan303_scan840:
    nqp_rxmark rx302_bstack, rxscan303_loop839, rx302_pos, 0
  rxscan303_done841:
    add $I11, rx302_pos, 2
    gt $I11, rx302_eos, rx302_fail835
    nqp_string_equal_at $I11, rx302_tgt, ucs4:"<(", rx302_pos
    ne $I11, 1, rx302_fail835
    add rx302_pos, 2
    repr_bind_attr_int rx302_cur, rx302_curclass, "$!pos", rx302_pos
    $P11 = rx302_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx302_curclass, "$!pos"
    lt $I11, 0, rx302_fail835
    repr_get_attr_int rx302_pos, $P11, rx302_curclass, "$!pos"
    rx302_cur."!cursor_pass"(rx302_pos, "metachar:sym<from>")
    .return (rx302_cur)
  rx302_restart834:
    repr_get_attr_obj rx302_cstack, rx302_cur, rx302_curclass, "$!cstack"
  rx302_fail835:
    unless rx302_bstack, rx302_done833
    pop $I19, rx302_bstack
    if_null rx302_cstack, rx302_cstack_done838
    unless rx302_cstack, rx302_cstack_done838
    dec $I19
    set $P11, rx302_cstack[$I19]
  rx302_cstack_done838:
    pop rx302_rep, rx302_bstack
    pop rx302_pos, rx302_bstack
    pop $I19, rx302_bstack
    lt rx302_pos, -1, rx302_done833
    lt rx302_pos, 0, rx302_fail835
    eq $I19, 0, rx302_fail835
    nqp_islist $I20, rx302_cstack
    unless $I20, rx302_jump836
    elements $I18, rx302_bstack
    le $I18, 0, rx302_cut837
    dec $I18
    set $I18, rx302_bstack[$I18]
  rx302_cut837:
    assign rx302_cstack, $I18
  rx302_jump836:
    jump $I19
  rx302_done833:
    rx302_cur."!cursor_fail"()
    .return (rx302_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<to>" :subid("cuid_71_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 294
    .param pmc __lowered_lex_104 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_105 
    set self, __lowered_lex_104
    .local pmc rx305_start
    .local string rx305_tgt
    .local int rx305_pos
    .local int rx305_off
    .local int rx305_eos
    .local int rx305_rep
    .local pmc rx305_cur
    .local pmc rx305_curclass
    .local pmc rx305_bstack
    .local pmc rx305_cstack
    rx305_start = self."!cursor_start_all"()
    set rx305_cur, rx305_start[0]
    set rx305_tgt, rx305_start[1]
    set rx305_pos, rx305_start[2]
    set rx305_curclass, rx305_start[3]
    set rx305_bstack, rx305_start[4]
    set $I19, rx305_start[5]
    store_lex unicode:"$\x{a2}", rx305_cur
    length rx305_eos, rx305_tgt
    eq $I19, 1, rx305_restart845
    gt rx305_pos, rx305_eos, rx305_fail846
    repr_get_attr_int $I11, self, rx305_curclass, "$!from"
    ne $I11, -1, rxscan306_done852
    goto rxscan306_scan851
  rxscan306_loop850:
    inc rx305_pos
    index rx305_pos, rx305_tgt, ucs4:")>", rx305_pos
    eq rx305_pos, -1, rx305_fail846
    repr_bind_attr_int rx305_cur, rx305_curclass, "$!from", rx305_pos
  rxscan306_scan851:
    nqp_rxmark rx305_bstack, rxscan306_loop850, rx305_pos, 0
  rxscan306_done852:
    add $I11, rx305_pos, 2
    gt $I11, rx305_eos, rx305_fail846
    nqp_string_equal_at $I11, rx305_tgt, ucs4:")>", rx305_pos
    ne $I11, 1, rx305_fail846
    add rx305_pos, 2
    repr_bind_attr_int rx305_cur, rx305_curclass, "$!pos", rx305_pos
    $P11 = rx305_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx305_curclass, "$!pos"
    lt $I11, 0, rx305_fail846
    repr_get_attr_int rx305_pos, $P11, rx305_curclass, "$!pos"
    rx305_cur."!cursor_pass"(rx305_pos, "metachar:sym<to>")
    .return (rx305_cur)
  rx305_restart845:
    repr_get_attr_obj rx305_cstack, rx305_cur, rx305_curclass, "$!cstack"
  rx305_fail846:
    unless rx305_bstack, rx305_done844
    pop $I19, rx305_bstack
    if_null rx305_cstack, rx305_cstack_done849
    unless rx305_cstack, rx305_cstack_done849
    dec $I19
    set $P11, rx305_cstack[$I19]
  rx305_cstack_done849:
    pop rx305_rep, rx305_bstack
    pop rx305_pos, rx305_bstack
    pop $I19, rx305_bstack
    lt rx305_pos, -1, rx305_done844
    lt rx305_pos, 0, rx305_fail846
    eq $I19, 0, rx305_fail846
    nqp_islist $I20, rx305_cstack
    unless $I20, rx305_jump847
    elements $I18, rx305_bstack
    le $I18, 0, rx305_cut848
    dec $I18
    set $I18, rx305_bstack[$I18]
  rx305_cut848:
    assign rx305_cstack, $I18
  rx305_jump847:
    jump $I19
  rx305_done844:
    rx305_cur."!cursor_fail"()
    .return (rx305_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<bs>" :subid("cuid_72_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 295
    .param pmc __lowered_lex_106 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_107 
    set self, __lowered_lex_106
    .local pmc rx308_start
    .local string rx308_tgt
    .local int rx308_pos
    .local int rx308_off
    .local int rx308_eos
    .local int rx308_rep
    .local pmc rx308_cur
    .local pmc rx308_curclass
    .local pmc rx308_bstack
    .local pmc rx308_cstack
    rx308_start = self."!cursor_start_all"()
    set rx308_cur, rx308_start[0]
    set rx308_tgt, rx308_start[1]
    set rx308_pos, rx308_start[2]
    set rx308_curclass, rx308_start[3]
    set rx308_bstack, rx308_start[4]
    set $I19, rx308_start[5]
    store_lex unicode:"$\x{a2}", rx308_cur
    length rx308_eos, rx308_tgt
    eq $I19, 1, rx308_restart856
    gt rx308_pos, rx308_eos, rx308_fail857
    repr_get_attr_int $I11, self, rx308_curclass, "$!from"
    ne $I11, -1, rxscan309_done863
    goto rxscan309_scan862
  rxscan309_loop861:
    inc rx308_pos
    gt rx308_pos, rx308_eos, rx308_fail857
    repr_bind_attr_int rx308_cur, rx308_curclass, "$!from", rx308_pos
  rxscan309_scan862:
    nqp_rxmark rx308_bstack, rxscan309_loop861, rx308_pos, 0
  rxscan309_done863:
    ge rx308_pos, rx308_eos, rx308_fail857
    substr $S11, rx308_tgt, rx308_pos, 1
    index $I11, ucs4:"\\", $S11
    lt $I11, 0, rx308_fail857
    inc rx308_pos
    repr_bind_attr_int rx308_cur, rx308_curclass, "$!pos", rx308_pos
    $P11 = rx308_cur."backslash"()
    repr_get_attr_int $I11, $P11, rx308_curclass, "$!pos"
    lt $I11, 0, rx308_fail857
    nqp_rxmark rx308_bstack, rxsubrule310_pass864, -1, 0
  rxsubrule310_pass864:
    rx308_cstack = rx308_cur."!cursor_capture"($P11, "backslash")
    repr_get_attr_int rx308_pos, $P11, rx308_curclass, "$!pos"
    repr_bind_attr_int rx308_cur, rx308_curclass, "$!pos", rx308_pos
    $P11 = rx308_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx308_curclass, "$!pos"
    lt $I11, 0, rx308_fail857
    repr_get_attr_int rx308_pos, $P11, rx308_curclass, "$!pos"
    rx308_cur."!cursor_pass"(rx308_pos, "metachar:sym<bs>")
    .return (rx308_cur)
  rx308_restart856:
    repr_get_attr_obj rx308_cstack, rx308_cur, rx308_curclass, "$!cstack"
  rx308_fail857:
    unless rx308_bstack, rx308_done855
    pop $I19, rx308_bstack
    if_null rx308_cstack, rx308_cstack_done860
    unless rx308_cstack, rx308_cstack_done860
    dec $I19
    set $P11, rx308_cstack[$I19]
  rx308_cstack_done860:
    pop rx308_rep, rx308_bstack
    pop rx308_pos, rx308_bstack
    pop $I19, rx308_bstack
    lt rx308_pos, -1, rx308_done855
    lt rx308_pos, 0, rx308_fail857
    eq $I19, 0, rx308_fail857
    nqp_islist $I20, rx308_cstack
    unless $I20, rx308_jump858
    elements $I18, rx308_bstack
    le $I18, 0, rx308_cut859
    dec $I18
    set $I18, rx308_bstack[$I18]
  rx308_cut859:
    assign rx308_cstack, $I18
  rx308_jump858:
    jump $I19
  rx308_done855:
    rx308_cur."!cursor_fail"()
    .return (rx308_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<mod>" :subid("cuid_73_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 296
    .param pmc __lowered_lex_108 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_109 
    set self, __lowered_lex_108
    .local pmc rx312_start
    .local string rx312_tgt
    .local int rx312_pos
    .local int rx312_off
    .local int rx312_eos
    .local int rx312_rep
    .local pmc rx312_cur
    .local pmc rx312_curclass
    .local pmc rx312_bstack
    .local pmc rx312_cstack
    rx312_start = self."!cursor_start_all"()
    set rx312_cur, rx312_start[0]
    set rx312_tgt, rx312_start[1]
    set rx312_pos, rx312_start[2]
    set rx312_curclass, rx312_start[3]
    set rx312_bstack, rx312_start[4]
    set $I19, rx312_start[5]
    store_lex unicode:"$\x{a2}", rx312_cur
    length rx312_eos, rx312_tgt
    eq $I19, 1, rx312_restart868
    gt rx312_pos, rx312_eos, rx312_fail869
    repr_get_attr_int $I11, self, rx312_curclass, "$!from"
    ne $I11, -1, rxscan313_done875
    goto rxscan313_scan874
  rxscan313_loop873:
    inc rx312_pos
    gt rx312_pos, rx312_eos, rx312_fail869
    repr_bind_attr_int rx312_cur, rx312_curclass, "$!from", rx312_pos
  rxscan313_scan874:
    nqp_rxmark rx312_bstack, rxscan313_loop873, rx312_pos, 0
  rxscan313_done875:
    repr_bind_attr_int rx312_cur, rx312_curclass, "$!pos", rx312_pos
    $P11 = rx312_cur."mod_internal"()
    repr_get_attr_int $I11, $P11, rx312_curclass, "$!pos"
    lt $I11, 0, rx312_fail869
    nqp_rxmark rx312_bstack, rxsubrule314_pass876, -1, 0
  rxsubrule314_pass876:
    rx312_cstack = rx312_cur."!cursor_capture"($P11, "mod_internal")
    repr_get_attr_int rx312_pos, $P11, rx312_curclass, "$!pos"
    rx312_cur."!cursor_pass"(rx312_pos, "metachar:sym<mod>")
    .return (rx312_cur)
  rx312_restart868:
    repr_get_attr_obj rx312_cstack, rx312_cur, rx312_curclass, "$!cstack"
  rx312_fail869:
    unless rx312_bstack, rx312_done867
    pop $I19, rx312_bstack
    if_null rx312_cstack, rx312_cstack_done872
    unless rx312_cstack, rx312_cstack_done872
    dec $I19
    set $P11, rx312_cstack[$I19]
  rx312_cstack_done872:
    pop rx312_rep, rx312_bstack
    pop rx312_pos, rx312_bstack
    pop $I19, rx312_bstack
    lt rx312_pos, -1, rx312_done867
    lt rx312_pos, 0, rx312_fail869
    eq $I19, 0, rx312_fail869
    nqp_islist $I20, rx312_cstack
    unless $I20, rx312_jump870
    elements $I18, rx312_bstack
    le $I18, 0, rx312_cut871
    dec $I18
    set $I18, rx312_bstack[$I18]
  rx312_cut871:
    assign rx312_cstack, $I18
  rx312_jump870:
    jump $I19
  rx312_done867:
    rx312_cur."!cursor_fail"()
    .return (rx312_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<quantifier>" :subid("cuid_74_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 297
    .param pmc __lowered_lex_110 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_111 
    set self, __lowered_lex_110
    .local pmc rx315_start
    .local string rx315_tgt
    .local int rx315_pos
    .local int rx315_off
    .local int rx315_eos
    .local int rx315_rep
    .local pmc rx315_cur
    .local pmc rx315_curclass
    .local pmc rx315_bstack
    .local pmc rx315_cstack
    rx315_start = self."!cursor_start_all"()
    set rx315_cur, rx315_start[0]
    set rx315_tgt, rx315_start[1]
    set rx315_pos, rx315_start[2]
    set rx315_curclass, rx315_start[3]
    set rx315_bstack, rx315_start[4]
    set $I19, rx315_start[5]
    store_lex unicode:"$\x{a2}", rx315_cur
    length rx315_eos, rx315_tgt
    eq $I19, 1, rx315_restart879
    gt rx315_pos, rx315_eos, rx315_fail880
    repr_get_attr_int $I11, self, rx315_curclass, "$!from"
    ne $I11, -1, rxscan316_done886
    goto rxscan316_scan885
  rxscan316_loop884:
    inc rx315_pos
    gt rx315_pos, rx315_eos, rx315_fail880
    repr_bind_attr_int rx315_cur, rx315_curclass, "$!from", rx315_pos
  rxscan316_scan885:
    nqp_rxmark rx315_bstack, rxscan316_loop884, rx315_pos, 0
  rxscan316_done886:
    repr_bind_attr_int rx315_cur, rx315_curclass, "$!pos", rx315_pos
    $P11 = rx315_cur."rxstopper"()
    repr_get_attr_int $I11, $P11, rx315_curclass, "$!pos"
    ge $I11, 0, rx315_fail880
    repr_bind_attr_int rx315_cur, rx315_curclass, "$!pos", rx315_pos
    $P11 = rx315_cur."quantifier"()
    repr_get_attr_int $I11, $P11, rx315_curclass, "$!pos"
    lt $I11, 0, rx315_fail880
    nqp_rxmark rx315_bstack, rxsubrule317_pass887, -1, 0
  rxsubrule317_pass887:
    rx315_cstack = rx315_cur."!cursor_capture"($P11, "quantifier")
    repr_get_attr_int rx315_pos, $P11, rx315_curclass, "$!pos"
    repr_bind_attr_int rx315_cur, rx315_curclass, "$!pos", rx315_pos
    $P11 = rx315_cur."throw_solitary_quantifier"()
    repr_get_attr_int $I11, $P11, rx315_curclass, "$!pos"
    lt $I11, 0, rx315_fail880
    repr_get_attr_int rx315_pos, $P11, rx315_curclass, "$!pos"
    rx315_cur."!cursor_pass"(rx315_pos, "metachar:sym<quantifier>")
    .return (rx315_cur)
  rx315_restart879:
    repr_get_attr_obj rx315_cstack, rx315_cur, rx315_curclass, "$!cstack"
  rx315_fail880:
    unless rx315_bstack, rx315_done878
    pop $I19, rx315_bstack
    if_null rx315_cstack, rx315_cstack_done883
    unless rx315_cstack, rx315_cstack_done883
    dec $I19
    set $P11, rx315_cstack[$I19]
  rx315_cstack_done883:
    pop rx315_rep, rx315_bstack
    pop rx315_pos, rx315_bstack
    pop $I19, rx315_bstack
    lt rx315_pos, -1, rx315_done878
    lt rx315_pos, 0, rx315_fail880
    eq $I19, 0, rx315_fail880
    nqp_islist $I20, rx315_cstack
    unless $I20, rx315_jump881
    elements $I18, rx315_bstack
    le $I18, 0, rx315_cut882
    dec $I18
    set $I18, rx315_bstack[$I18]
  rx315_cut882:
    assign rx315_cstack, $I18
  rx315_jump881:
    jump $I19
  rx315_done878:
    rx315_cur."!cursor_fail"()
    .return (rx315_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<~>" :subid("cuid_75_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 302
    .param pmc __lowered_lex_112 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_113 
    set self, __lowered_lex_112
    .local pmc rx319_start
    .local string rx319_tgt
    .local int rx319_pos
    .local int rx319_off
    .local int rx319_eos
    .local int rx319_rep
    .local pmc rx319_cur
    .local pmc rx319_curclass
    .local pmc rx319_bstack
    .local pmc rx319_cstack
    rx319_start = self."!cursor_start_all"()
    set rx319_cur, rx319_start[0]
    set rx319_tgt, rx319_start[1]
    set rx319_pos, rx319_start[2]
    set rx319_curclass, rx319_start[3]
    set rx319_bstack, rx319_start[4]
    set $I19, rx319_start[5]
    store_lex unicode:"$\x{a2}", rx319_cur
    length rx319_eos, rx319_tgt
    eq $I19, 1, rx319_restart891
    gt rx319_pos, rx319_eos, rx319_fail892
    repr_get_attr_int $I11, self, rx319_curclass, "$!from"
    ne $I11, -1, rxscan320_done898
    goto rxscan320_scan897
  rxscan320_loop896:
    inc rx319_pos
    gt rx319_pos, rx319_eos, rx319_fail892
    repr_bind_attr_int rx319_cur, rx319_curclass, "$!from", rx319_pos
  rxscan320_scan897:
    nqp_rxmark rx319_bstack, rxscan320_loop896, rx319_pos, 0
  rxscan320_done898:
    nqp_rxmark rx319_bstack, rxcap321_fail900, rx319_pos, 0
    add $I11, rx319_pos, 1
    gt $I11, rx319_eos, rx319_fail892
    ord $I11, rx319_tgt, rx319_pos
    ne $I11, 126, rx319_fail892
    add rx319_pos, 1
    nqp_rxpeek $I19, rx319_bstack, rxcap321_fail900
    inc $I19
    set $I11, rx319_bstack[$I19]
    repr_bind_attr_int rx319_cur, rx319_curclass, "$!pos", rx319_pos
    $P11 = rx319_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx319_pos)
    rx319_cstack = rx319_cur."!cursor_capture"($P11, "sym")
    goto rxcap321_done899
  rxcap321_fail900:
    goto rx319_fail892
  rxcap321_done899:
    repr_bind_attr_int rx319_cur, rx319_curclass, "$!pos", rx319_pos
    $P11 = rx319_cur."ws"()
    repr_get_attr_int $I11, $P11, rx319_curclass, "$!pos"
    lt $I11, 0, rx319_fail892
    repr_get_attr_int rx319_pos, $P11, rx319_curclass, "$!pos"
    repr_bind_attr_int rx319_cur, rx319_curclass, "$!pos", rx319_pos
    $P11 = rx319_cur."quantified_atom"()
    repr_get_attr_int $I11, $P11, rx319_curclass, "$!pos"
    lt $I11, 0, rx319_fail892
    nqp_rxmark rx319_bstack, rxsubrule323_pass902, -1, 0
  rxsubrule323_pass902:
    rx319_cstack = rx319_cur."!cursor_capture"($P11, "GOAL")
    repr_get_attr_int rx319_pos, $P11, rx319_curclass, "$!pos"
    repr_bind_attr_int rx319_cur, rx319_curclass, "$!pos", rx319_pos
    $P11 = rx319_cur."ws"()
    repr_get_attr_int $I11, $P11, rx319_curclass, "$!pos"
    lt $I11, 0, rx319_fail892
    repr_get_attr_int rx319_pos, $P11, rx319_curclass, "$!pos"
    repr_bind_attr_int rx319_cur, rx319_curclass, "$!pos", rx319_pos
    $P11 = rx319_cur."quantified_atom"()
    repr_get_attr_int $I11, $P11, rx319_curclass, "$!pos"
    lt $I11, 0, rx319_fail892
    nqp_rxmark rx319_bstack, rxsubrule325_pass904, -1, 0
  rxsubrule325_pass904:
    rx319_cstack = rx319_cur."!cursor_capture"($P11, "EXPR")
    repr_get_attr_int rx319_pos, $P11, rx319_curclass, "$!pos"
    rx319_cur."!cursor_pass"(rx319_pos, "metachar:sym<~>")
    .return (rx319_cur)
  rx319_restart891:
    repr_get_attr_obj rx319_cstack, rx319_cur, rx319_curclass, "$!cstack"
  rx319_fail892:
    unless rx319_bstack, rx319_done890
    pop $I19, rx319_bstack
    if_null rx319_cstack, rx319_cstack_done895
    unless rx319_cstack, rx319_cstack_done895
    dec $I19
    set $P11, rx319_cstack[$I19]
  rx319_cstack_done895:
    pop rx319_rep, rx319_bstack
    pop rx319_pos, rx319_bstack
    pop $I19, rx319_bstack
    lt rx319_pos, -1, rx319_done890
    lt rx319_pos, 0, rx319_fail892
    eq $I19, 0, rx319_fail892
    nqp_islist $I20, rx319_cstack
    unless $I20, rx319_jump893
    elements $I18, rx319_bstack
    le $I18, 0, rx319_cut894
    dec $I18
    set $I18, rx319_bstack[$I18]
  rx319_cut894:
    assign rx319_cstack, $I18
  rx319_jump893:
    jump $I19
  rx319_done890:
    rx319_cur."!cursor_fail"()
    .return (rx319_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<{*}>" :subid("cuid_76_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 308
    .param pmc __lowered_lex_114 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_115 
    set self, __lowered_lex_114
    .local pmc rx326_start
    .local string rx326_tgt
    .local int rx326_pos
    .local int rx326_off
    .local int rx326_eos
    .local int rx326_rep
    .local pmc rx326_cur
    .local pmc rx326_curclass
    .local pmc rx326_bstack
    .local pmc rx326_cstack
    rx326_start = self."!cursor_start_all"()
    set rx326_cur, rx326_start[0]
    set rx326_tgt, rx326_start[1]
    set rx326_pos, rx326_start[2]
    set rx326_curclass, rx326_start[3]
    set rx326_bstack, rx326_start[4]
    set $I19, rx326_start[5]
    store_lex unicode:"$\x{a2}", rx326_cur
    length rx326_eos, rx326_tgt
    eq $I19, 1, rx326_restart907
    gt rx326_pos, rx326_eos, rx326_fail908
    repr_get_attr_int $I11, self, rx326_curclass, "$!from"
    ne $I11, -1, rxscan327_done914
    goto rxscan327_scan913
  rxscan327_loop912:
    inc rx326_pos
    gt rx326_pos, rx326_eos, rx326_fail908
    repr_bind_attr_int rx326_cur, rx326_curclass, "$!from", rx326_pos
  rxscan327_scan913:
    nqp_rxmark rx326_bstack, rxscan327_loop912, rx326_pos, 0
  rxscan327_done914:
    nqp_rxmark rx326_bstack, rxcap328_fail916, rx326_pos, 0
    add $I11, rx326_pos, 3
    gt $I11, rx326_eos, rx326_fail908
    nqp_string_equal_at $I11, rx326_tgt, ucs4:"{*}", rx326_pos
    ne $I11, 1, rx326_fail908
    add rx326_pos, 3
    nqp_rxpeek $I19, rx326_bstack, rxcap328_fail916
    inc $I19
    set $I11, rx326_bstack[$I19]
    repr_bind_attr_int rx326_cur, rx326_curclass, "$!pos", rx326_pos
    $P11 = rx326_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx326_pos)
    rx326_cstack = rx326_cur."!cursor_capture"($P11, "sym")
    goto rxcap328_done915
  rxcap328_fail916:
    goto rx326_fail908
  rxcap328_done915:
    nqp_rxmark rx326_bstack, rxquantr329_done918, rx326_pos, 0
  rxquantr329_loop917:
    nqp_rxmark rx326_bstack, rxquantr330_done920, rx326_pos, 0
  rxquantr330_loop919:
    ge rx326_pos, rx326_eos, rx326_fail908
    substr $S11, rx326_tgt, rx326_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx326_fail908
    inc rx326_pos
    nqp_rxpeek $I19, rx326_bstack, rxquantr330_done920
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr330_done920
    inc rx326_rep
    nqp_rxmark rx326_bstack, rxquantr330_done920, rx326_pos, rx326_rep
    goto rxquantr330_loop919
  rxquantr330_done920:
    add $I11, rx326_pos, 3
    gt $I11, rx326_eos, rx326_fail908
    nqp_string_equal_at $I11, rx326_tgt, ucs4:"#= ", rx326_pos
    ne $I11, 1, rx326_fail908
    add rx326_pos, 3
    nqp_rxmark rx326_bstack, rxquantr331_done922, rx326_pos, 0
  rxquantr331_loop921:
    ge rx326_pos, rx326_eos, rx326_fail908
    substr $S11, rx326_tgt, rx326_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx326_fail908
    inc rx326_pos
    nqp_rxpeek $I19, rx326_bstack, rxquantr331_done922
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr331_done922
    inc rx326_rep
    nqp_rxmark rx326_bstack, rxquantr331_done922, rx326_pos, rx326_rep
    goto rxquantr331_loop921
  rxquantr331_done922:
    nqp_rxmark rx326_bstack, rxcap332_fail924, rx326_pos, 0
    nqp_rxmark rx326_bstack, rxquantr333_done926, -1, 0
  rxquantr333_loop925:
    ge rx326_pos, rx326_eos, rx326_fail908
    is_cclass $I11, .CCLASS_WHITESPACE, rx326_tgt, rx326_pos
    if $I11, rx326_fail908
    inc rx326_pos
    nqp_rxpeek $I19, rx326_bstack, rxquantr333_done926
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr333_done926
    inc rx326_rep
    nqp_rxmark rx326_bstack, rxquantr333_done926, rx326_pos, rx326_rep
    goto rxquantr333_loop925
  rxquantr333_done926:
    nqp_rxmark rx326_bstack, rxquantr334_done928, rx326_pos, 0
  rxquantr334_loop927:
    nqp_rxmark rx326_bstack, rxquantr335_done930, -1, 0
  rxquantr335_loop929:
    ge rx326_pos, rx326_eos, rx326_fail908
    substr $S11, rx326_tgt, rx326_pos, 1
    index $I11, ucs4:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", $S11
    lt $I11, 0, rx326_fail908
    inc rx326_pos
    nqp_rxpeek $I19, rx326_bstack, rxquantr335_done930
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr335_done930
    inc rx326_rep
    nqp_rxmark rx326_bstack, rxquantr335_done930, rx326_pos, rx326_rep
    goto rxquantr335_loop929
  rxquantr335_done930:
    nqp_rxmark rx326_bstack, rxquantr336_done932, -1, 0
  rxquantr336_loop931:
    ge rx326_pos, rx326_eos, rx326_fail908
    is_cclass $I11, .CCLASS_WHITESPACE, rx326_tgt, rx326_pos
    if $I11, rx326_fail908
    inc rx326_pos
    nqp_rxpeek $I19, rx326_bstack, rxquantr336_done932
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr336_done932
    inc rx326_rep
    nqp_rxmark rx326_bstack, rxquantr336_done932, rx326_pos, rx326_rep
    goto rxquantr336_loop931
  rxquantr336_done932:
    nqp_rxpeek $I19, rx326_bstack, rxquantr334_done928
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr334_done928
    inc rx326_rep
    nqp_rxmark rx326_bstack, rxquantr334_done928, rx326_pos, rx326_rep
    goto rxquantr334_loop927
  rxquantr334_done928:
    nqp_rxpeek $I19, rx326_bstack, rxcap332_fail924
    inc $I19
    set $I11, rx326_bstack[$I19]
    repr_bind_attr_int rx326_cur, rx326_curclass, "$!pos", rx326_pos
    $P11 = rx326_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx326_pos)
    rx326_cstack = rx326_cur."!cursor_capture"($P11, "key")
    goto rxcap332_done923
  rxcap332_fail924:
    goto rx326_fail908
  rxcap332_done923:
    nqp_rxpeek $I19, rx326_bstack, rxquantr329_done918
    inc $I19
    inc $I19
    set rx326_rep, rx326_bstack[$I19]
    nqp_rxcommit rx326_bstack, rxquantr329_done918
    inc rx326_rep
  rxquantr329_done918:
    rx326_cur."!cursor_pass"(rx326_pos, "metachar:sym<{*}>")
    .return (rx326_cur)
  rx326_restart907:
    repr_get_attr_obj rx326_cstack, rx326_cur, rx326_curclass, "$!cstack"
  rx326_fail908:
    unless rx326_bstack, rx326_done906
    pop $I19, rx326_bstack
    if_null rx326_cstack, rx326_cstack_done911
    unless rx326_cstack, rx326_cstack_done911
    dec $I19
    set $P11, rx326_cstack[$I19]
  rx326_cstack_done911:
    pop rx326_rep, rx326_bstack
    pop rx326_pos, rx326_bstack
    pop $I19, rx326_bstack
    lt rx326_pos, -1, rx326_done906
    lt rx326_pos, 0, rx326_fail908
    eq $I19, 0, rx326_fail908
    nqp_islist $I20, rx326_cstack
    unless $I20, rx326_jump909
    elements $I18, rx326_bstack
    le $I18, 0, rx326_cut910
    dec $I18
    set $I18, rx326_bstack[$I18]
  rx326_cut910:
    assign rx326_cstack, $I18
  rx326_jump909:
    jump $I19
  rx326_done906:
    rx326_cur."!cursor_fail"()
    .return (rx326_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<assert>" :subid("cuid_77_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 312
    .param pmc __lowered_lex_116 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_117 
    set self, __lowered_lex_116
    .local pmc rx337_start
    .local string rx337_tgt
    .local int rx337_pos
    .local int rx337_off
    .local int rx337_eos
    .local int rx337_rep
    .local pmc rx337_cur
    .local pmc rx337_curclass
    .local pmc rx337_bstack
    .local pmc rx337_cstack
    rx337_start = self."!cursor_start_all"()
    set rx337_cur, rx337_start[0]
    set rx337_tgt, rx337_start[1]
    set rx337_pos, rx337_start[2]
    set rx337_curclass, rx337_start[3]
    set rx337_bstack, rx337_start[4]
    set $I19, rx337_start[5]
    store_lex unicode:"$\x{a2}", rx337_cur
    length rx337_eos, rx337_tgt
    eq $I19, 1, rx337_restart935
    gt rx337_pos, rx337_eos, rx337_fail936
    repr_get_attr_int $I11, self, rx337_curclass, "$!from"
    ne $I11, -1, rxscan338_done942
    goto rxscan338_scan941
  rxscan338_loop940:
    inc rx337_pos
    index rx337_pos, rx337_tgt, ucs4:"<", rx337_pos
    eq rx337_pos, -1, rx337_fail936
    repr_bind_attr_int rx337_cur, rx337_curclass, "$!from", rx337_pos
  rxscan338_scan941:
    nqp_rxmark rx337_bstack, rxscan338_loop940, rx337_pos, 0
  rxscan338_done942:
    add $I11, rx337_pos, 1
    gt $I11, rx337_eos, rx337_fail936
    ord $I11, rx337_tgt, rx337_pos
    ne $I11, 60, rx337_fail936
    add rx337_pos, 1
    repr_bind_attr_int rx337_cur, rx337_curclass, "$!pos", rx337_pos
    $P11 = rx337_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx337_curclass, "$!pos"
    lt $I11, 0, rx337_fail936
    nqp_rxmark rx337_bstack, rxsubrule339_pass943, -1, 0
  rxsubrule339_pass943:
    rx337_cstack = rx337_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx337_pos, $P11, rx337_curclass, "$!pos"
  alt340_0945:
    nqp_rxmark rx337_bstack, alt340_1946, rx337_pos, 0
    add $I11, rx337_pos, 1
    gt $I11, rx337_eos, rx337_fail936
    ord $I11, rx337_tgt, rx337_pos
    ne $I11, 62, rx337_fail936
    add rx337_pos, 1
    goto alt340_end944
  alt340_1946:
    repr_bind_attr_int rx337_cur, rx337_curclass, "$!pos", rx337_pos
    $P11 = rx337_cur."FAILGOAL"("'>' ")
    repr_get_attr_int $I11, $P11, rx337_curclass, "$!pos"
    lt $I11, 0, rx337_fail936
    goto rxsubrule341_pass947
  rxsubrule341_back948:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx337_curclass, "$!pos"
    lt $I11, 0, rx337_fail936
  rxsubrule341_pass947:
    rx337_cstack = rx337_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule341_back948
    push rx337_bstack, $I11
    push rx337_bstack, 0
    push rx337_bstack, rx337_pos
    elements $I11, rx337_cstack
    push rx337_bstack, $I11
    repr_get_attr_int rx337_pos, $P11, rx337_curclass, "$!pos"
  alt340_end944:
    repr_bind_attr_int rx337_cur, rx337_curclass, "$!pos", rx337_pos
    $P11 = rx337_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx337_curclass, "$!pos"
    lt $I11, 0, rx337_fail936
    repr_get_attr_int rx337_pos, $P11, rx337_curclass, "$!pos"
    rx337_cur."!cursor_pass"(rx337_pos, "metachar:sym<assert>")
    .return (rx337_cur)
  rx337_restart935:
    repr_get_attr_obj rx337_cstack, rx337_cur, rx337_curclass, "$!cstack"
  rx337_fail936:
    unless rx337_bstack, rx337_done934
    pop $I19, rx337_bstack
    if_null rx337_cstack, rx337_cstack_done939
    unless rx337_cstack, rx337_cstack_done939
    dec $I19
    set $P11, rx337_cstack[$I19]
  rx337_cstack_done939:
    pop rx337_rep, rx337_bstack
    pop rx337_pos, rx337_bstack
    pop $I19, rx337_bstack
    lt rx337_pos, -1, rx337_done934
    lt rx337_pos, 0, rx337_fail936
    eq $I19, 0, rx337_fail936
    nqp_islist $I20, rx337_cstack
    unless $I20, rx337_jump937
    elements $I18, rx337_bstack
    le $I18, 0, rx337_cut938
    dec $I18
    set $I18, rx337_bstack[$I18]
  rx337_cut938:
    assign rx337_cstack, $I18
  rx337_jump937:
    jump $I19
  rx337_done934:
    rx337_cur."!cursor_fail"()
    .return (rx337_cur) 
.end
.HLL "nqp"
.namespace []
.sub "sigil" :subid("cuid_78_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 316
    .param pmc __lowered_lex_118 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_119 
    set self, __lowered_lex_118
    .local pmc rx343_start
    .local string rx343_tgt
    .local int rx343_pos
    .local int rx343_off
    .local int rx343_eos
    .local int rx343_rep
    .local pmc rx343_cur
    .local pmc rx343_curclass
    .local pmc rx343_bstack
    .local pmc rx343_cstack
    rx343_start = self."!cursor_start_all"()
    set rx343_cur, rx343_start[0]
    set rx343_tgt, rx343_start[1]
    set rx343_pos, rx343_start[2]
    set rx343_curclass, rx343_start[3]
    set rx343_bstack, rx343_start[4]
    set $I19, rx343_start[5]
    store_lex unicode:"$\x{a2}", rx343_cur
    length rx343_eos, rx343_tgt
    eq $I19, 1, rx343_restart952
    gt rx343_pos, rx343_eos, rx343_fail953
    repr_get_attr_int $I11, self, rx343_curclass, "$!from"
    ne $I11, -1, rxscan344_done959
    goto rxscan344_scan958
  rxscan344_loop957:
    inc rx343_pos
    gt rx343_pos, rx343_eos, rx343_fail953
    repr_bind_attr_int rx343_cur, rx343_curclass, "$!from", rx343_pos
  rxscan344_scan958:
    nqp_rxmark rx343_bstack, rxscan344_loop957, rx343_pos, 0
  rxscan344_done959:
    ge rx343_pos, rx343_eos, rx343_fail953
    substr $S11, rx343_tgt, rx343_pos, 1
    index $I11, ucs4:"$@%&", $S11
    lt $I11, 0, rx343_fail953
    inc rx343_pos
    rx343_cur."!cursor_pass"(rx343_pos, "sigil")
    .return (rx343_cur)
  rx343_restart952:
    repr_get_attr_obj rx343_cstack, rx343_cur, rx343_curclass, "$!cstack"
  rx343_fail953:
    unless rx343_bstack, rx343_done951
    pop $I19, rx343_bstack
    if_null rx343_cstack, rx343_cstack_done956
    unless rx343_cstack, rx343_cstack_done956
    dec $I19
    set $P11, rx343_cstack[$I19]
  rx343_cstack_done956:
    pop rx343_rep, rx343_bstack
    pop rx343_pos, rx343_bstack
    pop $I19, rx343_bstack
    lt rx343_pos, -1, rx343_done951
    lt rx343_pos, 0, rx343_fail953
    eq $I19, 0, rx343_fail953
    nqp_islist $I20, rx343_cstack
    unless $I20, rx343_jump954
    elements $I18, rx343_bstack
    le $I18, 0, rx343_cut955
    dec $I18
    set $I18, rx343_bstack[$I18]
  rx343_cut955:
    assign rx343_cstack, $I18
  rx343_jump954:
    jump $I19
  rx343_done951:
    rx343_cur."!cursor_fail"()
    .return (rx343_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<var>" :subid("cuid_79_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 318
    .param pmc __lowered_lex_120 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_121 
    set self, __lowered_lex_120
    .local pmc rx345_start
    .local string rx345_tgt
    .local int rx345_pos
    .local int rx345_off
    .local int rx345_eos
    .local int rx345_rep
    .local pmc rx345_cur
    .local pmc rx345_curclass
    .local pmc rx345_bstack
    .local pmc rx345_cstack
    rx345_start = self."!cursor_start_all"()
    set rx345_cur, rx345_start[0]
    set rx345_tgt, rx345_start[1]
    set rx345_pos, rx345_start[2]
    set rx345_curclass, rx345_start[3]
    set rx345_bstack, rx345_start[4]
    set $I19, rx345_start[5]
    store_lex unicode:"$\x{a2}", rx345_cur
    length rx345_eos, rx345_tgt
    eq $I19, 1, rx345_restart962
    gt rx345_pos, rx345_eos, rx345_fail963
    repr_get_attr_int $I11, self, rx345_curclass, "$!from"
    ne $I11, -1, rxscan346_done969
    goto rxscan346_scan968
  rxscan346_loop967:
    inc rx345_pos
    gt rx345_pos, rx345_eos, rx345_fail963
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!from", rx345_pos
  rxscan346_scan968:
    nqp_rxmark rx345_bstack, rxscan346_loop967, rx345_pos, 0
  rxscan346_done969:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt347_0971
    nqp_push_label $P11, alt347_1976
    nqp_rxmark rx345_bstack, alt347_end970, -1, 0
    rx345_cur."!alt"(rx345_pos, "alt_nfa__14_1431289914.42505", $P11)
    goto rx345_fail963
  alt347_0971:
    add $I11, rx345_pos, 2
    gt $I11, rx345_eos, rx345_fail963
    nqp_string_equal_at $I11, rx345_tgt, ucs4:"$<", rx345_pos
    ne $I11, 1, rx345_fail963
    add rx345_pos, 2
    nqp_rxmark rx345_bstack, rxcap348_fail973, rx345_pos, 0
    nqp_rxmark rx345_bstack, rxquantr349_done975, -1, 0
  rxquantr349_loop974:
    ge rx345_pos, rx345_eos, rx345_fail963
    substr $S11, rx345_tgt, rx345_pos, 1
    index $I11, ucs4:">", $S11
    ge $I11, 0, rx345_fail963
    inc rx345_pos
    nqp_rxpeek $I19, rx345_bstack, rxquantr349_done975
    inc $I19
    inc $I19
    set rx345_rep, rx345_bstack[$I19]
    nqp_rxcommit rx345_bstack, rxquantr349_done975
    inc rx345_rep
    nqp_rxmark rx345_bstack, rxquantr349_done975, rx345_pos, rx345_rep
    goto rxquantr349_loop974
  rxquantr349_done975:
    nqp_rxpeek $I19, rx345_bstack, rxcap348_fail973
    inc $I19
    set $I11, rx345_bstack[$I19]
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    $P11 = rx345_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx345_pos)
    rx345_cstack = rx345_cur."!cursor_capture"($P11, "name")
    goto rxcap348_done972
  rxcap348_fail973:
    goto rx345_fail963
  rxcap348_done972:
    add $I11, rx345_pos, 1
    gt $I11, rx345_eos, rx345_fail963
    ord $I11, rx345_tgt, rx345_pos
    ne $I11, 62, rx345_fail963
    add rx345_pos, 1
    goto alt347_end970
  alt347_1976:
    add $I11, rx345_pos, 1
    gt $I11, rx345_eos, rx345_fail963
    ord $I11, rx345_tgt, rx345_pos
    ne $I11, 36, rx345_fail963
    add rx345_pos, 1
    nqp_rxmark rx345_bstack, rxcap350_fail978, rx345_pos, 0
    nqp_rxmark rx345_bstack, rxquantr351_done980, -1, 0
  rxquantr351_loop979:
    ge rx345_pos, rx345_eos, rx345_fail963
    is_cclass $I11, .CCLASS_NUMERIC, rx345_tgt, rx345_pos
    unless $I11, rx345_fail963
    inc rx345_pos
    nqp_rxpeek $I19, rx345_bstack, rxquantr351_done980
    inc $I19
    inc $I19
    set rx345_rep, rx345_bstack[$I19]
    nqp_rxcommit rx345_bstack, rxquantr351_done980
    inc rx345_rep
    nqp_rxmark rx345_bstack, rxquantr351_done980, rx345_pos, rx345_rep
    goto rxquantr351_loop979
  rxquantr351_done980:
    nqp_rxpeek $I19, rx345_bstack, rxcap350_fail978
    inc $I19
    set $I11, rx345_bstack[$I19]
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    $P11 = rx345_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx345_pos)
    rx345_cstack = rx345_cur."!cursor_capture"($P11, "pos")
    goto rxcap350_done977
  rxcap350_fail978:
    goto rx345_fail963
  rxcap350_done977:
    goto alt347_end970
  alt347_end970:
    nqp_rxcommit rx345_bstack, alt347_end970
    nqp_rxmark rx345_bstack, rxquantr352_done982, rx345_pos, 0
  rxquantr352_loop981:
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    $P11 = rx345_cur."ws"()
    repr_get_attr_int $I11, $P11, rx345_curclass, "$!pos"
    lt $I11, 0, rx345_fail963
    repr_get_attr_int rx345_pos, $P11, rx345_curclass, "$!pos"
    add $I11, rx345_pos, 1
    gt $I11, rx345_eos, rx345_fail963
    ord $I11, rx345_tgt, rx345_pos
    ne $I11, 61, rx345_fail963
    add rx345_pos, 1
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    $P11 = rx345_cur."ws"()
    repr_get_attr_int $I11, $P11, rx345_curclass, "$!pos"
    lt $I11, 0, rx345_fail963
    repr_get_attr_int rx345_pos, $P11, rx345_curclass, "$!pos"
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    store_lex unicode:"$\x{a2}", rx345_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_121, $P5001
.annotate 'line', 326
    box $P5002, 1
    store_dynamic_lex "$*VARDEF", $P5002
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    $P11 = rx345_cur."quantified_atom"()
    repr_get_attr_int $I11, $P11, rx345_curclass, "$!pos"
    lt $I11, 0, rx345_fail963
    nqp_rxmark rx345_bstack, rxsubrule355_pass985, -1, 0
  rxsubrule355_pass985:
    rx345_cstack = rx345_cur."!cursor_capture"($P11, "quantified_atom")
    repr_get_attr_int rx345_pos, $P11, rx345_curclass, "$!pos"
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    store_lex unicode:"$\x{a2}", rx345_cur
    $P5003 = $P101."MATCH"()
    set __lowered_lex_121, $P5003
.annotate 'line', 328
    box $P5004, 0
    store_dynamic_lex "$*VARDEF", $P5004
    nqp_rxpeek $I19, rx345_bstack, rxquantr352_done982
    inc $I19
    inc $I19
    set rx345_rep, rx345_bstack[$I19]
    nqp_rxcommit rx345_bstack, rxquantr352_done982
    inc rx345_rep
  rxquantr352_done982:
    repr_bind_attr_int rx345_cur, rx345_curclass, "$!pos", rx345_pos
    $P11 = rx345_cur."SIGOK"()
    repr_get_attr_int $I11, $P11, rx345_curclass, "$!pos"
    lt $I11, 0, rx345_fail963
    repr_get_attr_int rx345_pos, $P11, rx345_curclass, "$!pos"
    rx345_cur."!cursor_pass"(rx345_pos, "metachar:sym<var>")
    .return (rx345_cur)
  rx345_restart962:
    repr_get_attr_obj rx345_cstack, rx345_cur, rx345_curclass, "$!cstack"
  rx345_fail963:
    unless rx345_bstack, rx345_done961
    pop $I19, rx345_bstack
    if_null rx345_cstack, rx345_cstack_done966
    unless rx345_cstack, rx345_cstack_done966
    dec $I19
    set $P11, rx345_cstack[$I19]
  rx345_cstack_done966:
    pop rx345_rep, rx345_bstack
    pop rx345_pos, rx345_bstack
    pop $I19, rx345_bstack
    lt rx345_pos, -1, rx345_done961
    lt rx345_pos, 0, rx345_fail963
    eq $I19, 0, rx345_fail963
    nqp_islist $I20, rx345_cstack
    unless $I20, rx345_jump964
    elements $I18, rx345_bstack
    le $I18, 0, rx345_cut965
    dec $I18
    set $I18, rx345_bstack[$I18]
  rx345_cut965:
    assign rx345_cstack, $I18
  rx345_jump964:
    jump $I19
  rx345_done961:
    rx345_cur."!cursor_fail"()
    .return (rx345_cur) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<:>" :subid("cuid_80_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 333
    .param pmc __lowered_lex_122 
    .const 'Sub' $P5002 = 'cuid_81_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_123 
    set self, __lowered_lex_122
    .const 'Sub' $P5001 = 'cuid_81_1431289913.64791' 
    capture_lex $P5001
    .local pmc rx357_start
    .local string rx357_tgt
    .local int rx357_pos
    .local int rx357_off
    .local int rx357_eos
    .local int rx357_rep
    .local pmc rx357_cur
    .local pmc rx357_curclass
    .local pmc rx357_bstack
    .local pmc rx357_cstack
    rx357_start = self."!cursor_start_all"()
    set rx357_cur, rx357_start[0]
    set rx357_tgt, rx357_start[1]
    set rx357_pos, rx357_start[2]
    set rx357_curclass, rx357_start[3]
    set rx357_bstack, rx357_start[4]
    set $I19, rx357_start[5]
    store_lex unicode:"$\x{a2}", rx357_cur
    length rx357_eos, rx357_tgt
    eq $I19, 1, rx357_restart989
    gt rx357_pos, rx357_eos, rx357_fail990
    repr_get_attr_int $I11, self, rx357_curclass, "$!from"
    ne $I11, -1, rxscan358_done996
    goto rxscan358_scan995
  rxscan358_loop994:
    inc rx357_pos
    gt rx357_pos, rx357_eos, rx357_fail990
    repr_bind_attr_int rx357_cur, rx357_curclass, "$!from", rx357_pos
  rxscan358_scan995:
    nqp_rxmark rx357_bstack, rxscan358_loop994, rx357_pos, 0
  rxscan358_done996:
    nqp_rxmark rx357_bstack, rxcap359_fail998, rx357_pos, 0
    add $I11, rx357_pos, 1
    gt $I11, rx357_eos, rx357_fail990
    ord $I11, rx357_tgt, rx357_pos
    ne $I11, 58, rx357_fail990
    add rx357_pos, 1
    nqp_rxpeek $I19, rx357_bstack, rxcap359_fail998
    inc $I19
    set $I11, rx357_bstack[$I19]
    repr_bind_attr_int rx357_cur, rx357_curclass, "$!pos", rx357_pos
    $P11 = rx357_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx357_pos)
    rx357_cstack = rx357_cur."!cursor_capture"($P11, "sym")
    goto rxcap359_done997
  rxcap359_fail998:
    goto rx357_fail990
  rxcap359_done997:
    ge rx357_pos, rx357_eos, rx357_fail990
    is_cclass $I11, .CCLASS_WHITESPACE, rx357_tgt, rx357_pos
    unless $I11, rx357_fail990
    repr_bind_attr_int rx357_cur, rx357_curclass, "$!pos", rx357_pos
    $P11 = rx357_cur."throw_solitary_backtrack_control"()
    repr_get_attr_int $I11, $P11, rx357_curclass, "$!pos"
    lt $I11, 0, rx357_fail990
    repr_get_attr_int rx357_pos, $P11, rx357_curclass, "$!pos"
    rx357_cur."!cursor_pass"(rx357_pos, "metachar:sym<:>")
    .return (rx357_cur)
  rx357_restart989:
    repr_get_attr_obj rx357_cstack, rx357_cur, rx357_curclass, "$!cstack"
  rx357_fail990:
    unless rx357_bstack, rx357_done988
    pop $I19, rx357_bstack
    if_null rx357_cstack, rx357_cstack_done993
    unless rx357_cstack, rx357_cstack_done993
    dec $I19
    set $P11, rx357_cstack[$I19]
  rx357_cstack_done993:
    pop rx357_rep, rx357_bstack
    pop rx357_pos, rx357_bstack
    pop $I19, rx357_bstack
    lt rx357_pos, -1, rx357_done988
    lt rx357_pos, 0, rx357_fail990
    eq $I19, 0, rx357_fail990
    nqp_islist $I20, rx357_cstack
    unless $I20, rx357_jump991
    elements $I18, rx357_bstack
    le $I18, 0, rx357_cut992
    dec $I18
    set $I18, rx357_bstack[$I18]
  rx357_cut992:
    assign rx357_cstack, $I18
  rx357_jump991:
    jump $I19
  rx357_done988:
    rx357_cur."!cursor_fail"()
    .return (rx357_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_81_1431289913.64791") :anon :lex :outer("cuid_80_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "backslash" :subid("cuid_82_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 337
    .param pmc self 
    $P5001 = self."!protoregex"("backslash")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<s>" :subid("cuid_83_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 338
    .param pmc __lowered_lex_124 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_125 
    set self, __lowered_lex_124
    .local pmc rx361_start
    .local string rx361_tgt
    .local int rx361_pos
    .local int rx361_off
    .local int rx361_eos
    .local int rx361_rep
    .local pmc rx361_cur
    .local pmc rx361_curclass
    .local pmc rx361_bstack
    .local pmc rx361_cstack
    rx361_start = self."!cursor_start_all"()
    set rx361_cur, rx361_start[0]
    set rx361_tgt, rx361_start[1]
    set rx361_pos, rx361_start[2]
    set rx361_curclass, rx361_start[3]
    set rx361_bstack, rx361_start[4]
    set $I19, rx361_start[5]
    store_lex unicode:"$\x{a2}", rx361_cur
    length rx361_eos, rx361_tgt
    eq $I19, 1, rx361_restart1002
    gt rx361_pos, rx361_eos, rx361_fail1003
    repr_get_attr_int $I11, self, rx361_curclass, "$!from"
    ne $I11, -1, rxscan362_done1009
    goto rxscan362_scan1008
  rxscan362_loop1007:
    inc rx361_pos
    gt rx361_pos, rx361_eos, rx361_fail1003
    repr_bind_attr_int rx361_cur, rx361_curclass, "$!from", rx361_pos
  rxscan362_scan1008:
    nqp_rxmark rx361_bstack, rxscan362_loop1007, rx361_pos, 0
  rxscan362_done1009:
    nqp_rxmark rx361_bstack, rxcap363_fail1011, rx361_pos, 0
    ge rx361_pos, rx361_eos, rx361_fail1003
    substr $S11, rx361_tgt, rx361_pos, 1
    index $I11, ucs4:"dDnNsSwW", $S11
    lt $I11, 0, rx361_fail1003
    inc rx361_pos
    nqp_rxpeek $I19, rx361_bstack, rxcap363_fail1011
    inc $I19
    set $I11, rx361_bstack[$I19]
    repr_bind_attr_int rx361_cur, rx361_curclass, "$!pos", rx361_pos
    $P11 = rx361_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx361_pos)
    rx361_cstack = rx361_cur."!cursor_capture"($P11, "sym")
    goto rxcap363_done1010
  rxcap363_fail1011:
    goto rx361_fail1003
  rxcap363_done1010:
    rx361_cur."!cursor_pass"(rx361_pos, "backslash:sym<s>")
    .return (rx361_cur)
  rx361_restart1002:
    repr_get_attr_obj rx361_cstack, rx361_cur, rx361_curclass, "$!cstack"
  rx361_fail1003:
    unless rx361_bstack, rx361_done1001
    pop $I19, rx361_bstack
    if_null rx361_cstack, rx361_cstack_done1006
    unless rx361_cstack, rx361_cstack_done1006
    dec $I19
    set $P11, rx361_cstack[$I19]
  rx361_cstack_done1006:
    pop rx361_rep, rx361_bstack
    pop rx361_pos, rx361_bstack
    pop $I19, rx361_bstack
    lt rx361_pos, -1, rx361_done1001
    lt rx361_pos, 0, rx361_fail1003
    eq $I19, 0, rx361_fail1003
    nqp_islist $I20, rx361_cstack
    unless $I20, rx361_jump1004
    elements $I18, rx361_bstack
    le $I18, 0, rx361_cut1005
    dec $I18
    set $I18, rx361_bstack[$I18]
  rx361_cut1005:
    assign rx361_cstack, $I18
  rx361_jump1004:
    jump $I19
  rx361_done1001:
    rx361_cur."!cursor_fail"()
    .return (rx361_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<b>" :subid("cuid_84_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 339
    .param pmc __lowered_lex_126 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_127 
    set self, __lowered_lex_126
    .local pmc rx364_start
    .local string rx364_tgt
    .local int rx364_pos
    .local int rx364_off
    .local int rx364_eos
    .local int rx364_rep
    .local pmc rx364_cur
    .local pmc rx364_curclass
    .local pmc rx364_bstack
    .local pmc rx364_cstack
    rx364_start = self."!cursor_start_all"()
    set rx364_cur, rx364_start[0]
    set rx364_tgt, rx364_start[1]
    set rx364_pos, rx364_start[2]
    set rx364_curclass, rx364_start[3]
    set rx364_bstack, rx364_start[4]
    set $I19, rx364_start[5]
    store_lex unicode:"$\x{a2}", rx364_cur
    length rx364_eos, rx364_tgt
    eq $I19, 1, rx364_restart1014
    gt rx364_pos, rx364_eos, rx364_fail1015
    repr_get_attr_int $I11, self, rx364_curclass, "$!from"
    ne $I11, -1, rxscan365_done1021
    goto rxscan365_scan1020
  rxscan365_loop1019:
    inc rx364_pos
    gt rx364_pos, rx364_eos, rx364_fail1015
    repr_bind_attr_int rx364_cur, rx364_curclass, "$!from", rx364_pos
  rxscan365_scan1020:
    nqp_rxmark rx364_bstack, rxscan365_loop1019, rx364_pos, 0
  rxscan365_done1021:
    nqp_rxmark rx364_bstack, rxcap366_fail1023, rx364_pos, 0
    ge rx364_pos, rx364_eos, rx364_fail1015
    substr $S11, rx364_tgt, rx364_pos, 1
    index $I11, ucs4:"bB", $S11
    lt $I11, 0, rx364_fail1015
    inc rx364_pos
    nqp_rxpeek $I19, rx364_bstack, rxcap366_fail1023
    inc $I19
    set $I11, rx364_bstack[$I19]
    repr_bind_attr_int rx364_cur, rx364_curclass, "$!pos", rx364_pos
    $P11 = rx364_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx364_pos)
    rx364_cstack = rx364_cur."!cursor_capture"($P11, "sym")
    goto rxcap366_done1022
  rxcap366_fail1023:
    goto rx364_fail1015
  rxcap366_done1022:
    rx364_cur."!cursor_pass"(rx364_pos, "backslash:sym<b>")
    .return (rx364_cur)
  rx364_restart1014:
    repr_get_attr_obj rx364_cstack, rx364_cur, rx364_curclass, "$!cstack"
  rx364_fail1015:
    unless rx364_bstack, rx364_done1013
    pop $I19, rx364_bstack
    if_null rx364_cstack, rx364_cstack_done1018
    unless rx364_cstack, rx364_cstack_done1018
    dec $I19
    set $P11, rx364_cstack[$I19]
  rx364_cstack_done1018:
    pop rx364_rep, rx364_bstack
    pop rx364_pos, rx364_bstack
    pop $I19, rx364_bstack
    lt rx364_pos, -1, rx364_done1013
    lt rx364_pos, 0, rx364_fail1015
    eq $I19, 0, rx364_fail1015
    nqp_islist $I20, rx364_cstack
    unless $I20, rx364_jump1016
    elements $I18, rx364_bstack
    le $I18, 0, rx364_cut1017
    dec $I18
    set $I18, rx364_bstack[$I18]
  rx364_cut1017:
    assign rx364_cstack, $I18
  rx364_jump1016:
    jump $I19
  rx364_done1013:
    rx364_cur."!cursor_fail"()
    .return (rx364_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<e>" :subid("cuid_85_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 340
    .param pmc __lowered_lex_128 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_129 
    set self, __lowered_lex_128
    .local pmc rx367_start
    .local string rx367_tgt
    .local int rx367_pos
    .local int rx367_off
    .local int rx367_eos
    .local int rx367_rep
    .local pmc rx367_cur
    .local pmc rx367_curclass
    .local pmc rx367_bstack
    .local pmc rx367_cstack
    rx367_start = self."!cursor_start_all"()
    set rx367_cur, rx367_start[0]
    set rx367_tgt, rx367_start[1]
    set rx367_pos, rx367_start[2]
    set rx367_curclass, rx367_start[3]
    set rx367_bstack, rx367_start[4]
    set $I19, rx367_start[5]
    store_lex unicode:"$\x{a2}", rx367_cur
    length rx367_eos, rx367_tgt
    eq $I19, 1, rx367_restart1026
    gt rx367_pos, rx367_eos, rx367_fail1027
    repr_get_attr_int $I11, self, rx367_curclass, "$!from"
    ne $I11, -1, rxscan368_done1033
    goto rxscan368_scan1032
  rxscan368_loop1031:
    inc rx367_pos
    gt rx367_pos, rx367_eos, rx367_fail1027
    repr_bind_attr_int rx367_cur, rx367_curclass, "$!from", rx367_pos
  rxscan368_scan1032:
    nqp_rxmark rx367_bstack, rxscan368_loop1031, rx367_pos, 0
  rxscan368_done1033:
    nqp_rxmark rx367_bstack, rxcap369_fail1035, rx367_pos, 0
    ge rx367_pos, rx367_eos, rx367_fail1027
    substr $S11, rx367_tgt, rx367_pos, 1
    index $I11, ucs4:"eE", $S11
    lt $I11, 0, rx367_fail1027
    inc rx367_pos
    nqp_rxpeek $I19, rx367_bstack, rxcap369_fail1035
    inc $I19
    set $I11, rx367_bstack[$I19]
    repr_bind_attr_int rx367_cur, rx367_curclass, "$!pos", rx367_pos
    $P11 = rx367_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx367_pos)
    rx367_cstack = rx367_cur."!cursor_capture"($P11, "sym")
    goto rxcap369_done1034
  rxcap369_fail1035:
    goto rx367_fail1027
  rxcap369_done1034:
    rx367_cur."!cursor_pass"(rx367_pos, "backslash:sym<e>")
    .return (rx367_cur)
  rx367_restart1026:
    repr_get_attr_obj rx367_cstack, rx367_cur, rx367_curclass, "$!cstack"
  rx367_fail1027:
    unless rx367_bstack, rx367_done1025
    pop $I19, rx367_bstack
    if_null rx367_cstack, rx367_cstack_done1030
    unless rx367_cstack, rx367_cstack_done1030
    dec $I19
    set $P11, rx367_cstack[$I19]
  rx367_cstack_done1030:
    pop rx367_rep, rx367_bstack
    pop rx367_pos, rx367_bstack
    pop $I19, rx367_bstack
    lt rx367_pos, -1, rx367_done1025
    lt rx367_pos, 0, rx367_fail1027
    eq $I19, 0, rx367_fail1027
    nqp_islist $I20, rx367_cstack
    unless $I20, rx367_jump1028
    elements $I18, rx367_bstack
    le $I18, 0, rx367_cut1029
    dec $I18
    set $I18, rx367_bstack[$I18]
  rx367_cut1029:
    assign rx367_cstack, $I18
  rx367_jump1028:
    jump $I19
  rx367_done1025:
    rx367_cur."!cursor_fail"()
    .return (rx367_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<f>" :subid("cuid_86_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 341
    .param pmc __lowered_lex_130 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_131 
    set self, __lowered_lex_130
    .local pmc rx370_start
    .local string rx370_tgt
    .local int rx370_pos
    .local int rx370_off
    .local int rx370_eos
    .local int rx370_rep
    .local pmc rx370_cur
    .local pmc rx370_curclass
    .local pmc rx370_bstack
    .local pmc rx370_cstack
    rx370_start = self."!cursor_start_all"()
    set rx370_cur, rx370_start[0]
    set rx370_tgt, rx370_start[1]
    set rx370_pos, rx370_start[2]
    set rx370_curclass, rx370_start[3]
    set rx370_bstack, rx370_start[4]
    set $I19, rx370_start[5]
    store_lex unicode:"$\x{a2}", rx370_cur
    length rx370_eos, rx370_tgt
    eq $I19, 1, rx370_restart1038
    gt rx370_pos, rx370_eos, rx370_fail1039
    repr_get_attr_int $I11, self, rx370_curclass, "$!from"
    ne $I11, -1, rxscan371_done1045
    goto rxscan371_scan1044
  rxscan371_loop1043:
    inc rx370_pos
    gt rx370_pos, rx370_eos, rx370_fail1039
    repr_bind_attr_int rx370_cur, rx370_curclass, "$!from", rx370_pos
  rxscan371_scan1044:
    nqp_rxmark rx370_bstack, rxscan371_loop1043, rx370_pos, 0
  rxscan371_done1045:
    nqp_rxmark rx370_bstack, rxcap372_fail1047, rx370_pos, 0
    ge rx370_pos, rx370_eos, rx370_fail1039
    substr $S11, rx370_tgt, rx370_pos, 1
    index $I11, ucs4:"fF", $S11
    lt $I11, 0, rx370_fail1039
    inc rx370_pos
    nqp_rxpeek $I19, rx370_bstack, rxcap372_fail1047
    inc $I19
    set $I11, rx370_bstack[$I19]
    repr_bind_attr_int rx370_cur, rx370_curclass, "$!pos", rx370_pos
    $P11 = rx370_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx370_pos)
    rx370_cstack = rx370_cur."!cursor_capture"($P11, "sym")
    goto rxcap372_done1046
  rxcap372_fail1047:
    goto rx370_fail1039
  rxcap372_done1046:
    rx370_cur."!cursor_pass"(rx370_pos, "backslash:sym<f>")
    .return (rx370_cur)
  rx370_restart1038:
    repr_get_attr_obj rx370_cstack, rx370_cur, rx370_curclass, "$!cstack"
  rx370_fail1039:
    unless rx370_bstack, rx370_done1037
    pop $I19, rx370_bstack
    if_null rx370_cstack, rx370_cstack_done1042
    unless rx370_cstack, rx370_cstack_done1042
    dec $I19
    set $P11, rx370_cstack[$I19]
  rx370_cstack_done1042:
    pop rx370_rep, rx370_bstack
    pop rx370_pos, rx370_bstack
    pop $I19, rx370_bstack
    lt rx370_pos, -1, rx370_done1037
    lt rx370_pos, 0, rx370_fail1039
    eq $I19, 0, rx370_fail1039
    nqp_islist $I20, rx370_cstack
    unless $I20, rx370_jump1040
    elements $I18, rx370_bstack
    le $I18, 0, rx370_cut1041
    dec $I18
    set $I18, rx370_bstack[$I18]
  rx370_cut1041:
    assign rx370_cstack, $I18
  rx370_jump1040:
    jump $I19
  rx370_done1037:
    rx370_cur."!cursor_fail"()
    .return (rx370_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<h>" :subid("cuid_87_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 342
    .param pmc __lowered_lex_132 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_133 
    set self, __lowered_lex_132
    .local pmc rx373_start
    .local string rx373_tgt
    .local int rx373_pos
    .local int rx373_off
    .local int rx373_eos
    .local int rx373_rep
    .local pmc rx373_cur
    .local pmc rx373_curclass
    .local pmc rx373_bstack
    .local pmc rx373_cstack
    rx373_start = self."!cursor_start_all"()
    set rx373_cur, rx373_start[0]
    set rx373_tgt, rx373_start[1]
    set rx373_pos, rx373_start[2]
    set rx373_curclass, rx373_start[3]
    set rx373_bstack, rx373_start[4]
    set $I19, rx373_start[5]
    store_lex unicode:"$\x{a2}", rx373_cur
    length rx373_eos, rx373_tgt
    eq $I19, 1, rx373_restart1050
    gt rx373_pos, rx373_eos, rx373_fail1051
    repr_get_attr_int $I11, self, rx373_curclass, "$!from"
    ne $I11, -1, rxscan374_done1057
    goto rxscan374_scan1056
  rxscan374_loop1055:
    inc rx373_pos
    gt rx373_pos, rx373_eos, rx373_fail1051
    repr_bind_attr_int rx373_cur, rx373_curclass, "$!from", rx373_pos
  rxscan374_scan1056:
    nqp_rxmark rx373_bstack, rxscan374_loop1055, rx373_pos, 0
  rxscan374_done1057:
    nqp_rxmark rx373_bstack, rxcap375_fail1059, rx373_pos, 0
    ge rx373_pos, rx373_eos, rx373_fail1051
    substr $S11, rx373_tgt, rx373_pos, 1
    index $I11, ucs4:"hH", $S11
    lt $I11, 0, rx373_fail1051
    inc rx373_pos
    nqp_rxpeek $I19, rx373_bstack, rxcap375_fail1059
    inc $I19
    set $I11, rx373_bstack[$I19]
    repr_bind_attr_int rx373_cur, rx373_curclass, "$!pos", rx373_pos
    $P11 = rx373_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx373_pos)
    rx373_cstack = rx373_cur."!cursor_capture"($P11, "sym")
    goto rxcap375_done1058
  rxcap375_fail1059:
    goto rx373_fail1051
  rxcap375_done1058:
    rx373_cur."!cursor_pass"(rx373_pos, "backslash:sym<h>")
    .return (rx373_cur)
  rx373_restart1050:
    repr_get_attr_obj rx373_cstack, rx373_cur, rx373_curclass, "$!cstack"
  rx373_fail1051:
    unless rx373_bstack, rx373_done1049
    pop $I19, rx373_bstack
    if_null rx373_cstack, rx373_cstack_done1054
    unless rx373_cstack, rx373_cstack_done1054
    dec $I19
    set $P11, rx373_cstack[$I19]
  rx373_cstack_done1054:
    pop rx373_rep, rx373_bstack
    pop rx373_pos, rx373_bstack
    pop $I19, rx373_bstack
    lt rx373_pos, -1, rx373_done1049
    lt rx373_pos, 0, rx373_fail1051
    eq $I19, 0, rx373_fail1051
    nqp_islist $I20, rx373_cstack
    unless $I20, rx373_jump1052
    elements $I18, rx373_bstack
    le $I18, 0, rx373_cut1053
    dec $I18
    set $I18, rx373_bstack[$I18]
  rx373_cut1053:
    assign rx373_cstack, $I18
  rx373_jump1052:
    jump $I19
  rx373_done1049:
    rx373_cur."!cursor_fail"()
    .return (rx373_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<r>" :subid("cuid_88_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 343
    .param pmc __lowered_lex_134 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_135 
    set self, __lowered_lex_134
    .local pmc rx376_start
    .local string rx376_tgt
    .local int rx376_pos
    .local int rx376_off
    .local int rx376_eos
    .local int rx376_rep
    .local pmc rx376_cur
    .local pmc rx376_curclass
    .local pmc rx376_bstack
    .local pmc rx376_cstack
    rx376_start = self."!cursor_start_all"()
    set rx376_cur, rx376_start[0]
    set rx376_tgt, rx376_start[1]
    set rx376_pos, rx376_start[2]
    set rx376_curclass, rx376_start[3]
    set rx376_bstack, rx376_start[4]
    set $I19, rx376_start[5]
    store_lex unicode:"$\x{a2}", rx376_cur
    length rx376_eos, rx376_tgt
    eq $I19, 1, rx376_restart1062
    gt rx376_pos, rx376_eos, rx376_fail1063
    repr_get_attr_int $I11, self, rx376_curclass, "$!from"
    ne $I11, -1, rxscan377_done1069
    goto rxscan377_scan1068
  rxscan377_loop1067:
    inc rx376_pos
    gt rx376_pos, rx376_eos, rx376_fail1063
    repr_bind_attr_int rx376_cur, rx376_curclass, "$!from", rx376_pos
  rxscan377_scan1068:
    nqp_rxmark rx376_bstack, rxscan377_loop1067, rx376_pos, 0
  rxscan377_done1069:
    nqp_rxmark rx376_bstack, rxcap378_fail1071, rx376_pos, 0
    ge rx376_pos, rx376_eos, rx376_fail1063
    substr $S11, rx376_tgt, rx376_pos, 1
    index $I11, ucs4:"rR", $S11
    lt $I11, 0, rx376_fail1063
    inc rx376_pos
    nqp_rxpeek $I19, rx376_bstack, rxcap378_fail1071
    inc $I19
    set $I11, rx376_bstack[$I19]
    repr_bind_attr_int rx376_cur, rx376_curclass, "$!pos", rx376_pos
    $P11 = rx376_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx376_pos)
    rx376_cstack = rx376_cur."!cursor_capture"($P11, "sym")
    goto rxcap378_done1070
  rxcap378_fail1071:
    goto rx376_fail1063
  rxcap378_done1070:
    rx376_cur."!cursor_pass"(rx376_pos, "backslash:sym<r>")
    .return (rx376_cur)
  rx376_restart1062:
    repr_get_attr_obj rx376_cstack, rx376_cur, rx376_curclass, "$!cstack"
  rx376_fail1063:
    unless rx376_bstack, rx376_done1061
    pop $I19, rx376_bstack
    if_null rx376_cstack, rx376_cstack_done1066
    unless rx376_cstack, rx376_cstack_done1066
    dec $I19
    set $P11, rx376_cstack[$I19]
  rx376_cstack_done1066:
    pop rx376_rep, rx376_bstack
    pop rx376_pos, rx376_bstack
    pop $I19, rx376_bstack
    lt rx376_pos, -1, rx376_done1061
    lt rx376_pos, 0, rx376_fail1063
    eq $I19, 0, rx376_fail1063
    nqp_islist $I20, rx376_cstack
    unless $I20, rx376_jump1064
    elements $I18, rx376_bstack
    le $I18, 0, rx376_cut1065
    dec $I18
    set $I18, rx376_bstack[$I18]
  rx376_cut1065:
    assign rx376_cstack, $I18
  rx376_jump1064:
    jump $I19
  rx376_done1061:
    rx376_cur."!cursor_fail"()
    .return (rx376_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<t>" :subid("cuid_89_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 344
    .param pmc __lowered_lex_136 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_137 
    set self, __lowered_lex_136
    .local pmc rx379_start
    .local string rx379_tgt
    .local int rx379_pos
    .local int rx379_off
    .local int rx379_eos
    .local int rx379_rep
    .local pmc rx379_cur
    .local pmc rx379_curclass
    .local pmc rx379_bstack
    .local pmc rx379_cstack
    rx379_start = self."!cursor_start_all"()
    set rx379_cur, rx379_start[0]
    set rx379_tgt, rx379_start[1]
    set rx379_pos, rx379_start[2]
    set rx379_curclass, rx379_start[3]
    set rx379_bstack, rx379_start[4]
    set $I19, rx379_start[5]
    store_lex unicode:"$\x{a2}", rx379_cur
    length rx379_eos, rx379_tgt
    eq $I19, 1, rx379_restart1074
    gt rx379_pos, rx379_eos, rx379_fail1075
    repr_get_attr_int $I11, self, rx379_curclass, "$!from"
    ne $I11, -1, rxscan380_done1081
    goto rxscan380_scan1080
  rxscan380_loop1079:
    inc rx379_pos
    gt rx379_pos, rx379_eos, rx379_fail1075
    repr_bind_attr_int rx379_cur, rx379_curclass, "$!from", rx379_pos
  rxscan380_scan1080:
    nqp_rxmark rx379_bstack, rxscan380_loop1079, rx379_pos, 0
  rxscan380_done1081:
    nqp_rxmark rx379_bstack, rxcap381_fail1083, rx379_pos, 0
    ge rx379_pos, rx379_eos, rx379_fail1075
    substr $S11, rx379_tgt, rx379_pos, 1
    index $I11, ucs4:"tT", $S11
    lt $I11, 0, rx379_fail1075
    inc rx379_pos
    nqp_rxpeek $I19, rx379_bstack, rxcap381_fail1083
    inc $I19
    set $I11, rx379_bstack[$I19]
    repr_bind_attr_int rx379_cur, rx379_curclass, "$!pos", rx379_pos
    $P11 = rx379_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx379_pos)
    rx379_cstack = rx379_cur."!cursor_capture"($P11, "sym")
    goto rxcap381_done1082
  rxcap381_fail1083:
    goto rx379_fail1075
  rxcap381_done1082:
    rx379_cur."!cursor_pass"(rx379_pos, "backslash:sym<t>")
    .return (rx379_cur)
  rx379_restart1074:
    repr_get_attr_obj rx379_cstack, rx379_cur, rx379_curclass, "$!cstack"
  rx379_fail1075:
    unless rx379_bstack, rx379_done1073
    pop $I19, rx379_bstack
    if_null rx379_cstack, rx379_cstack_done1078
    unless rx379_cstack, rx379_cstack_done1078
    dec $I19
    set $P11, rx379_cstack[$I19]
  rx379_cstack_done1078:
    pop rx379_rep, rx379_bstack
    pop rx379_pos, rx379_bstack
    pop $I19, rx379_bstack
    lt rx379_pos, -1, rx379_done1073
    lt rx379_pos, 0, rx379_fail1075
    eq $I19, 0, rx379_fail1075
    nqp_islist $I20, rx379_cstack
    unless $I20, rx379_jump1076
    elements $I18, rx379_bstack
    le $I18, 0, rx379_cut1077
    dec $I18
    set $I18, rx379_bstack[$I18]
  rx379_cut1077:
    assign rx379_cstack, $I18
  rx379_jump1076:
    jump $I19
  rx379_done1073:
    rx379_cur."!cursor_fail"()
    .return (rx379_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<v>" :subid("cuid_90_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 345
    .param pmc __lowered_lex_138 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_139 
    set self, __lowered_lex_138
    .local pmc rx382_start
    .local string rx382_tgt
    .local int rx382_pos
    .local int rx382_off
    .local int rx382_eos
    .local int rx382_rep
    .local pmc rx382_cur
    .local pmc rx382_curclass
    .local pmc rx382_bstack
    .local pmc rx382_cstack
    rx382_start = self."!cursor_start_all"()
    set rx382_cur, rx382_start[0]
    set rx382_tgt, rx382_start[1]
    set rx382_pos, rx382_start[2]
    set rx382_curclass, rx382_start[3]
    set rx382_bstack, rx382_start[4]
    set $I19, rx382_start[5]
    store_lex unicode:"$\x{a2}", rx382_cur
    length rx382_eos, rx382_tgt
    eq $I19, 1, rx382_restart1086
    gt rx382_pos, rx382_eos, rx382_fail1087
    repr_get_attr_int $I11, self, rx382_curclass, "$!from"
    ne $I11, -1, rxscan383_done1093
    goto rxscan383_scan1092
  rxscan383_loop1091:
    inc rx382_pos
    gt rx382_pos, rx382_eos, rx382_fail1087
    repr_bind_attr_int rx382_cur, rx382_curclass, "$!from", rx382_pos
  rxscan383_scan1092:
    nqp_rxmark rx382_bstack, rxscan383_loop1091, rx382_pos, 0
  rxscan383_done1093:
    nqp_rxmark rx382_bstack, rxcap384_fail1095, rx382_pos, 0
    ge rx382_pos, rx382_eos, rx382_fail1087
    substr $S11, rx382_tgt, rx382_pos, 1
    index $I11, ucs4:"vV", $S11
    lt $I11, 0, rx382_fail1087
    inc rx382_pos
    nqp_rxpeek $I19, rx382_bstack, rxcap384_fail1095
    inc $I19
    set $I11, rx382_bstack[$I19]
    repr_bind_attr_int rx382_cur, rx382_curclass, "$!pos", rx382_pos
    $P11 = rx382_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx382_pos)
    rx382_cstack = rx382_cur."!cursor_capture"($P11, "sym")
    goto rxcap384_done1094
  rxcap384_fail1095:
    goto rx382_fail1087
  rxcap384_done1094:
    rx382_cur."!cursor_pass"(rx382_pos, "backslash:sym<v>")
    .return (rx382_cur)
  rx382_restart1086:
    repr_get_attr_obj rx382_cstack, rx382_cur, rx382_curclass, "$!cstack"
  rx382_fail1087:
    unless rx382_bstack, rx382_done1085
    pop $I19, rx382_bstack
    if_null rx382_cstack, rx382_cstack_done1090
    unless rx382_cstack, rx382_cstack_done1090
    dec $I19
    set $P11, rx382_cstack[$I19]
  rx382_cstack_done1090:
    pop rx382_rep, rx382_bstack
    pop rx382_pos, rx382_bstack
    pop $I19, rx382_bstack
    lt rx382_pos, -1, rx382_done1085
    lt rx382_pos, 0, rx382_fail1087
    eq $I19, 0, rx382_fail1087
    nqp_islist $I20, rx382_cstack
    unless $I20, rx382_jump1088
    elements $I18, rx382_bstack
    le $I18, 0, rx382_cut1089
    dec $I18
    set $I18, rx382_bstack[$I18]
  rx382_cut1089:
    assign rx382_cstack, $I18
  rx382_jump1088:
    jump $I19
  rx382_done1085:
    rx382_cur."!cursor_fail"()
    .return (rx382_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<o>" :subid("cuid_91_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 346
    .param pmc __lowered_lex_140 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_141 
    set self, __lowered_lex_140
    .local pmc rx385_start
    .local string rx385_tgt
    .local int rx385_pos
    .local int rx385_off
    .local int rx385_eos
    .local int rx385_rep
    .local pmc rx385_cur
    .local pmc rx385_curclass
    .local pmc rx385_bstack
    .local pmc rx385_cstack
    rx385_start = self."!cursor_start_all"()
    set rx385_cur, rx385_start[0]
    set rx385_tgt, rx385_start[1]
    set rx385_pos, rx385_start[2]
    set rx385_curclass, rx385_start[3]
    set rx385_bstack, rx385_start[4]
    set $I19, rx385_start[5]
    store_lex unicode:"$\x{a2}", rx385_cur
    length rx385_eos, rx385_tgt
    eq $I19, 1, rx385_restart1098
    gt rx385_pos, rx385_eos, rx385_fail1099
    repr_get_attr_int $I11, self, rx385_curclass, "$!from"
    ne $I11, -1, rxscan386_done1105
    goto rxscan386_scan1104
  rxscan386_loop1103:
    inc rx385_pos
    gt rx385_pos, rx385_eos, rx385_fail1099
    repr_bind_attr_int rx385_cur, rx385_curclass, "$!from", rx385_pos
  rxscan386_scan1104:
    nqp_rxmark rx385_bstack, rxscan386_loop1103, rx385_pos, 0
  rxscan386_done1105:
    nqp_rxmark rx385_bstack, rxcap387_fail1107, rx385_pos, 0
    ge rx385_pos, rx385_eos, rx385_fail1099
    substr $S11, rx385_tgt, rx385_pos, 1
    index $I11, ucs4:"oO", $S11
    lt $I11, 0, rx385_fail1099
    inc rx385_pos
    nqp_rxpeek $I19, rx385_bstack, rxcap387_fail1107
    inc $I19
    set $I11, rx385_bstack[$I19]
    repr_bind_attr_int rx385_cur, rx385_curclass, "$!pos", rx385_pos
    $P11 = rx385_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx385_pos)
    rx385_cstack = rx385_cur."!cursor_capture"($P11, "sym")
    goto rxcap387_done1106
  rxcap387_fail1107:
    goto rx385_fail1099
  rxcap387_done1106:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt388_01109
    nqp_push_label $P11, alt388_11111
    nqp_rxmark rx385_bstack, alt388_end1108, -1, 0
    rx385_cur."!alt"(rx385_pos, "alt_nfa__15_1431289914.48454", $P11)
    goto rx385_fail1099
  alt388_01109:
    repr_bind_attr_int rx385_cur, rx385_curclass, "$!pos", rx385_pos
    $P11 = rx385_cur."octint"()
    repr_get_attr_int $I11, $P11, rx385_curclass, "$!pos"
    lt $I11, 0, rx385_fail1099
    nqp_rxmark rx385_bstack, rxsubrule389_pass1110, -1, 0
  rxsubrule389_pass1110:
    rx385_cstack = rx385_cur."!cursor_capture"($P11, "octint")
    repr_get_attr_int rx385_pos, $P11, rx385_curclass, "$!pos"
    goto alt388_end1108
  alt388_11111:
    add $I11, rx385_pos, 1
    gt $I11, rx385_eos, rx385_fail1099
    ord $I11, rx385_tgt, rx385_pos
    ne $I11, 91, rx385_fail1099
    add rx385_pos, 1
    repr_bind_attr_int rx385_cur, rx385_curclass, "$!pos", rx385_pos
    $P11 = rx385_cur."octints"()
    repr_get_attr_int $I11, $P11, rx385_curclass, "$!pos"
    lt $I11, 0, rx385_fail1099
    nqp_rxmark rx385_bstack, rxsubrule390_pass1112, -1, 0
  rxsubrule390_pass1112:
    rx385_cstack = rx385_cur."!cursor_capture"($P11, "octints")
    repr_get_attr_int rx385_pos, $P11, rx385_curclass, "$!pos"
    add $I11, rx385_pos, 1
    gt $I11, rx385_eos, rx385_fail1099
    ord $I11, rx385_tgt, rx385_pos
    ne $I11, 93, rx385_fail1099
    add rx385_pos, 1
    goto alt388_end1108
  alt388_end1108:
    nqp_rxcommit rx385_bstack, alt388_end1108
    rx385_cur."!cursor_pass"(rx385_pos, "backslash:sym<o>")
    .return (rx385_cur)
  rx385_restart1098:
    repr_get_attr_obj rx385_cstack, rx385_cur, rx385_curclass, "$!cstack"
  rx385_fail1099:
    unless rx385_bstack, rx385_done1097
    pop $I19, rx385_bstack
    if_null rx385_cstack, rx385_cstack_done1102
    unless rx385_cstack, rx385_cstack_done1102
    dec $I19
    set $P11, rx385_cstack[$I19]
  rx385_cstack_done1102:
    pop rx385_rep, rx385_bstack
    pop rx385_pos, rx385_bstack
    pop $I19, rx385_bstack
    lt rx385_pos, -1, rx385_done1097
    lt rx385_pos, 0, rx385_fail1099
    eq $I19, 0, rx385_fail1099
    nqp_islist $I20, rx385_cstack
    unless $I20, rx385_jump1100
    elements $I18, rx385_bstack
    le $I18, 0, rx385_cut1101
    dec $I18
    set $I18, rx385_bstack[$I18]
  rx385_cut1101:
    assign rx385_cstack, $I18
  rx385_jump1100:
    jump $I19
  rx385_done1097:
    rx385_cur."!cursor_fail"()
    .return (rx385_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<x>" :subid("cuid_92_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 347
    .param pmc __lowered_lex_142 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_143 
    set self, __lowered_lex_142
    .local pmc rx391_start
    .local string rx391_tgt
    .local int rx391_pos
    .local int rx391_off
    .local int rx391_eos
    .local int rx391_rep
    .local pmc rx391_cur
    .local pmc rx391_curclass
    .local pmc rx391_bstack
    .local pmc rx391_cstack
    rx391_start = self."!cursor_start_all"()
    set rx391_cur, rx391_start[0]
    set rx391_tgt, rx391_start[1]
    set rx391_pos, rx391_start[2]
    set rx391_curclass, rx391_start[3]
    set rx391_bstack, rx391_start[4]
    set $I19, rx391_start[5]
    store_lex unicode:"$\x{a2}", rx391_cur
    length rx391_eos, rx391_tgt
    eq $I19, 1, rx391_restart1115
    gt rx391_pos, rx391_eos, rx391_fail1116
    repr_get_attr_int $I11, self, rx391_curclass, "$!from"
    ne $I11, -1, rxscan392_done1122
    goto rxscan392_scan1121
  rxscan392_loop1120:
    inc rx391_pos
    gt rx391_pos, rx391_eos, rx391_fail1116
    repr_bind_attr_int rx391_cur, rx391_curclass, "$!from", rx391_pos
  rxscan392_scan1121:
    nqp_rxmark rx391_bstack, rxscan392_loop1120, rx391_pos, 0
  rxscan392_done1122:
    nqp_rxmark rx391_bstack, rxcap393_fail1124, rx391_pos, 0
    ge rx391_pos, rx391_eos, rx391_fail1116
    substr $S11, rx391_tgt, rx391_pos, 1
    index $I11, ucs4:"xX", $S11
    lt $I11, 0, rx391_fail1116
    inc rx391_pos
    nqp_rxpeek $I19, rx391_bstack, rxcap393_fail1124
    inc $I19
    set $I11, rx391_bstack[$I19]
    repr_bind_attr_int rx391_cur, rx391_curclass, "$!pos", rx391_pos
    $P11 = rx391_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx391_pos)
    rx391_cstack = rx391_cur."!cursor_capture"($P11, "sym")
    goto rxcap393_done1123
  rxcap393_fail1124:
    goto rx391_fail1116
  rxcap393_done1123:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt394_01126
    nqp_push_label $P11, alt394_11128
    nqp_rxmark rx391_bstack, alt394_end1125, -1, 0
    rx391_cur."!alt"(rx391_pos, "alt_nfa__16_1431289914.49433", $P11)
    goto rx391_fail1116
  alt394_01126:
    repr_bind_attr_int rx391_cur, rx391_curclass, "$!pos", rx391_pos
    $P11 = rx391_cur."hexint"()
    repr_get_attr_int $I11, $P11, rx391_curclass, "$!pos"
    lt $I11, 0, rx391_fail1116
    nqp_rxmark rx391_bstack, rxsubrule395_pass1127, -1, 0
  rxsubrule395_pass1127:
    rx391_cstack = rx391_cur."!cursor_capture"($P11, "hexint")
    repr_get_attr_int rx391_pos, $P11, rx391_curclass, "$!pos"
    goto alt394_end1125
  alt394_11128:
    add $I11, rx391_pos, 1
    gt $I11, rx391_eos, rx391_fail1116
    ord $I11, rx391_tgt, rx391_pos
    ne $I11, 91, rx391_fail1116
    add rx391_pos, 1
    repr_bind_attr_int rx391_cur, rx391_curclass, "$!pos", rx391_pos
    $P11 = rx391_cur."hexints"()
    repr_get_attr_int $I11, $P11, rx391_curclass, "$!pos"
    lt $I11, 0, rx391_fail1116
    nqp_rxmark rx391_bstack, rxsubrule396_pass1129, -1, 0
  rxsubrule396_pass1129:
    rx391_cstack = rx391_cur."!cursor_capture"($P11, "hexints")
    repr_get_attr_int rx391_pos, $P11, rx391_curclass, "$!pos"
    add $I11, rx391_pos, 1
    gt $I11, rx391_eos, rx391_fail1116
    ord $I11, rx391_tgt, rx391_pos
    ne $I11, 93, rx391_fail1116
    add rx391_pos, 1
    goto alt394_end1125
  alt394_end1125:
    nqp_rxcommit rx391_bstack, alt394_end1125
    rx391_cur."!cursor_pass"(rx391_pos, "backslash:sym<x>")
    .return (rx391_cur)
  rx391_restart1115:
    repr_get_attr_obj rx391_cstack, rx391_cur, rx391_curclass, "$!cstack"
  rx391_fail1116:
    unless rx391_bstack, rx391_done1114
    pop $I19, rx391_bstack
    if_null rx391_cstack, rx391_cstack_done1119
    unless rx391_cstack, rx391_cstack_done1119
    dec $I19
    set $P11, rx391_cstack[$I19]
  rx391_cstack_done1119:
    pop rx391_rep, rx391_bstack
    pop rx391_pos, rx391_bstack
    pop $I19, rx391_bstack
    lt rx391_pos, -1, rx391_done1114
    lt rx391_pos, 0, rx391_fail1116
    eq $I19, 0, rx391_fail1116
    nqp_islist $I20, rx391_cstack
    unless $I20, rx391_jump1117
    elements $I18, rx391_bstack
    le $I18, 0, rx391_cut1118
    dec $I18
    set $I18, rx391_bstack[$I18]
  rx391_cut1118:
    assign rx391_cstack, $I18
  rx391_jump1117:
    jump $I19
  rx391_done1114:
    rx391_cur."!cursor_fail"()
    .return (rx391_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<c>" :subid("cuid_93_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 348
    .param pmc __lowered_lex_144 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_145 
    set self, __lowered_lex_144
    .local pmc rx397_start
    .local string rx397_tgt
    .local int rx397_pos
    .local int rx397_off
    .local int rx397_eos
    .local int rx397_rep
    .local pmc rx397_cur
    .local pmc rx397_curclass
    .local pmc rx397_bstack
    .local pmc rx397_cstack
    rx397_start = self."!cursor_start_all"()
    set rx397_cur, rx397_start[0]
    set rx397_tgt, rx397_start[1]
    set rx397_pos, rx397_start[2]
    set rx397_curclass, rx397_start[3]
    set rx397_bstack, rx397_start[4]
    set $I19, rx397_start[5]
    store_lex unicode:"$\x{a2}", rx397_cur
    length rx397_eos, rx397_tgt
    eq $I19, 1, rx397_restart1132
    gt rx397_pos, rx397_eos, rx397_fail1133
    repr_get_attr_int $I11, self, rx397_curclass, "$!from"
    ne $I11, -1, rxscan398_done1139
    goto rxscan398_scan1138
  rxscan398_loop1137:
    inc rx397_pos
    gt rx397_pos, rx397_eos, rx397_fail1133
    repr_bind_attr_int rx397_cur, rx397_curclass, "$!from", rx397_pos
  rxscan398_scan1138:
    nqp_rxmark rx397_bstack, rxscan398_loop1137, rx397_pos, 0
  rxscan398_done1139:
    nqp_rxmark rx397_bstack, rxcap399_fail1141, rx397_pos, 0
    ge rx397_pos, rx397_eos, rx397_fail1133
    substr $S11, rx397_tgt, rx397_pos, 1
    index $I11, ucs4:"cC", $S11
    lt $I11, 0, rx397_fail1133
    inc rx397_pos
    nqp_rxpeek $I19, rx397_bstack, rxcap399_fail1141
    inc $I19
    set $I11, rx397_bstack[$I19]
    repr_bind_attr_int rx397_cur, rx397_curclass, "$!pos", rx397_pos
    $P11 = rx397_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx397_pos)
    rx397_cstack = rx397_cur."!cursor_capture"($P11, "sym")
    goto rxcap399_done1140
  rxcap399_fail1141:
    goto rx397_fail1133
  rxcap399_done1140:
    repr_bind_attr_int rx397_cur, rx397_curclass, "$!pos", rx397_pos
    $P11 = rx397_cur."charspec"()
    repr_get_attr_int $I11, $P11, rx397_curclass, "$!pos"
    lt $I11, 0, rx397_fail1133
    nqp_rxmark rx397_bstack, rxsubrule400_pass1142, -1, 0
  rxsubrule400_pass1142:
    rx397_cstack = rx397_cur."!cursor_capture"($P11, "charspec")
    repr_get_attr_int rx397_pos, $P11, rx397_curclass, "$!pos"
    rx397_cur."!cursor_pass"(rx397_pos, "backslash:sym<c>")
    .return (rx397_cur)
  rx397_restart1132:
    repr_get_attr_obj rx397_cstack, rx397_cur, rx397_curclass, "$!cstack"
  rx397_fail1133:
    unless rx397_bstack, rx397_done1131
    pop $I19, rx397_bstack
    if_null rx397_cstack, rx397_cstack_done1136
    unless rx397_cstack, rx397_cstack_done1136
    dec $I19
    set $P11, rx397_cstack[$I19]
  rx397_cstack_done1136:
    pop rx397_rep, rx397_bstack
    pop rx397_pos, rx397_bstack
    pop $I19, rx397_bstack
    lt rx397_pos, -1, rx397_done1131
    lt rx397_pos, 0, rx397_fail1133
    eq $I19, 0, rx397_fail1133
    nqp_islist $I20, rx397_cstack
    unless $I20, rx397_jump1134
    elements $I18, rx397_bstack
    le $I18, 0, rx397_cut1135
    dec $I18
    set $I18, rx397_bstack[$I18]
  rx397_cut1135:
    assign rx397_cstack, $I18
  rx397_jump1134:
    jump $I19
  rx397_done1131:
    rx397_cur."!cursor_fail"()
    .return (rx397_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<0>" :subid("cuid_94_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 349
    .param pmc __lowered_lex_146 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_147 
    set self, __lowered_lex_146
    .local pmc rx401_start
    .local string rx401_tgt
    .local int rx401_pos
    .local int rx401_off
    .local int rx401_eos
    .local int rx401_rep
    .local pmc rx401_cur
    .local pmc rx401_curclass
    .local pmc rx401_bstack
    .local pmc rx401_cstack
    rx401_start = self."!cursor_start_all"()
    set rx401_cur, rx401_start[0]
    set rx401_tgt, rx401_start[1]
    set rx401_pos, rx401_start[2]
    set rx401_curclass, rx401_start[3]
    set rx401_bstack, rx401_start[4]
    set $I19, rx401_start[5]
    store_lex unicode:"$\x{a2}", rx401_cur
    length rx401_eos, rx401_tgt
    eq $I19, 1, rx401_restart1145
    gt rx401_pos, rx401_eos, rx401_fail1146
    repr_get_attr_int $I11, self, rx401_curclass, "$!from"
    ne $I11, -1, rxscan402_done1152
    goto rxscan402_scan1151
  rxscan402_loop1150:
    inc rx401_pos
    gt rx401_pos, rx401_eos, rx401_fail1146
    repr_bind_attr_int rx401_cur, rx401_curclass, "$!from", rx401_pos
  rxscan402_scan1151:
    nqp_rxmark rx401_bstack, rxscan402_loop1150, rx401_pos, 0
  rxscan402_done1152:
    nqp_rxmark rx401_bstack, rxcap403_fail1154, rx401_pos, 0
    add $I11, rx401_pos, 1
    gt $I11, rx401_eos, rx401_fail1146
    ord $I11, rx401_tgt, rx401_pos
    ne $I11, 48, rx401_fail1146
    add rx401_pos, 1
    nqp_rxpeek $I19, rx401_bstack, rxcap403_fail1154
    inc $I19
    set $I11, rx401_bstack[$I19]
    repr_bind_attr_int rx401_cur, rx401_curclass, "$!pos", rx401_pos
    $P11 = rx401_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx401_pos)
    rx401_cstack = rx401_cur."!cursor_capture"($P11, "sym")
    goto rxcap403_done1153
  rxcap403_fail1154:
    goto rx401_fail1146
  rxcap403_done1153:
    rx401_cur."!cursor_pass"(rx401_pos, "backslash:sym<0>")
    .return (rx401_cur)
  rx401_restart1145:
    repr_get_attr_obj rx401_cstack, rx401_cur, rx401_curclass, "$!cstack"
  rx401_fail1146:
    unless rx401_bstack, rx401_done1144
    pop $I19, rx401_bstack
    if_null rx401_cstack, rx401_cstack_done1149
    unless rx401_cstack, rx401_cstack_done1149
    dec $I19
    set $P11, rx401_cstack[$I19]
  rx401_cstack_done1149:
    pop rx401_rep, rx401_bstack
    pop rx401_pos, rx401_bstack
    pop $I19, rx401_bstack
    lt rx401_pos, -1, rx401_done1144
    lt rx401_pos, 0, rx401_fail1146
    eq $I19, 0, rx401_fail1146
    nqp_islist $I20, rx401_cstack
    unless $I20, rx401_jump1147
    elements $I18, rx401_bstack
    le $I18, 0, rx401_cut1148
    dec $I18
    set $I18, rx401_bstack[$I18]
  rx401_cut1148:
    assign rx401_cstack, $I18
  rx401_jump1147:
    jump $I19
  rx401_done1144:
    rx401_cur."!cursor_fail"()
    .return (rx401_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<A>" :subid("cuid_95_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 350
    .param pmc __lowered_lex_148 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_149 
    set self, __lowered_lex_148
    .local pmc rx404_start
    .local string rx404_tgt
    .local int rx404_pos
    .local int rx404_off
    .local int rx404_eos
    .local int rx404_rep
    .local pmc rx404_cur
    .local pmc rx404_curclass
    .local pmc rx404_bstack
    .local pmc rx404_cstack
    rx404_start = self."!cursor_start_all"()
    set rx404_cur, rx404_start[0]
    set rx404_tgt, rx404_start[1]
    set rx404_pos, rx404_start[2]
    set rx404_curclass, rx404_start[3]
    set rx404_bstack, rx404_start[4]
    set $I19, rx404_start[5]
    store_lex unicode:"$\x{a2}", rx404_cur
    length rx404_eos, rx404_tgt
    eq $I19, 1, rx404_restart1157
    gt rx404_pos, rx404_eos, rx404_fail1158
    repr_get_attr_int $I11, self, rx404_curclass, "$!from"
    ne $I11, -1, rxscan405_done1164
    goto rxscan405_scan1163
  rxscan405_loop1162:
    inc rx404_pos
    index rx404_pos, rx404_tgt, ucs4:"A", rx404_pos
    eq rx404_pos, -1, rx404_fail1158
    repr_bind_attr_int rx404_cur, rx404_curclass, "$!from", rx404_pos
  rxscan405_scan1163:
    nqp_rxmark rx404_bstack, rxscan405_loop1162, rx404_pos, 0
  rxscan405_done1164:
    add $I11, rx404_pos, 1
    gt $I11, rx404_eos, rx404_fail1158
    ord $I11, rx404_tgt, rx404_pos
    ne $I11, 65, rx404_fail1158
    add rx404_pos, 1
    repr_bind_attr_int rx404_cur, rx404_curclass, "$!pos", rx404_pos
    $P11 = rx404_cur."obs"("\\A as beginning-of-string matcher", "^")
    repr_get_attr_int $I11, $P11, rx404_curclass, "$!pos"
    lt $I11, 0, rx404_fail1158
    repr_get_attr_int rx404_pos, $P11, rx404_curclass, "$!pos"
    rx404_cur."!cursor_pass"(rx404_pos, "backslash:sym<A>")
    .return (rx404_cur)
  rx404_restart1157:
    repr_get_attr_obj rx404_cstack, rx404_cur, rx404_curclass, "$!cstack"
  rx404_fail1158:
    unless rx404_bstack, rx404_done1156
    pop $I19, rx404_bstack
    if_null rx404_cstack, rx404_cstack_done1161
    unless rx404_cstack, rx404_cstack_done1161
    dec $I19
    set $P11, rx404_cstack[$I19]
  rx404_cstack_done1161:
    pop rx404_rep, rx404_bstack
    pop rx404_pos, rx404_bstack
    pop $I19, rx404_bstack
    lt rx404_pos, -1, rx404_done1156
    lt rx404_pos, 0, rx404_fail1158
    eq $I19, 0, rx404_fail1158
    nqp_islist $I20, rx404_cstack
    unless $I20, rx404_jump1159
    elements $I18, rx404_bstack
    le $I18, 0, rx404_cut1160
    dec $I18
    set $I18, rx404_bstack[$I18]
  rx404_cut1160:
    assign rx404_cstack, $I18
  rx404_jump1159:
    jump $I19
  rx404_done1156:
    rx404_cur."!cursor_fail"()
    .return (rx404_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<z>" :subid("cuid_96_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 351
    .param pmc __lowered_lex_150 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_151 
    set self, __lowered_lex_150
    .local pmc rx407_start
    .local string rx407_tgt
    .local int rx407_pos
    .local int rx407_off
    .local int rx407_eos
    .local int rx407_rep
    .local pmc rx407_cur
    .local pmc rx407_curclass
    .local pmc rx407_bstack
    .local pmc rx407_cstack
    rx407_start = self."!cursor_start_all"()
    set rx407_cur, rx407_start[0]
    set rx407_tgt, rx407_start[1]
    set rx407_pos, rx407_start[2]
    set rx407_curclass, rx407_start[3]
    set rx407_bstack, rx407_start[4]
    set $I19, rx407_start[5]
    store_lex unicode:"$\x{a2}", rx407_cur
    length rx407_eos, rx407_tgt
    eq $I19, 1, rx407_restart1168
    gt rx407_pos, rx407_eos, rx407_fail1169
    repr_get_attr_int $I11, self, rx407_curclass, "$!from"
    ne $I11, -1, rxscan408_done1175
    goto rxscan408_scan1174
  rxscan408_loop1173:
    inc rx407_pos
    index rx407_pos, rx407_tgt, ucs4:"z", rx407_pos
    eq rx407_pos, -1, rx407_fail1169
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!from", rx407_pos
  rxscan408_scan1174:
    nqp_rxmark rx407_bstack, rxscan408_loop1173, rx407_pos, 0
  rxscan408_done1175:
    add $I11, rx407_pos, 1
    gt $I11, rx407_eos, rx407_fail1169
    ord $I11, rx407_tgt, rx407_pos
    ne $I11, 122, rx407_fail1169
    add rx407_pos, 1
    repr_bind_attr_int rx407_cur, rx407_curclass, "$!pos", rx407_pos
    $P11 = rx407_cur."obs"("\\z as end-of-string matcher", "$")
    repr_get_attr_int $I11, $P11, rx407_curclass, "$!pos"
    lt $I11, 0, rx407_fail1169
    repr_get_attr_int rx407_pos, $P11, rx407_curclass, "$!pos"
    rx407_cur."!cursor_pass"(rx407_pos, "backslash:sym<z>")
    .return (rx407_cur)
  rx407_restart1168:
    repr_get_attr_obj rx407_cstack, rx407_cur, rx407_curclass, "$!cstack"
  rx407_fail1169:
    unless rx407_bstack, rx407_done1167
    pop $I19, rx407_bstack
    if_null rx407_cstack, rx407_cstack_done1172
    unless rx407_cstack, rx407_cstack_done1172
    dec $I19
    set $P11, rx407_cstack[$I19]
  rx407_cstack_done1172:
    pop rx407_rep, rx407_bstack
    pop rx407_pos, rx407_bstack
    pop $I19, rx407_bstack
    lt rx407_pos, -1, rx407_done1167
    lt rx407_pos, 0, rx407_fail1169
    eq $I19, 0, rx407_fail1169
    nqp_islist $I20, rx407_cstack
    unless $I20, rx407_jump1170
    elements $I18, rx407_bstack
    le $I18, 0, rx407_cut1171
    dec $I18
    set $I18, rx407_bstack[$I18]
  rx407_cut1171:
    assign rx407_cstack, $I18
  rx407_jump1170:
    jump $I19
  rx407_done1167:
    rx407_cur."!cursor_fail"()
    .return (rx407_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<Z>" :subid("cuid_97_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 352
    .param pmc __lowered_lex_152 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_153 
    set self, __lowered_lex_152
    .local pmc rx410_start
    .local string rx410_tgt
    .local int rx410_pos
    .local int rx410_off
    .local int rx410_eos
    .local int rx410_rep
    .local pmc rx410_cur
    .local pmc rx410_curclass
    .local pmc rx410_bstack
    .local pmc rx410_cstack
    rx410_start = self."!cursor_start_all"()
    set rx410_cur, rx410_start[0]
    set rx410_tgt, rx410_start[1]
    set rx410_pos, rx410_start[2]
    set rx410_curclass, rx410_start[3]
    set rx410_bstack, rx410_start[4]
    set $I19, rx410_start[5]
    store_lex unicode:"$\x{a2}", rx410_cur
    length rx410_eos, rx410_tgt
    eq $I19, 1, rx410_restart1179
    gt rx410_pos, rx410_eos, rx410_fail1180
    repr_get_attr_int $I11, self, rx410_curclass, "$!from"
    ne $I11, -1, rxscan411_done1186
    goto rxscan411_scan1185
  rxscan411_loop1184:
    inc rx410_pos
    index rx410_pos, rx410_tgt, ucs4:"Z", rx410_pos
    eq rx410_pos, -1, rx410_fail1180
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!from", rx410_pos
  rxscan411_scan1185:
    nqp_rxmark rx410_bstack, rxscan411_loop1184, rx410_pos, 0
  rxscan411_done1186:
    add $I11, rx410_pos, 1
    gt $I11, rx410_eos, rx410_fail1180
    ord $I11, rx410_tgt, rx410_pos
    ne $I11, 90, rx410_fail1180
    add rx410_pos, 1
    repr_bind_attr_int rx410_cur, rx410_curclass, "$!pos", rx410_pos
    $P11 = rx410_cur."obs"("\\Z as end-of-string matcher", "\\n?$")
    repr_get_attr_int $I11, $P11, rx410_curclass, "$!pos"
    lt $I11, 0, rx410_fail1180
    repr_get_attr_int rx410_pos, $P11, rx410_curclass, "$!pos"
    rx410_cur."!cursor_pass"(rx410_pos, "backslash:sym<Z>")
    .return (rx410_cur)
  rx410_restart1179:
    repr_get_attr_obj rx410_cstack, rx410_cur, rx410_curclass, "$!cstack"
  rx410_fail1180:
    unless rx410_bstack, rx410_done1178
    pop $I19, rx410_bstack
    if_null rx410_cstack, rx410_cstack_done1183
    unless rx410_cstack, rx410_cstack_done1183
    dec $I19
    set $P11, rx410_cstack[$I19]
  rx410_cstack_done1183:
    pop rx410_rep, rx410_bstack
    pop rx410_pos, rx410_bstack
    pop $I19, rx410_bstack
    lt rx410_pos, -1, rx410_done1178
    lt rx410_pos, 0, rx410_fail1180
    eq $I19, 0, rx410_fail1180
    nqp_islist $I20, rx410_cstack
    unless $I20, rx410_jump1181
    elements $I18, rx410_bstack
    le $I18, 0, rx410_cut1182
    dec $I18
    set $I18, rx410_bstack[$I18]
  rx410_cut1182:
    assign rx410_cstack, $I18
  rx410_jump1181:
    jump $I19
  rx410_done1178:
    rx410_cur."!cursor_fail"()
    .return (rx410_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<Q>" :subid("cuid_98_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 353
    .param pmc __lowered_lex_154 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_155 
    set self, __lowered_lex_154
    .local pmc rx413_start
    .local string rx413_tgt
    .local int rx413_pos
    .local int rx413_off
    .local int rx413_eos
    .local int rx413_rep
    .local pmc rx413_cur
    .local pmc rx413_curclass
    .local pmc rx413_bstack
    .local pmc rx413_cstack
    rx413_start = self."!cursor_start_all"()
    set rx413_cur, rx413_start[0]
    set rx413_tgt, rx413_start[1]
    set rx413_pos, rx413_start[2]
    set rx413_curclass, rx413_start[3]
    set rx413_bstack, rx413_start[4]
    set $I19, rx413_start[5]
    store_lex unicode:"$\x{a2}", rx413_cur
    length rx413_eos, rx413_tgt
    eq $I19, 1, rx413_restart1190
    gt rx413_pos, rx413_eos, rx413_fail1191
    repr_get_attr_int $I11, self, rx413_curclass, "$!from"
    ne $I11, -1, rxscan414_done1197
    goto rxscan414_scan1196
  rxscan414_loop1195:
    inc rx413_pos
    index rx413_pos, rx413_tgt, ucs4:"Q", rx413_pos
    eq rx413_pos, -1, rx413_fail1191
    repr_bind_attr_int rx413_cur, rx413_curclass, "$!from", rx413_pos
  rxscan414_scan1196:
    nqp_rxmark rx413_bstack, rxscan414_loop1195, rx413_pos, 0
  rxscan414_done1197:
    add $I11, rx413_pos, 1
    gt $I11, rx413_eos, rx413_fail1191
    ord $I11, rx413_tgt, rx413_pos
    ne $I11, 81, rx413_fail1191
    add rx413_pos, 1
    repr_bind_attr_int rx413_cur, rx413_curclass, "$!pos", rx413_pos
    $P11 = rx413_cur."obs"("\\Q as quotemeta", "quotes or literal variable match")
    repr_get_attr_int $I11, $P11, rx413_curclass, "$!pos"
    lt $I11, 0, rx413_fail1191
    repr_get_attr_int rx413_pos, $P11, rx413_curclass, "$!pos"
    rx413_cur."!cursor_pass"(rx413_pos, "backslash:sym<Q>")
    .return (rx413_cur)
  rx413_restart1190:
    repr_get_attr_obj rx413_cstack, rx413_cur, rx413_curclass, "$!cstack"
  rx413_fail1191:
    unless rx413_bstack, rx413_done1189
    pop $I19, rx413_bstack
    if_null rx413_cstack, rx413_cstack_done1194
    unless rx413_cstack, rx413_cstack_done1194
    dec $I19
    set $P11, rx413_cstack[$I19]
  rx413_cstack_done1194:
    pop rx413_rep, rx413_bstack
    pop rx413_pos, rx413_bstack
    pop $I19, rx413_bstack
    lt rx413_pos, -1, rx413_done1189
    lt rx413_pos, 0, rx413_fail1191
    eq $I19, 0, rx413_fail1191
    nqp_islist $I20, rx413_cstack
    unless $I20, rx413_jump1192
    elements $I18, rx413_bstack
    le $I18, 0, rx413_cut1193
    dec $I18
    set $I18, rx413_bstack[$I18]
  rx413_cut1193:
    assign rx413_cstack, $I18
  rx413_jump1192:
    jump $I19
  rx413_done1189:
    rx413_cur."!cursor_fail"()
    .return (rx413_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<unrec>" :subid("cuid_99_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 354
    .param pmc __lowered_lex_156 
    .const 'Sub' $P5012 = 'cuid_100_1431289913.64791' 
    capture_lex $P5012 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_157 
    .local pmc fb_tmp_15 
    set self, __lowered_lex_156
    .local pmc rx416_start
    .local string rx416_tgt
    .local int rx416_pos
    .local int rx416_off
    .local int rx416_eos
    .local int rx416_rep
    .local pmc rx416_cur
    .local pmc rx416_curclass
    .local pmc rx416_bstack
    .local pmc rx416_cstack
    rx416_start = self."!cursor_start_all"()
    set rx416_cur, rx416_start[0]
    set rx416_tgt, rx416_start[1]
    set rx416_pos, rx416_start[2]
    set rx416_curclass, rx416_start[3]
    set rx416_bstack, rx416_start[4]
    set $I19, rx416_start[5]
    store_lex unicode:"$\x{a2}", rx416_cur
    length rx416_eos, rx416_tgt
    eq $I19, 1, rx416_restart1201
    gt rx416_pos, rx416_eos, rx416_fail1202
    repr_get_attr_int $I11, self, rx416_curclass, "$!from"
    ne $I11, -1, rxscan417_done1208
    goto rxscan417_scan1207
  rxscan417_loop1206:
    inc rx416_pos
    gt rx416_pos, rx416_eos, rx416_fail1202
    repr_bind_attr_int rx416_cur, rx416_curclass, "$!from", rx416_pos
  rxscan417_scan1207:
    nqp_rxmark rx416_bstack, rxscan417_loop1206, rx416_pos, 0
  rxscan417_done1208:
    repr_bind_attr_int rx416_cur, rx416_curclass, "$!pos", rx416_pos
    store_lex unicode:"$\x{a2}", rx416_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_157, $P5001
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    .const 'Sub' $P5003 = 'cuid_100_1431289913.64791' 
    capture_lex $P5003
    repr_bind_attr_int rx416_cur, rx416_curclass, "$!pos", rx416_pos
    $P11 = rx416_cur.$P5003()
    repr_get_attr_int $I11, $P11, rx416_curclass, "$!pos"
    lt $I11, 0, rx416_fail1202
    nqp_rxmark rx416_bstack, rxsubrule419_pass1216, -1, 0
  rxsubrule419_pass1216:
    rx416_cstack = rx416_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx416_pos, $P11, rx416_curclass, "$!pos"
    repr_bind_attr_int rx416_cur, rx416_curclass, "$!pos", rx416_pos
    store_lex unicode:"$\x{a2}", rx416_cur
    $P5004 = $P101."MATCH"()
    set __lowered_lex_157, $P5004
    nqp_decontainerize $P5005, __lowered_lex_156
    set fb_tmp_15, __lowered_lex_157
    repr_defined $I5001, fb_tmp_15
    unless $I5001 goto if420_else1217 
    set $P5006, fb_tmp_15[0]
    set $P5008, $P5006
    goto if420_end1218
  if420_else1217:
    null $P5007
    set $P5008, $P5007
  if420_end1218:
    unless_null $P5008, vivi_4211219
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_4211219:
    $P5010 = $P5008."Str"()
    $P5011 = $P5005."throw_unrecog_backslash_seq"($P5010)
    rx416_cur."!cursor_pass"(rx416_pos, "backslash:sym<unrec>")
    .return (rx416_cur)
  rx416_restart1201:
    repr_get_attr_obj rx416_cstack, rx416_cur, rx416_curclass, "$!cstack"
  rx416_fail1202:
    unless rx416_bstack, rx416_done1200
    pop $I19, rx416_bstack
    if_null rx416_cstack, rx416_cstack_done1205
    unless rx416_cstack, rx416_cstack_done1205
    dec $I19
    set $P11, rx416_cstack[$I19]
  rx416_cstack_done1205:
    pop rx416_rep, rx416_bstack
    pop rx416_pos, rx416_bstack
    pop $I19, rx416_bstack
    lt rx416_pos, -1, rx416_done1200
    lt rx416_pos, 0, rx416_fail1202
    eq $I19, 0, rx416_fail1202
    nqp_islist $I20, rx416_cstack
    unless $I20, rx416_jump1203
    elements $I18, rx416_bstack
    le $I18, 0, rx416_cut1204
    dec $I18
    set $I18, rx416_bstack[$I18]
  rx416_cut1204:
    assign rx416_cstack, $I18
  rx416_jump1203:
    jump $I19
  rx416_done1200:
    rx416_cur."!cursor_fail"()
    .return (rx416_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_100_1431289913.64791") :anon :lex :outer("cuid_99_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx418_start
    .local string rx418_tgt
    .local int rx418_pos
    .local int rx418_off
    .local int rx418_eos
    .local int rx418_rep
    .local pmc rx418_cur
    .local pmc rx418_curclass
    .local pmc rx418_bstack
    .local pmc rx418_cstack
    rx418_start = self."!cursor_start_all"()
    set rx418_cur, rx418_start[0]
    set rx418_tgt, rx418_start[1]
    set rx418_pos, rx418_start[2]
    set rx418_curclass, rx418_start[3]
    set rx418_bstack, rx418_start[4]
    set $I19, rx418_start[5]
    store_lex unicode:"$\x{a2}", rx418_cur
    length rx418_eos, rx418_tgt
    eq $I19, 1, rx418_restart1211
    gt rx418_pos, rx418_eos, rx418_fail1212
    ge rx418_pos, rx418_eos, rx418_fail1212
    is_cclass $I11, .CCLASS_WORD, rx418_tgt, rx418_pos
    unless $I11, rx418_fail1212
    inc rx418_pos
    rx418_cur."!cursor_pass"(rx418_pos)
    .return (rx418_cur)
  rx418_restart1211:
    repr_get_attr_obj rx418_cstack, rx418_cur, rx418_curclass, "$!cstack"
  rx418_fail1212:
    unless rx418_bstack, rx418_done1210
    pop $I19, rx418_bstack
    if_null rx418_cstack, rx418_cstack_done1215
    unless rx418_cstack, rx418_cstack_done1215
    dec $I19
    set $P11, rx418_cstack[$I19]
  rx418_cstack_done1215:
    pop rx418_rep, rx418_bstack
    pop rx418_pos, rx418_bstack
    pop $I19, rx418_bstack
    lt rx418_pos, -1, rx418_done1210
    lt rx418_pos, 0, rx418_fail1212
    eq $I19, 0, rx418_fail1212
    nqp_islist $I20, rx418_cstack
    unless $I20, rx418_jump1213
    elements $I18, rx418_bstack
    le $I18, 0, rx418_cut1214
    dec $I18
    set $I18, rx418_bstack[$I18]
  rx418_cut1214:
    assign rx418_cstack, $I18
  rx418_jump1213:
    jump $I19
  rx418_done1210:
    rx418_cur."!cursor_fail"()
    .return (rx418_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<unsp>" :subid("cuid_101_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 355
    .param pmc __lowered_lex_158 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_159 
    set self, __lowered_lex_158
    .local pmc rx422_start
    .local string rx422_tgt
    .local int rx422_pos
    .local int rx422_off
    .local int rx422_eos
    .local int rx422_rep
    .local pmc rx422_cur
    .local pmc rx422_curclass
    .local pmc rx422_bstack
    .local pmc rx422_cstack
    rx422_start = self."!cursor_start_all"()
    set rx422_cur, rx422_start[0]
    set rx422_tgt, rx422_start[1]
    set rx422_pos, rx422_start[2]
    set rx422_curclass, rx422_start[3]
    set rx422_bstack, rx422_start[4]
    set $I19, rx422_start[5]
    store_lex unicode:"$\x{a2}", rx422_cur
    length rx422_eos, rx422_tgt
    eq $I19, 1, rx422_restart1222
    gt rx422_pos, rx422_eos, rx422_fail1223
    repr_get_attr_int $I11, self, rx422_curclass, "$!from"
    ne $I11, -1, rxscan423_done1229
    goto rxscan423_scan1228
  rxscan423_loop1227:
    inc rx422_pos
    gt rx422_pos, rx422_eos, rx422_fail1223
    repr_bind_attr_int rx422_cur, rx422_curclass, "$!from", rx422_pos
  rxscan423_scan1228:
    nqp_rxmark rx422_bstack, rxscan423_loop1227, rx422_pos, 0
  rxscan423_done1229:
    ge rx422_pos, rx422_eos, rx422_fail1223
    is_cclass $I11, .CCLASS_WHITESPACE, rx422_tgt, rx422_pos
    unless $I11, rx422_fail1223
    inc rx422_pos
    repr_bind_attr_int rx422_cur, rx422_curclass, "$!pos", rx422_pos
    store_lex unicode:"$\x{a2}", rx422_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_159, $P5001
.annotate 'line', 356
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $S5001, __lowered_lex_159
    repr_bind_attr_int rx422_cur, rx422_curclass, "$!pos", rx422_pos
    $P11 = rx422_cur."throw_unspace"($S5001)
    repr_get_attr_int $I11, $P11, rx422_curclass, "$!pos"
    lt $I11, 0, rx422_fail1223
    repr_get_attr_int rx422_pos, $P11, rx422_curclass, "$!pos"
    rx422_cur."!cursor_pass"(rx422_pos, "backslash:sym<unsp>")
    .return (rx422_cur)
  rx422_restart1222:
    repr_get_attr_obj rx422_cstack, rx422_cur, rx422_curclass, "$!cstack"
  rx422_fail1223:
    unless rx422_bstack, rx422_done1221
    pop $I19, rx422_bstack
    if_null rx422_cstack, rx422_cstack_done1226
    unless rx422_cstack, rx422_cstack_done1226
    dec $I19
    set $P11, rx422_cstack[$I19]
  rx422_cstack_done1226:
    pop rx422_rep, rx422_bstack
    pop rx422_pos, rx422_bstack
    pop $I19, rx422_bstack
    lt rx422_pos, -1, rx422_done1221
    lt rx422_pos, 0, rx422_fail1223
    eq $I19, 0, rx422_fail1223
    nqp_islist $I20, rx422_cstack
    unless $I20, rx422_jump1224
    elements $I18, rx422_bstack
    le $I18, 0, rx422_cut1225
    dec $I18
    set $I18, rx422_bstack[$I18]
  rx422_cut1225:
    assign rx422_cstack, $I18
  rx422_jump1224:
    jump $I19
  rx422_done1221:
    rx422_cur."!cursor_fail"()
    .return (rx422_cur) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<misc>" :subid("cuid_102_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 359
    .param pmc __lowered_lex_160 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_161 
    set self, __lowered_lex_160
    .local pmc rx425_start
    .local string rx425_tgt
    .local int rx425_pos
    .local int rx425_off
    .local int rx425_eos
    .local int rx425_rep
    .local pmc rx425_cur
    .local pmc rx425_curclass
    .local pmc rx425_bstack
    .local pmc rx425_cstack
    rx425_start = self."!cursor_start_all"()
    set rx425_cur, rx425_start[0]
    set rx425_tgt, rx425_start[1]
    set rx425_pos, rx425_start[2]
    set rx425_curclass, rx425_start[3]
    set rx425_bstack, rx425_start[4]
    set $I19, rx425_start[5]
    store_lex unicode:"$\x{a2}", rx425_cur
    length rx425_eos, rx425_tgt
    eq $I19, 1, rx425_restart1233
    gt rx425_pos, rx425_eos, rx425_fail1234
    repr_get_attr_int $I11, self, rx425_curclass, "$!from"
    ne $I11, -1, rxscan426_done1240
    goto rxscan426_scan1239
  rxscan426_loop1238:
    inc rx425_pos
    gt rx425_pos, rx425_eos, rx425_fail1234
    repr_bind_attr_int rx425_cur, rx425_curclass, "$!from", rx425_pos
  rxscan426_scan1239:
    nqp_rxmark rx425_bstack, rxscan426_loop1238, rx425_pos, 0
  rxscan426_done1240:
    ge rx425_pos, rx425_eos, rx425_fail1234
    is_cclass $I11, .CCLASS_WORD, rx425_tgt, rx425_pos
    if $I11, rx425_fail1234
    inc rx425_pos
    rx425_cur."!cursor_pass"(rx425_pos, "backslash:sym<misc>")
    .return (rx425_cur)
  rx425_restart1233:
    repr_get_attr_obj rx425_cstack, rx425_cur, rx425_curclass, "$!cstack"
  rx425_fail1234:
    unless rx425_bstack, rx425_done1232
    pop $I19, rx425_bstack
    if_null rx425_cstack, rx425_cstack_done1237
    unless rx425_cstack, rx425_cstack_done1237
    dec $I19
    set $P11, rx425_cstack[$I19]
  rx425_cstack_done1237:
    pop rx425_rep, rx425_bstack
    pop rx425_pos, rx425_bstack
    pop $I19, rx425_bstack
    lt rx425_pos, -1, rx425_done1232
    lt rx425_pos, 0, rx425_fail1234
    eq $I19, 0, rx425_fail1234
    nqp_islist $I20, rx425_cstack
    unless $I20, rx425_jump1235
    elements $I18, rx425_bstack
    le $I18, 0, rx425_cut1236
    dec $I18
    set $I18, rx425_bstack[$I18]
  rx425_cut1236:
    assign rx425_cstack, $I18
  rx425_jump1235:
    jump $I19
  rx425_done1232:
    rx425_cur."!cursor_fail"()
    .return (rx425_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash" :subid("cuid_103_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 361
    .param pmc self 
    $P5001 = self."!protoregex"("cclass_backslash")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<s>" :subid("cuid_104_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 362
    .param pmc __lowered_lex_162 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_163 
    set self, __lowered_lex_162
    .local pmc rx427_start
    .local string rx427_tgt
    .local int rx427_pos
    .local int rx427_off
    .local int rx427_eos
    .local int rx427_rep
    .local pmc rx427_cur
    .local pmc rx427_curclass
    .local pmc rx427_bstack
    .local pmc rx427_cstack
    rx427_start = self."!cursor_start_all"()
    set rx427_cur, rx427_start[0]
    set rx427_tgt, rx427_start[1]
    set rx427_pos, rx427_start[2]
    set rx427_curclass, rx427_start[3]
    set rx427_bstack, rx427_start[4]
    set $I19, rx427_start[5]
    store_lex unicode:"$\x{a2}", rx427_cur
    length rx427_eos, rx427_tgt
    eq $I19, 1, rx427_restart1243
    gt rx427_pos, rx427_eos, rx427_fail1244
    repr_get_attr_int $I11, self, rx427_curclass, "$!from"
    ne $I11, -1, rxscan428_done1250
    goto rxscan428_scan1249
  rxscan428_loop1248:
    inc rx427_pos
    gt rx427_pos, rx427_eos, rx427_fail1244
    repr_bind_attr_int rx427_cur, rx427_curclass, "$!from", rx427_pos
  rxscan428_scan1249:
    nqp_rxmark rx427_bstack, rxscan428_loop1248, rx427_pos, 0
  rxscan428_done1250:
    nqp_rxmark rx427_bstack, rxcap429_fail1252, rx427_pos, 0
    ge rx427_pos, rx427_eos, rx427_fail1244
    substr $S11, rx427_tgt, rx427_pos, 1
    index $I11, ucs4:"dDnNsSwW", $S11
    lt $I11, 0, rx427_fail1244
    inc rx427_pos
    nqp_rxpeek $I19, rx427_bstack, rxcap429_fail1252
    inc $I19
    set $I11, rx427_bstack[$I19]
    repr_bind_attr_int rx427_cur, rx427_curclass, "$!pos", rx427_pos
    $P11 = rx427_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx427_pos)
    rx427_cstack = rx427_cur."!cursor_capture"($P11, "sym")
    goto rxcap429_done1251
  rxcap429_fail1252:
    goto rx427_fail1244
  rxcap429_done1251:
    rx427_cur."!cursor_pass"(rx427_pos, "cclass_backslash:sym<s>")
    .return (rx427_cur)
  rx427_restart1243:
    repr_get_attr_obj rx427_cstack, rx427_cur, rx427_curclass, "$!cstack"
  rx427_fail1244:
    unless rx427_bstack, rx427_done1242
    pop $I19, rx427_bstack
    if_null rx427_cstack, rx427_cstack_done1247
    unless rx427_cstack, rx427_cstack_done1247
    dec $I19
    set $P11, rx427_cstack[$I19]
  rx427_cstack_done1247:
    pop rx427_rep, rx427_bstack
    pop rx427_pos, rx427_bstack
    pop $I19, rx427_bstack
    lt rx427_pos, -1, rx427_done1242
    lt rx427_pos, 0, rx427_fail1244
    eq $I19, 0, rx427_fail1244
    nqp_islist $I20, rx427_cstack
    unless $I20, rx427_jump1245
    elements $I18, rx427_bstack
    le $I18, 0, rx427_cut1246
    dec $I18
    set $I18, rx427_bstack[$I18]
  rx427_cut1246:
    assign rx427_cstack, $I18
  rx427_jump1245:
    jump $I19
  rx427_done1242:
    rx427_cur."!cursor_fail"()
    .return (rx427_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<b>" :subid("cuid_105_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 363
    .param pmc __lowered_lex_164 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_165 
    set self, __lowered_lex_164
    .local pmc rx430_start
    .local string rx430_tgt
    .local int rx430_pos
    .local int rx430_off
    .local int rx430_eos
    .local int rx430_rep
    .local pmc rx430_cur
    .local pmc rx430_curclass
    .local pmc rx430_bstack
    .local pmc rx430_cstack
    rx430_start = self."!cursor_start_all"()
    set rx430_cur, rx430_start[0]
    set rx430_tgt, rx430_start[1]
    set rx430_pos, rx430_start[2]
    set rx430_curclass, rx430_start[3]
    set rx430_bstack, rx430_start[4]
    set $I19, rx430_start[5]
    store_lex unicode:"$\x{a2}", rx430_cur
    length rx430_eos, rx430_tgt
    eq $I19, 1, rx430_restart1255
    gt rx430_pos, rx430_eos, rx430_fail1256
    repr_get_attr_int $I11, self, rx430_curclass, "$!from"
    ne $I11, -1, rxscan431_done1262
    goto rxscan431_scan1261
  rxscan431_loop1260:
    inc rx430_pos
    gt rx430_pos, rx430_eos, rx430_fail1256
    repr_bind_attr_int rx430_cur, rx430_curclass, "$!from", rx430_pos
  rxscan431_scan1261:
    nqp_rxmark rx430_bstack, rxscan431_loop1260, rx430_pos, 0
  rxscan431_done1262:
    nqp_rxmark rx430_bstack, rxcap432_fail1264, rx430_pos, 0
    ge rx430_pos, rx430_eos, rx430_fail1256
    substr $S11, rx430_tgt, rx430_pos, 1
    index $I11, ucs4:"bB", $S11
    lt $I11, 0, rx430_fail1256
    inc rx430_pos
    nqp_rxpeek $I19, rx430_bstack, rxcap432_fail1264
    inc $I19
    set $I11, rx430_bstack[$I19]
    repr_bind_attr_int rx430_cur, rx430_curclass, "$!pos", rx430_pos
    $P11 = rx430_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx430_pos)
    rx430_cstack = rx430_cur."!cursor_capture"($P11, "sym")
    goto rxcap432_done1263
  rxcap432_fail1264:
    goto rx430_fail1256
  rxcap432_done1263:
    rx430_cur."!cursor_pass"(rx430_pos, "cclass_backslash:sym<b>")
    .return (rx430_cur)
  rx430_restart1255:
    repr_get_attr_obj rx430_cstack, rx430_cur, rx430_curclass, "$!cstack"
  rx430_fail1256:
    unless rx430_bstack, rx430_done1254
    pop $I19, rx430_bstack
    if_null rx430_cstack, rx430_cstack_done1259
    unless rx430_cstack, rx430_cstack_done1259
    dec $I19
    set $P11, rx430_cstack[$I19]
  rx430_cstack_done1259:
    pop rx430_rep, rx430_bstack
    pop rx430_pos, rx430_bstack
    pop $I19, rx430_bstack
    lt rx430_pos, -1, rx430_done1254
    lt rx430_pos, 0, rx430_fail1256
    eq $I19, 0, rx430_fail1256
    nqp_islist $I20, rx430_cstack
    unless $I20, rx430_jump1257
    elements $I18, rx430_bstack
    le $I18, 0, rx430_cut1258
    dec $I18
    set $I18, rx430_bstack[$I18]
  rx430_cut1258:
    assign rx430_cstack, $I18
  rx430_jump1257:
    jump $I19
  rx430_done1254:
    rx430_cur."!cursor_fail"()
    .return (rx430_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<e>" :subid("cuid_106_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 364
    .param pmc __lowered_lex_166 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_167 
    set self, __lowered_lex_166
    .local pmc rx433_start
    .local string rx433_tgt
    .local int rx433_pos
    .local int rx433_off
    .local int rx433_eos
    .local int rx433_rep
    .local pmc rx433_cur
    .local pmc rx433_curclass
    .local pmc rx433_bstack
    .local pmc rx433_cstack
    rx433_start = self."!cursor_start_all"()
    set rx433_cur, rx433_start[0]
    set rx433_tgt, rx433_start[1]
    set rx433_pos, rx433_start[2]
    set rx433_curclass, rx433_start[3]
    set rx433_bstack, rx433_start[4]
    set $I19, rx433_start[5]
    store_lex unicode:"$\x{a2}", rx433_cur
    length rx433_eos, rx433_tgt
    eq $I19, 1, rx433_restart1267
    gt rx433_pos, rx433_eos, rx433_fail1268
    repr_get_attr_int $I11, self, rx433_curclass, "$!from"
    ne $I11, -1, rxscan434_done1274
    goto rxscan434_scan1273
  rxscan434_loop1272:
    inc rx433_pos
    gt rx433_pos, rx433_eos, rx433_fail1268
    repr_bind_attr_int rx433_cur, rx433_curclass, "$!from", rx433_pos
  rxscan434_scan1273:
    nqp_rxmark rx433_bstack, rxscan434_loop1272, rx433_pos, 0
  rxscan434_done1274:
    nqp_rxmark rx433_bstack, rxcap435_fail1276, rx433_pos, 0
    ge rx433_pos, rx433_eos, rx433_fail1268
    substr $S11, rx433_tgt, rx433_pos, 1
    index $I11, ucs4:"eE", $S11
    lt $I11, 0, rx433_fail1268
    inc rx433_pos
    nqp_rxpeek $I19, rx433_bstack, rxcap435_fail1276
    inc $I19
    set $I11, rx433_bstack[$I19]
    repr_bind_attr_int rx433_cur, rx433_curclass, "$!pos", rx433_pos
    $P11 = rx433_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx433_pos)
    rx433_cstack = rx433_cur."!cursor_capture"($P11, "sym")
    goto rxcap435_done1275
  rxcap435_fail1276:
    goto rx433_fail1268
  rxcap435_done1275:
    rx433_cur."!cursor_pass"(rx433_pos, "cclass_backslash:sym<e>")
    .return (rx433_cur)
  rx433_restart1267:
    repr_get_attr_obj rx433_cstack, rx433_cur, rx433_curclass, "$!cstack"
  rx433_fail1268:
    unless rx433_bstack, rx433_done1266
    pop $I19, rx433_bstack
    if_null rx433_cstack, rx433_cstack_done1271
    unless rx433_cstack, rx433_cstack_done1271
    dec $I19
    set $P11, rx433_cstack[$I19]
  rx433_cstack_done1271:
    pop rx433_rep, rx433_bstack
    pop rx433_pos, rx433_bstack
    pop $I19, rx433_bstack
    lt rx433_pos, -1, rx433_done1266
    lt rx433_pos, 0, rx433_fail1268
    eq $I19, 0, rx433_fail1268
    nqp_islist $I20, rx433_cstack
    unless $I20, rx433_jump1269
    elements $I18, rx433_bstack
    le $I18, 0, rx433_cut1270
    dec $I18
    set $I18, rx433_bstack[$I18]
  rx433_cut1270:
    assign rx433_cstack, $I18
  rx433_jump1269:
    jump $I19
  rx433_done1266:
    rx433_cur."!cursor_fail"()
    .return (rx433_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<f>" :subid("cuid_107_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 365
    .param pmc __lowered_lex_168 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_169 
    set self, __lowered_lex_168
    .local pmc rx436_start
    .local string rx436_tgt
    .local int rx436_pos
    .local int rx436_off
    .local int rx436_eos
    .local int rx436_rep
    .local pmc rx436_cur
    .local pmc rx436_curclass
    .local pmc rx436_bstack
    .local pmc rx436_cstack
    rx436_start = self."!cursor_start_all"()
    set rx436_cur, rx436_start[0]
    set rx436_tgt, rx436_start[1]
    set rx436_pos, rx436_start[2]
    set rx436_curclass, rx436_start[3]
    set rx436_bstack, rx436_start[4]
    set $I19, rx436_start[5]
    store_lex unicode:"$\x{a2}", rx436_cur
    length rx436_eos, rx436_tgt
    eq $I19, 1, rx436_restart1279
    gt rx436_pos, rx436_eos, rx436_fail1280
    repr_get_attr_int $I11, self, rx436_curclass, "$!from"
    ne $I11, -1, rxscan437_done1286
    goto rxscan437_scan1285
  rxscan437_loop1284:
    inc rx436_pos
    gt rx436_pos, rx436_eos, rx436_fail1280
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!from", rx436_pos
  rxscan437_scan1285:
    nqp_rxmark rx436_bstack, rxscan437_loop1284, rx436_pos, 0
  rxscan437_done1286:
    nqp_rxmark rx436_bstack, rxcap438_fail1288, rx436_pos, 0
    ge rx436_pos, rx436_eos, rx436_fail1280
    substr $S11, rx436_tgt, rx436_pos, 1
    index $I11, ucs4:"fF", $S11
    lt $I11, 0, rx436_fail1280
    inc rx436_pos
    nqp_rxpeek $I19, rx436_bstack, rxcap438_fail1288
    inc $I19
    set $I11, rx436_bstack[$I19]
    repr_bind_attr_int rx436_cur, rx436_curclass, "$!pos", rx436_pos
    $P11 = rx436_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx436_pos)
    rx436_cstack = rx436_cur."!cursor_capture"($P11, "sym")
    goto rxcap438_done1287
  rxcap438_fail1288:
    goto rx436_fail1280
  rxcap438_done1287:
    rx436_cur."!cursor_pass"(rx436_pos, "cclass_backslash:sym<f>")
    .return (rx436_cur)
  rx436_restart1279:
    repr_get_attr_obj rx436_cstack, rx436_cur, rx436_curclass, "$!cstack"
  rx436_fail1280:
    unless rx436_bstack, rx436_done1278
    pop $I19, rx436_bstack
    if_null rx436_cstack, rx436_cstack_done1283
    unless rx436_cstack, rx436_cstack_done1283
    dec $I19
    set $P11, rx436_cstack[$I19]
  rx436_cstack_done1283:
    pop rx436_rep, rx436_bstack
    pop rx436_pos, rx436_bstack
    pop $I19, rx436_bstack
    lt rx436_pos, -1, rx436_done1278
    lt rx436_pos, 0, rx436_fail1280
    eq $I19, 0, rx436_fail1280
    nqp_islist $I20, rx436_cstack
    unless $I20, rx436_jump1281
    elements $I18, rx436_bstack
    le $I18, 0, rx436_cut1282
    dec $I18
    set $I18, rx436_bstack[$I18]
  rx436_cut1282:
    assign rx436_cstack, $I18
  rx436_jump1281:
    jump $I19
  rx436_done1278:
    rx436_cur."!cursor_fail"()
    .return (rx436_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<h>" :subid("cuid_108_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 366
    .param pmc __lowered_lex_170 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_171 
    set self, __lowered_lex_170
    .local pmc rx439_start
    .local string rx439_tgt
    .local int rx439_pos
    .local int rx439_off
    .local int rx439_eos
    .local int rx439_rep
    .local pmc rx439_cur
    .local pmc rx439_curclass
    .local pmc rx439_bstack
    .local pmc rx439_cstack
    rx439_start = self."!cursor_start_all"()
    set rx439_cur, rx439_start[0]
    set rx439_tgt, rx439_start[1]
    set rx439_pos, rx439_start[2]
    set rx439_curclass, rx439_start[3]
    set rx439_bstack, rx439_start[4]
    set $I19, rx439_start[5]
    store_lex unicode:"$\x{a2}", rx439_cur
    length rx439_eos, rx439_tgt
    eq $I19, 1, rx439_restart1291
    gt rx439_pos, rx439_eos, rx439_fail1292
    repr_get_attr_int $I11, self, rx439_curclass, "$!from"
    ne $I11, -1, rxscan440_done1298
    goto rxscan440_scan1297
  rxscan440_loop1296:
    inc rx439_pos
    gt rx439_pos, rx439_eos, rx439_fail1292
    repr_bind_attr_int rx439_cur, rx439_curclass, "$!from", rx439_pos
  rxscan440_scan1297:
    nqp_rxmark rx439_bstack, rxscan440_loop1296, rx439_pos, 0
  rxscan440_done1298:
    nqp_rxmark rx439_bstack, rxcap441_fail1300, rx439_pos, 0
    ge rx439_pos, rx439_eos, rx439_fail1292
    substr $S11, rx439_tgt, rx439_pos, 1
    index $I11, ucs4:"hH", $S11
    lt $I11, 0, rx439_fail1292
    inc rx439_pos
    nqp_rxpeek $I19, rx439_bstack, rxcap441_fail1300
    inc $I19
    set $I11, rx439_bstack[$I19]
    repr_bind_attr_int rx439_cur, rx439_curclass, "$!pos", rx439_pos
    $P11 = rx439_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx439_pos)
    rx439_cstack = rx439_cur."!cursor_capture"($P11, "sym")
    goto rxcap441_done1299
  rxcap441_fail1300:
    goto rx439_fail1292
  rxcap441_done1299:
    rx439_cur."!cursor_pass"(rx439_pos, "cclass_backslash:sym<h>")
    .return (rx439_cur)
  rx439_restart1291:
    repr_get_attr_obj rx439_cstack, rx439_cur, rx439_curclass, "$!cstack"
  rx439_fail1292:
    unless rx439_bstack, rx439_done1290
    pop $I19, rx439_bstack
    if_null rx439_cstack, rx439_cstack_done1295
    unless rx439_cstack, rx439_cstack_done1295
    dec $I19
    set $P11, rx439_cstack[$I19]
  rx439_cstack_done1295:
    pop rx439_rep, rx439_bstack
    pop rx439_pos, rx439_bstack
    pop $I19, rx439_bstack
    lt rx439_pos, -1, rx439_done1290
    lt rx439_pos, 0, rx439_fail1292
    eq $I19, 0, rx439_fail1292
    nqp_islist $I20, rx439_cstack
    unless $I20, rx439_jump1293
    elements $I18, rx439_bstack
    le $I18, 0, rx439_cut1294
    dec $I18
    set $I18, rx439_bstack[$I18]
  rx439_cut1294:
    assign rx439_cstack, $I18
  rx439_jump1293:
    jump $I19
  rx439_done1290:
    rx439_cur."!cursor_fail"()
    .return (rx439_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<n>" :subid("cuid_109_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 367
    .param pmc __lowered_lex_172 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_173 
    set self, __lowered_lex_172
    .local pmc rx442_start
    .local string rx442_tgt
    .local int rx442_pos
    .local int rx442_off
    .local int rx442_eos
    .local int rx442_rep
    .local pmc rx442_cur
    .local pmc rx442_curclass
    .local pmc rx442_bstack
    .local pmc rx442_cstack
    rx442_start = self."!cursor_start_all"()
    set rx442_cur, rx442_start[0]
    set rx442_tgt, rx442_start[1]
    set rx442_pos, rx442_start[2]
    set rx442_curclass, rx442_start[3]
    set rx442_bstack, rx442_start[4]
    set $I19, rx442_start[5]
    store_lex unicode:"$\x{a2}", rx442_cur
    length rx442_eos, rx442_tgt
    eq $I19, 1, rx442_restart1303
    gt rx442_pos, rx442_eos, rx442_fail1304
    repr_get_attr_int $I11, self, rx442_curclass, "$!from"
    ne $I11, -1, rxscan443_done1310
    goto rxscan443_scan1309
  rxscan443_loop1308:
    inc rx442_pos
    gt rx442_pos, rx442_eos, rx442_fail1304
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!from", rx442_pos
  rxscan443_scan1309:
    nqp_rxmark rx442_bstack, rxscan443_loop1308, rx442_pos, 0
  rxscan443_done1310:
    nqp_rxmark rx442_bstack, rxcap444_fail1312, rx442_pos, 0
    ge rx442_pos, rx442_eos, rx442_fail1304
    substr $S11, rx442_tgt, rx442_pos, 1
    index $I11, ucs4:"nN", $S11
    lt $I11, 0, rx442_fail1304
    inc rx442_pos
    nqp_rxpeek $I19, rx442_bstack, rxcap444_fail1312
    inc $I19
    set $I11, rx442_bstack[$I19]
    repr_bind_attr_int rx442_cur, rx442_curclass, "$!pos", rx442_pos
    $P11 = rx442_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx442_pos)
    rx442_cstack = rx442_cur."!cursor_capture"($P11, "sym")
    goto rxcap444_done1311
  rxcap444_fail1312:
    goto rx442_fail1304
  rxcap444_done1311:
    rx442_cur."!cursor_pass"(rx442_pos, "cclass_backslash:sym<n>")
    .return (rx442_cur)
  rx442_restart1303:
    repr_get_attr_obj rx442_cstack, rx442_cur, rx442_curclass, "$!cstack"
  rx442_fail1304:
    unless rx442_bstack, rx442_done1302
    pop $I19, rx442_bstack
    if_null rx442_cstack, rx442_cstack_done1307
    unless rx442_cstack, rx442_cstack_done1307
    dec $I19
    set $P11, rx442_cstack[$I19]
  rx442_cstack_done1307:
    pop rx442_rep, rx442_bstack
    pop rx442_pos, rx442_bstack
    pop $I19, rx442_bstack
    lt rx442_pos, -1, rx442_done1302
    lt rx442_pos, 0, rx442_fail1304
    eq $I19, 0, rx442_fail1304
    nqp_islist $I20, rx442_cstack
    unless $I20, rx442_jump1305
    elements $I18, rx442_bstack
    le $I18, 0, rx442_cut1306
    dec $I18
    set $I18, rx442_bstack[$I18]
  rx442_cut1306:
    assign rx442_cstack, $I18
  rx442_jump1305:
    jump $I19
  rx442_done1302:
    rx442_cur."!cursor_fail"()
    .return (rx442_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<r>" :subid("cuid_110_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 368
    .param pmc __lowered_lex_174 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_175 
    set self, __lowered_lex_174
    .local pmc rx445_start
    .local string rx445_tgt
    .local int rx445_pos
    .local int rx445_off
    .local int rx445_eos
    .local int rx445_rep
    .local pmc rx445_cur
    .local pmc rx445_curclass
    .local pmc rx445_bstack
    .local pmc rx445_cstack
    rx445_start = self."!cursor_start_all"()
    set rx445_cur, rx445_start[0]
    set rx445_tgt, rx445_start[1]
    set rx445_pos, rx445_start[2]
    set rx445_curclass, rx445_start[3]
    set rx445_bstack, rx445_start[4]
    set $I19, rx445_start[5]
    store_lex unicode:"$\x{a2}", rx445_cur
    length rx445_eos, rx445_tgt
    eq $I19, 1, rx445_restart1315
    gt rx445_pos, rx445_eos, rx445_fail1316
    repr_get_attr_int $I11, self, rx445_curclass, "$!from"
    ne $I11, -1, rxscan446_done1322
    goto rxscan446_scan1321
  rxscan446_loop1320:
    inc rx445_pos
    gt rx445_pos, rx445_eos, rx445_fail1316
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!from", rx445_pos
  rxscan446_scan1321:
    nqp_rxmark rx445_bstack, rxscan446_loop1320, rx445_pos, 0
  rxscan446_done1322:
    nqp_rxmark rx445_bstack, rxcap447_fail1324, rx445_pos, 0
    ge rx445_pos, rx445_eos, rx445_fail1316
    substr $S11, rx445_tgt, rx445_pos, 1
    index $I11, ucs4:"rR", $S11
    lt $I11, 0, rx445_fail1316
    inc rx445_pos
    nqp_rxpeek $I19, rx445_bstack, rxcap447_fail1324
    inc $I19
    set $I11, rx445_bstack[$I19]
    repr_bind_attr_int rx445_cur, rx445_curclass, "$!pos", rx445_pos
    $P11 = rx445_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx445_pos)
    rx445_cstack = rx445_cur."!cursor_capture"($P11, "sym")
    goto rxcap447_done1323
  rxcap447_fail1324:
    goto rx445_fail1316
  rxcap447_done1323:
    rx445_cur."!cursor_pass"(rx445_pos, "cclass_backslash:sym<r>")
    .return (rx445_cur)
  rx445_restart1315:
    repr_get_attr_obj rx445_cstack, rx445_cur, rx445_curclass, "$!cstack"
  rx445_fail1316:
    unless rx445_bstack, rx445_done1314
    pop $I19, rx445_bstack
    if_null rx445_cstack, rx445_cstack_done1319
    unless rx445_cstack, rx445_cstack_done1319
    dec $I19
    set $P11, rx445_cstack[$I19]
  rx445_cstack_done1319:
    pop rx445_rep, rx445_bstack
    pop rx445_pos, rx445_bstack
    pop $I19, rx445_bstack
    lt rx445_pos, -1, rx445_done1314
    lt rx445_pos, 0, rx445_fail1316
    eq $I19, 0, rx445_fail1316
    nqp_islist $I20, rx445_cstack
    unless $I20, rx445_jump1317
    elements $I18, rx445_bstack
    le $I18, 0, rx445_cut1318
    dec $I18
    set $I18, rx445_bstack[$I18]
  rx445_cut1318:
    assign rx445_cstack, $I18
  rx445_jump1317:
    jump $I19
  rx445_done1314:
    rx445_cur."!cursor_fail"()
    .return (rx445_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<t>" :subid("cuid_111_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 369
    .param pmc __lowered_lex_176 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_177 
    set self, __lowered_lex_176
    .local pmc rx448_start
    .local string rx448_tgt
    .local int rx448_pos
    .local int rx448_off
    .local int rx448_eos
    .local int rx448_rep
    .local pmc rx448_cur
    .local pmc rx448_curclass
    .local pmc rx448_bstack
    .local pmc rx448_cstack
    rx448_start = self."!cursor_start_all"()
    set rx448_cur, rx448_start[0]
    set rx448_tgt, rx448_start[1]
    set rx448_pos, rx448_start[2]
    set rx448_curclass, rx448_start[3]
    set rx448_bstack, rx448_start[4]
    set $I19, rx448_start[5]
    store_lex unicode:"$\x{a2}", rx448_cur
    length rx448_eos, rx448_tgt
    eq $I19, 1, rx448_restart1327
    gt rx448_pos, rx448_eos, rx448_fail1328
    repr_get_attr_int $I11, self, rx448_curclass, "$!from"
    ne $I11, -1, rxscan449_done1334
    goto rxscan449_scan1333
  rxscan449_loop1332:
    inc rx448_pos
    gt rx448_pos, rx448_eos, rx448_fail1328
    repr_bind_attr_int rx448_cur, rx448_curclass, "$!from", rx448_pos
  rxscan449_scan1333:
    nqp_rxmark rx448_bstack, rxscan449_loop1332, rx448_pos, 0
  rxscan449_done1334:
    nqp_rxmark rx448_bstack, rxcap450_fail1336, rx448_pos, 0
    ge rx448_pos, rx448_eos, rx448_fail1328
    substr $S11, rx448_tgt, rx448_pos, 1
    index $I11, ucs4:"tT", $S11
    lt $I11, 0, rx448_fail1328
    inc rx448_pos
    nqp_rxpeek $I19, rx448_bstack, rxcap450_fail1336
    inc $I19
    set $I11, rx448_bstack[$I19]
    repr_bind_attr_int rx448_cur, rx448_curclass, "$!pos", rx448_pos
    $P11 = rx448_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx448_pos)
    rx448_cstack = rx448_cur."!cursor_capture"($P11, "sym")
    goto rxcap450_done1335
  rxcap450_fail1336:
    goto rx448_fail1328
  rxcap450_done1335:
    rx448_cur."!cursor_pass"(rx448_pos, "cclass_backslash:sym<t>")
    .return (rx448_cur)
  rx448_restart1327:
    repr_get_attr_obj rx448_cstack, rx448_cur, rx448_curclass, "$!cstack"
  rx448_fail1328:
    unless rx448_bstack, rx448_done1326
    pop $I19, rx448_bstack
    if_null rx448_cstack, rx448_cstack_done1331
    unless rx448_cstack, rx448_cstack_done1331
    dec $I19
    set $P11, rx448_cstack[$I19]
  rx448_cstack_done1331:
    pop rx448_rep, rx448_bstack
    pop rx448_pos, rx448_bstack
    pop $I19, rx448_bstack
    lt rx448_pos, -1, rx448_done1326
    lt rx448_pos, 0, rx448_fail1328
    eq $I19, 0, rx448_fail1328
    nqp_islist $I20, rx448_cstack
    unless $I20, rx448_jump1329
    elements $I18, rx448_bstack
    le $I18, 0, rx448_cut1330
    dec $I18
    set $I18, rx448_bstack[$I18]
  rx448_cut1330:
    assign rx448_cstack, $I18
  rx448_jump1329:
    jump $I19
  rx448_done1326:
    rx448_cur."!cursor_fail"()
    .return (rx448_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<v>" :subid("cuid_112_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 370
    .param pmc __lowered_lex_178 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_179 
    set self, __lowered_lex_178
    .local pmc rx451_start
    .local string rx451_tgt
    .local int rx451_pos
    .local int rx451_off
    .local int rx451_eos
    .local int rx451_rep
    .local pmc rx451_cur
    .local pmc rx451_curclass
    .local pmc rx451_bstack
    .local pmc rx451_cstack
    rx451_start = self."!cursor_start_all"()
    set rx451_cur, rx451_start[0]
    set rx451_tgt, rx451_start[1]
    set rx451_pos, rx451_start[2]
    set rx451_curclass, rx451_start[3]
    set rx451_bstack, rx451_start[4]
    set $I19, rx451_start[5]
    store_lex unicode:"$\x{a2}", rx451_cur
    length rx451_eos, rx451_tgt
    eq $I19, 1, rx451_restart1339
    gt rx451_pos, rx451_eos, rx451_fail1340
    repr_get_attr_int $I11, self, rx451_curclass, "$!from"
    ne $I11, -1, rxscan452_done1346
    goto rxscan452_scan1345
  rxscan452_loop1344:
    inc rx451_pos
    gt rx451_pos, rx451_eos, rx451_fail1340
    repr_bind_attr_int rx451_cur, rx451_curclass, "$!from", rx451_pos
  rxscan452_scan1345:
    nqp_rxmark rx451_bstack, rxscan452_loop1344, rx451_pos, 0
  rxscan452_done1346:
    nqp_rxmark rx451_bstack, rxcap453_fail1348, rx451_pos, 0
    ge rx451_pos, rx451_eos, rx451_fail1340
    substr $S11, rx451_tgt, rx451_pos, 1
    index $I11, ucs4:"vV", $S11
    lt $I11, 0, rx451_fail1340
    inc rx451_pos
    nqp_rxpeek $I19, rx451_bstack, rxcap453_fail1348
    inc $I19
    set $I11, rx451_bstack[$I19]
    repr_bind_attr_int rx451_cur, rx451_curclass, "$!pos", rx451_pos
    $P11 = rx451_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx451_pos)
    rx451_cstack = rx451_cur."!cursor_capture"($P11, "sym")
    goto rxcap453_done1347
  rxcap453_fail1348:
    goto rx451_fail1340
  rxcap453_done1347:
    rx451_cur."!cursor_pass"(rx451_pos, "cclass_backslash:sym<v>")
    .return (rx451_cur)
  rx451_restart1339:
    repr_get_attr_obj rx451_cstack, rx451_cur, rx451_curclass, "$!cstack"
  rx451_fail1340:
    unless rx451_bstack, rx451_done1338
    pop $I19, rx451_bstack
    if_null rx451_cstack, rx451_cstack_done1343
    unless rx451_cstack, rx451_cstack_done1343
    dec $I19
    set $P11, rx451_cstack[$I19]
  rx451_cstack_done1343:
    pop rx451_rep, rx451_bstack
    pop rx451_pos, rx451_bstack
    pop $I19, rx451_bstack
    lt rx451_pos, -1, rx451_done1338
    lt rx451_pos, 0, rx451_fail1340
    eq $I19, 0, rx451_fail1340
    nqp_islist $I20, rx451_cstack
    unless $I20, rx451_jump1341
    elements $I18, rx451_bstack
    le $I18, 0, rx451_cut1342
    dec $I18
    set $I18, rx451_bstack[$I18]
  rx451_cut1342:
    assign rx451_cstack, $I18
  rx451_jump1341:
    jump $I19
  rx451_done1338:
    rx451_cur."!cursor_fail"()
    .return (rx451_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<o>" :subid("cuid_113_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 371
    .param pmc __lowered_lex_180 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_181 
    set self, __lowered_lex_180
    .local pmc rx454_start
    .local string rx454_tgt
    .local int rx454_pos
    .local int rx454_off
    .local int rx454_eos
    .local int rx454_rep
    .local pmc rx454_cur
    .local pmc rx454_curclass
    .local pmc rx454_bstack
    .local pmc rx454_cstack
    rx454_start = self."!cursor_start_all"()
    set rx454_cur, rx454_start[0]
    set rx454_tgt, rx454_start[1]
    set rx454_pos, rx454_start[2]
    set rx454_curclass, rx454_start[3]
    set rx454_bstack, rx454_start[4]
    set $I19, rx454_start[5]
    store_lex unicode:"$\x{a2}", rx454_cur
    length rx454_eos, rx454_tgt
    eq $I19, 1, rx454_restart1351
    gt rx454_pos, rx454_eos, rx454_fail1352
    repr_get_attr_int $I11, self, rx454_curclass, "$!from"
    ne $I11, -1, rxscan455_done1358
    goto rxscan455_scan1357
  rxscan455_loop1356:
    inc rx454_pos
    gt rx454_pos, rx454_eos, rx454_fail1352
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!from", rx454_pos
  rxscan455_scan1357:
    nqp_rxmark rx454_bstack, rxscan455_loop1356, rx454_pos, 0
  rxscan455_done1358:
    nqp_rxmark rx454_bstack, rxcap456_fail1360, rx454_pos, 0
    ge rx454_pos, rx454_eos, rx454_fail1352
    substr $S11, rx454_tgt, rx454_pos, 1
    index $I11, ucs4:"oO", $S11
    lt $I11, 0, rx454_fail1352
    inc rx454_pos
    nqp_rxpeek $I19, rx454_bstack, rxcap456_fail1360
    inc $I19
    set $I11, rx454_bstack[$I19]
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!pos", rx454_pos
    $P11 = rx454_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx454_pos)
    rx454_cstack = rx454_cur."!cursor_capture"($P11, "sym")
    goto rxcap456_done1359
  rxcap456_fail1360:
    goto rx454_fail1352
  rxcap456_done1359:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt457_01362
    nqp_push_label $P11, alt457_11364
    nqp_rxmark rx454_bstack, alt457_end1361, -1, 0
    rx454_cur."!alt"(rx454_pos, "alt_nfa__17_1431289914.60984", $P11)
    goto rx454_fail1352
  alt457_01362:
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!pos", rx454_pos
    $P11 = rx454_cur."octint"()
    repr_get_attr_int $I11, $P11, rx454_curclass, "$!pos"
    lt $I11, 0, rx454_fail1352
    nqp_rxmark rx454_bstack, rxsubrule458_pass1363, -1, 0
  rxsubrule458_pass1363:
    rx454_cstack = rx454_cur."!cursor_capture"($P11, "octint")
    repr_get_attr_int rx454_pos, $P11, rx454_curclass, "$!pos"
    goto alt457_end1361
  alt457_11364:
    add $I11, rx454_pos, 1
    gt $I11, rx454_eos, rx454_fail1352
    ord $I11, rx454_tgt, rx454_pos
    ne $I11, 91, rx454_fail1352
    add rx454_pos, 1
    repr_bind_attr_int rx454_cur, rx454_curclass, "$!pos", rx454_pos
    $P11 = rx454_cur."octints"()
    repr_get_attr_int $I11, $P11, rx454_curclass, "$!pos"
    lt $I11, 0, rx454_fail1352
    nqp_rxmark rx454_bstack, rxsubrule459_pass1365, -1, 0
  rxsubrule459_pass1365:
    rx454_cstack = rx454_cur."!cursor_capture"($P11, "octints")
    repr_get_attr_int rx454_pos, $P11, rx454_curclass, "$!pos"
    add $I11, rx454_pos, 1
    gt $I11, rx454_eos, rx454_fail1352
    ord $I11, rx454_tgt, rx454_pos
    ne $I11, 93, rx454_fail1352
    add rx454_pos, 1
    goto alt457_end1361
  alt457_end1361:
    nqp_rxcommit rx454_bstack, alt457_end1361
    rx454_cur."!cursor_pass"(rx454_pos, "cclass_backslash:sym<o>")
    .return (rx454_cur)
  rx454_restart1351:
    repr_get_attr_obj rx454_cstack, rx454_cur, rx454_curclass, "$!cstack"
  rx454_fail1352:
    unless rx454_bstack, rx454_done1350
    pop $I19, rx454_bstack
    if_null rx454_cstack, rx454_cstack_done1355
    unless rx454_cstack, rx454_cstack_done1355
    dec $I19
    set $P11, rx454_cstack[$I19]
  rx454_cstack_done1355:
    pop rx454_rep, rx454_bstack
    pop rx454_pos, rx454_bstack
    pop $I19, rx454_bstack
    lt rx454_pos, -1, rx454_done1350
    lt rx454_pos, 0, rx454_fail1352
    eq $I19, 0, rx454_fail1352
    nqp_islist $I20, rx454_cstack
    unless $I20, rx454_jump1353
    elements $I18, rx454_bstack
    le $I18, 0, rx454_cut1354
    dec $I18
    set $I18, rx454_bstack[$I18]
  rx454_cut1354:
    assign rx454_cstack, $I18
  rx454_jump1353:
    jump $I19
  rx454_done1350:
    rx454_cur."!cursor_fail"()
    .return (rx454_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<x>" :subid("cuid_114_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 372
    .param pmc __lowered_lex_182 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_183 
    set self, __lowered_lex_182
    .local pmc rx460_start
    .local string rx460_tgt
    .local int rx460_pos
    .local int rx460_off
    .local int rx460_eos
    .local int rx460_rep
    .local pmc rx460_cur
    .local pmc rx460_curclass
    .local pmc rx460_bstack
    .local pmc rx460_cstack
    rx460_start = self."!cursor_start_all"()
    set rx460_cur, rx460_start[0]
    set rx460_tgt, rx460_start[1]
    set rx460_pos, rx460_start[2]
    set rx460_curclass, rx460_start[3]
    set rx460_bstack, rx460_start[4]
    set $I19, rx460_start[5]
    store_lex unicode:"$\x{a2}", rx460_cur
    length rx460_eos, rx460_tgt
    eq $I19, 1, rx460_restart1368
    gt rx460_pos, rx460_eos, rx460_fail1369
    repr_get_attr_int $I11, self, rx460_curclass, "$!from"
    ne $I11, -1, rxscan461_done1375
    goto rxscan461_scan1374
  rxscan461_loop1373:
    inc rx460_pos
    gt rx460_pos, rx460_eos, rx460_fail1369
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!from", rx460_pos
  rxscan461_scan1374:
    nqp_rxmark rx460_bstack, rxscan461_loop1373, rx460_pos, 0
  rxscan461_done1375:
    nqp_rxmark rx460_bstack, rxcap462_fail1377, rx460_pos, 0
    ge rx460_pos, rx460_eos, rx460_fail1369
    substr $S11, rx460_tgt, rx460_pos, 1
    index $I11, ucs4:"xX", $S11
    lt $I11, 0, rx460_fail1369
    inc rx460_pos
    nqp_rxpeek $I19, rx460_bstack, rxcap462_fail1377
    inc $I19
    set $I11, rx460_bstack[$I19]
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx460_pos)
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "sym")
    goto rxcap462_done1376
  rxcap462_fail1377:
    goto rx460_fail1369
  rxcap462_done1376:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt463_01379
    nqp_push_label $P11, alt463_11381
    nqp_rxmark rx460_bstack, alt463_end1378, -1, 0
    rx460_cur."!alt"(rx460_pos, "alt_nfa__18_1431289914.62035", $P11)
    goto rx460_fail1369
  alt463_01379:
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."hexint"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail1369
    nqp_rxmark rx460_bstack, rxsubrule464_pass1380, -1, 0
  rxsubrule464_pass1380:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "hexint")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    goto alt463_end1378
  alt463_11381:
    add $I11, rx460_pos, 1
    gt $I11, rx460_eos, rx460_fail1369
    ord $I11, rx460_tgt, rx460_pos
    ne $I11, 91, rx460_fail1369
    add rx460_pos, 1
    repr_bind_attr_int rx460_cur, rx460_curclass, "$!pos", rx460_pos
    $P11 = rx460_cur."hexints"()
    repr_get_attr_int $I11, $P11, rx460_curclass, "$!pos"
    lt $I11, 0, rx460_fail1369
    nqp_rxmark rx460_bstack, rxsubrule465_pass1382, -1, 0
  rxsubrule465_pass1382:
    rx460_cstack = rx460_cur."!cursor_capture"($P11, "hexints")
    repr_get_attr_int rx460_pos, $P11, rx460_curclass, "$!pos"
    add $I11, rx460_pos, 1
    gt $I11, rx460_eos, rx460_fail1369
    ord $I11, rx460_tgt, rx460_pos
    ne $I11, 93, rx460_fail1369
    add rx460_pos, 1
    goto alt463_end1378
  alt463_end1378:
    nqp_rxcommit rx460_bstack, alt463_end1378
    rx460_cur."!cursor_pass"(rx460_pos, "cclass_backslash:sym<x>")
    .return (rx460_cur)
  rx460_restart1368:
    repr_get_attr_obj rx460_cstack, rx460_cur, rx460_curclass, "$!cstack"
  rx460_fail1369:
    unless rx460_bstack, rx460_done1367
    pop $I19, rx460_bstack
    if_null rx460_cstack, rx460_cstack_done1372
    unless rx460_cstack, rx460_cstack_done1372
    dec $I19
    set $P11, rx460_cstack[$I19]
  rx460_cstack_done1372:
    pop rx460_rep, rx460_bstack
    pop rx460_pos, rx460_bstack
    pop $I19, rx460_bstack
    lt rx460_pos, -1, rx460_done1367
    lt rx460_pos, 0, rx460_fail1369
    eq $I19, 0, rx460_fail1369
    nqp_islist $I20, rx460_cstack
    unless $I20, rx460_jump1370
    elements $I18, rx460_bstack
    le $I18, 0, rx460_cut1371
    dec $I18
    set $I18, rx460_bstack[$I18]
  rx460_cut1371:
    assign rx460_cstack, $I18
  rx460_jump1370:
    jump $I19
  rx460_done1367:
    rx460_cur."!cursor_fail"()
    .return (rx460_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<c>" :subid("cuid_115_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 373
    .param pmc __lowered_lex_184 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_185 
    set self, __lowered_lex_184
    .local pmc rx466_start
    .local string rx466_tgt
    .local int rx466_pos
    .local int rx466_off
    .local int rx466_eos
    .local int rx466_rep
    .local pmc rx466_cur
    .local pmc rx466_curclass
    .local pmc rx466_bstack
    .local pmc rx466_cstack
    rx466_start = self."!cursor_start_all"()
    set rx466_cur, rx466_start[0]
    set rx466_tgt, rx466_start[1]
    set rx466_pos, rx466_start[2]
    set rx466_curclass, rx466_start[3]
    set rx466_bstack, rx466_start[4]
    set $I19, rx466_start[5]
    store_lex unicode:"$\x{a2}", rx466_cur
    length rx466_eos, rx466_tgt
    eq $I19, 1, rx466_restart1385
    gt rx466_pos, rx466_eos, rx466_fail1386
    repr_get_attr_int $I11, self, rx466_curclass, "$!from"
    ne $I11, -1, rxscan467_done1392
    goto rxscan467_scan1391
  rxscan467_loop1390:
    inc rx466_pos
    gt rx466_pos, rx466_eos, rx466_fail1386
    repr_bind_attr_int rx466_cur, rx466_curclass, "$!from", rx466_pos
  rxscan467_scan1391:
    nqp_rxmark rx466_bstack, rxscan467_loop1390, rx466_pos, 0
  rxscan467_done1392:
    nqp_rxmark rx466_bstack, rxcap468_fail1394, rx466_pos, 0
    ge rx466_pos, rx466_eos, rx466_fail1386
    substr $S11, rx466_tgt, rx466_pos, 1
    index $I11, ucs4:"cC", $S11
    lt $I11, 0, rx466_fail1386
    inc rx466_pos
    nqp_rxpeek $I19, rx466_bstack, rxcap468_fail1394
    inc $I19
    set $I11, rx466_bstack[$I19]
    repr_bind_attr_int rx466_cur, rx466_curclass, "$!pos", rx466_pos
    $P11 = rx466_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx466_pos)
    rx466_cstack = rx466_cur."!cursor_capture"($P11, "sym")
    goto rxcap468_done1393
  rxcap468_fail1394:
    goto rx466_fail1386
  rxcap468_done1393:
    repr_bind_attr_int rx466_cur, rx466_curclass, "$!pos", rx466_pos
    $P11 = rx466_cur."charspec"()
    repr_get_attr_int $I11, $P11, rx466_curclass, "$!pos"
    lt $I11, 0, rx466_fail1386
    nqp_rxmark rx466_bstack, rxsubrule469_pass1395, -1, 0
  rxsubrule469_pass1395:
    rx466_cstack = rx466_cur."!cursor_capture"($P11, "charspec")
    repr_get_attr_int rx466_pos, $P11, rx466_curclass, "$!pos"
    rx466_cur."!cursor_pass"(rx466_pos, "cclass_backslash:sym<c>")
    .return (rx466_cur)
  rx466_restart1385:
    repr_get_attr_obj rx466_cstack, rx466_cur, rx466_curclass, "$!cstack"
  rx466_fail1386:
    unless rx466_bstack, rx466_done1384
    pop $I19, rx466_bstack
    if_null rx466_cstack, rx466_cstack_done1389
    unless rx466_cstack, rx466_cstack_done1389
    dec $I19
    set $P11, rx466_cstack[$I19]
  rx466_cstack_done1389:
    pop rx466_rep, rx466_bstack
    pop rx466_pos, rx466_bstack
    pop $I19, rx466_bstack
    lt rx466_pos, -1, rx466_done1384
    lt rx466_pos, 0, rx466_fail1386
    eq $I19, 0, rx466_fail1386
    nqp_islist $I20, rx466_cstack
    unless $I20, rx466_jump1387
    elements $I18, rx466_bstack
    le $I18, 0, rx466_cut1388
    dec $I18
    set $I18, rx466_bstack[$I18]
  rx466_cut1388:
    assign rx466_cstack, $I18
  rx466_jump1387:
    jump $I19
  rx466_done1384:
    rx466_cur."!cursor_fail"()
    .return (rx466_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<any>" :subid("cuid_116_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 374
    .param pmc __lowered_lex_186 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_187 
    set self, __lowered_lex_186
    .local pmc rx470_start
    .local string rx470_tgt
    .local int rx470_pos
    .local int rx470_off
    .local int rx470_eos
    .local int rx470_rep
    .local pmc rx470_cur
    .local pmc rx470_curclass
    .local pmc rx470_bstack
    .local pmc rx470_cstack
    rx470_start = self."!cursor_start_all"()
    set rx470_cur, rx470_start[0]
    set rx470_tgt, rx470_start[1]
    set rx470_pos, rx470_start[2]
    set rx470_curclass, rx470_start[3]
    set rx470_bstack, rx470_start[4]
    set $I19, rx470_start[5]
    store_lex unicode:"$\x{a2}", rx470_cur
    length rx470_eos, rx470_tgt
    eq $I19, 1, rx470_restart1398
    gt rx470_pos, rx470_eos, rx470_fail1399
    repr_get_attr_int $I11, self, rx470_curclass, "$!from"
    ne $I11, -1, rxscan471_done1405
    goto rxscan471_scan1404
  rxscan471_loop1403:
    inc rx470_pos
    gt rx470_pos, rx470_eos, rx470_fail1399
    repr_bind_attr_int rx470_cur, rx470_curclass, "$!from", rx470_pos
  rxscan471_scan1404:
    nqp_rxmark rx470_bstack, rxscan471_loop1403, rx470_pos, 0
  rxscan471_done1405:
    ge rx470_pos, rx470_eos, rx470_fail1399
    inc rx470_pos
    rx470_cur."!cursor_pass"(rx470_pos, "cclass_backslash:sym<any>")
    .return (rx470_cur)
  rx470_restart1398:
    repr_get_attr_obj rx470_cstack, rx470_cur, rx470_curclass, "$!cstack"
  rx470_fail1399:
    unless rx470_bstack, rx470_done1397
    pop $I19, rx470_bstack
    if_null rx470_cstack, rx470_cstack_done1402
    unless rx470_cstack, rx470_cstack_done1402
    dec $I19
    set $P11, rx470_cstack[$I19]
  rx470_cstack_done1402:
    pop rx470_rep, rx470_bstack
    pop rx470_pos, rx470_bstack
    pop $I19, rx470_bstack
    lt rx470_pos, -1, rx470_done1397
    lt rx470_pos, 0, rx470_fail1399
    eq $I19, 0, rx470_fail1399
    nqp_islist $I20, rx470_cstack
    unless $I20, rx470_jump1400
    elements $I18, rx470_bstack
    le $I18, 0, rx470_cut1401
    dec $I18
    set $I18, rx470_bstack[$I18]
  rx470_cut1401:
    assign rx470_cstack, $I18
  rx470_jump1400:
    jump $I19
  rx470_done1397:
    rx470_cur."!cursor_fail"()
    .return (rx470_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion" :subid("cuid_117_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 376
    .param pmc self 
    $P5001 = self."!protoregex"("assertion")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_118_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 378
    .param pmc __lowered_lex_188 
    .const 'Sub' $P5002 = 'cuid_119_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_189 
    set self, __lowered_lex_188
    .const 'Sub' $P5001 = 'cuid_119_1431289913.64791' 
    capture_lex $P5001
    .local pmc rx472_start
    .local string rx472_tgt
    .local int rx472_pos
    .local int rx472_off
    .local int rx472_eos
    .local int rx472_rep
    .local pmc rx472_cur
    .local pmc rx472_curclass
    .local pmc rx472_bstack
    .local pmc rx472_cstack
    rx472_start = self."!cursor_start_all"()
    set rx472_cur, rx472_start[0]
    set rx472_tgt, rx472_start[1]
    set rx472_pos, rx472_start[2]
    set rx472_curclass, rx472_start[3]
    set rx472_bstack, rx472_start[4]
    set $I19, rx472_start[5]
    store_lex unicode:"$\x{a2}", rx472_cur
    length rx472_eos, rx472_tgt
    eq $I19, 1, rx472_restart1408
    gt rx472_pos, rx472_eos, rx472_fail1409
    repr_get_attr_int $I11, self, rx472_curclass, "$!from"
    ne $I11, -1, rxscan473_done1415
    goto rxscan473_scan1414
  rxscan473_loop1413:
    inc rx472_pos
    index rx472_pos, rx472_tgt, ucs4:"?", rx472_pos
    eq rx472_pos, -1, rx472_fail1409
    repr_bind_attr_int rx472_cur, rx472_curclass, "$!from", rx472_pos
  rxscan473_scan1414:
    nqp_rxmark rx472_bstack, rxscan473_loop1413, rx472_pos, 0
  rxscan473_done1415:
    add $I11, rx472_pos, 1
    gt $I11, rx472_eos, rx472_fail1409
    ord $I11, rx472_tgt, rx472_pos
    ne $I11, 63, rx472_fail1409
    add rx472_pos, 1
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt474_01417
    nqp_push_label $P11, alt474_11418
    nqp_rxmark rx472_bstack, alt474_end1416, -1, 0
    rx472_cur."!alt"(rx472_pos, "alt_nfa__19_1431289914.64054", $P11)
    goto rx472_fail1409
  alt474_01417:
    add $I11, rx472_pos, 1
    gt $I11, rx472_eos, rx472_fail1409
    ord $I11, rx472_tgt, rx472_pos
    ne $I11, 62, rx472_fail1409
    goto alt474_end1416
  alt474_11418:
    repr_bind_attr_int rx472_cur, rx472_curclass, "$!pos", rx472_pos
    $P11 = rx472_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx472_curclass, "$!pos"
    lt $I11, 0, rx472_fail1409
    nqp_rxmark rx472_bstack, rxsubrule475_pass1419, -1, 0
  rxsubrule475_pass1419:
    rx472_cstack = rx472_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx472_pos, $P11, rx472_curclass, "$!pos"
    goto alt474_end1416
  alt474_end1416:
    nqp_rxcommit rx472_bstack, alt474_end1416
    rx472_cur."!cursor_pass"(rx472_pos, "assertion:sym<?>")
    .return (rx472_cur)
  rx472_restart1408:
    repr_get_attr_obj rx472_cstack, rx472_cur, rx472_curclass, "$!cstack"
  rx472_fail1409:
    unless rx472_bstack, rx472_done1407
    pop $I19, rx472_bstack
    if_null rx472_cstack, rx472_cstack_done1412
    unless rx472_cstack, rx472_cstack_done1412
    dec $I19
    set $P11, rx472_cstack[$I19]
  rx472_cstack_done1412:
    pop rx472_rep, rx472_bstack
    pop rx472_pos, rx472_bstack
    pop $I19, rx472_bstack
    lt rx472_pos, -1, rx472_done1407
    lt rx472_pos, 0, rx472_fail1409
    eq $I19, 0, rx472_fail1409
    nqp_islist $I20, rx472_cstack
    unless $I20, rx472_jump1410
    elements $I18, rx472_bstack
    le $I18, 0, rx472_cut1411
    dec $I18
    set $I18, rx472_bstack[$I18]
  rx472_cut1411:
    assign rx472_cstack, $I18
  rx472_jump1410:
    jump $I19
  rx472_done1407:
    rx472_cur."!cursor_fail"()
    .return (rx472_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_119_1431289913.64791") :anon :lex :outer("cuid_118_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_120_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 379
    .param pmc __lowered_lex_190 
    .const 'Sub' $P5002 = 'cuid_121_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_191 
    set self, __lowered_lex_190
    .const 'Sub' $P5001 = 'cuid_121_1431289913.64791' 
    capture_lex $P5001
    .local pmc rx476_start
    .local string rx476_tgt
    .local int rx476_pos
    .local int rx476_off
    .local int rx476_eos
    .local int rx476_rep
    .local pmc rx476_cur
    .local pmc rx476_curclass
    .local pmc rx476_bstack
    .local pmc rx476_cstack
    rx476_start = self."!cursor_start_all"()
    set rx476_cur, rx476_start[0]
    set rx476_tgt, rx476_start[1]
    set rx476_pos, rx476_start[2]
    set rx476_curclass, rx476_start[3]
    set rx476_bstack, rx476_start[4]
    set $I19, rx476_start[5]
    store_lex unicode:"$\x{a2}", rx476_cur
    length rx476_eos, rx476_tgt
    eq $I19, 1, rx476_restart1422
    gt rx476_pos, rx476_eos, rx476_fail1423
    repr_get_attr_int $I11, self, rx476_curclass, "$!from"
    ne $I11, -1, rxscan477_done1429
    goto rxscan477_scan1428
  rxscan477_loop1427:
    inc rx476_pos
    index rx476_pos, rx476_tgt, ucs4:"!", rx476_pos
    eq rx476_pos, -1, rx476_fail1423
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!from", rx476_pos
  rxscan477_scan1428:
    nqp_rxmark rx476_bstack, rxscan477_loop1427, rx476_pos, 0
  rxscan477_done1429:
    add $I11, rx476_pos, 1
    gt $I11, rx476_eos, rx476_fail1423
    ord $I11, rx476_tgt, rx476_pos
    ne $I11, 33, rx476_fail1423
    add rx476_pos, 1
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt478_01431
    nqp_push_label $P11, alt478_11432
    nqp_rxmark rx476_bstack, alt478_end1430, -1, 0
    rx476_cur."!alt"(rx476_pos, "alt_nfa__20_1431289914.64946", $P11)
    goto rx476_fail1423
  alt478_01431:
    add $I11, rx476_pos, 1
    gt $I11, rx476_eos, rx476_fail1423
    ord $I11, rx476_tgt, rx476_pos
    ne $I11, 62, rx476_fail1423
    goto alt478_end1430
  alt478_11432:
    repr_bind_attr_int rx476_cur, rx476_curclass, "$!pos", rx476_pos
    $P11 = rx476_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx476_curclass, "$!pos"
    lt $I11, 0, rx476_fail1423
    nqp_rxmark rx476_bstack, rxsubrule479_pass1433, -1, 0
  rxsubrule479_pass1433:
    rx476_cstack = rx476_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx476_pos, $P11, rx476_curclass, "$!pos"
    goto alt478_end1430
  alt478_end1430:
    nqp_rxcommit rx476_bstack, alt478_end1430
    rx476_cur."!cursor_pass"(rx476_pos, "assertion:sym<!>")
    .return (rx476_cur)
  rx476_restart1422:
    repr_get_attr_obj rx476_cstack, rx476_cur, rx476_curclass, "$!cstack"
  rx476_fail1423:
    unless rx476_bstack, rx476_done1421
    pop $I19, rx476_bstack
    if_null rx476_cstack, rx476_cstack_done1426
    unless rx476_cstack, rx476_cstack_done1426
    dec $I19
    set $P11, rx476_cstack[$I19]
  rx476_cstack_done1426:
    pop rx476_rep, rx476_bstack
    pop rx476_pos, rx476_bstack
    pop $I19, rx476_bstack
    lt rx476_pos, -1, rx476_done1421
    lt rx476_pos, 0, rx476_fail1423
    eq $I19, 0, rx476_fail1423
    nqp_islist $I20, rx476_cstack
    unless $I20, rx476_jump1424
    elements $I18, rx476_bstack
    le $I18, 0, rx476_cut1425
    dec $I18
    set $I18, rx476_bstack[$I18]
  rx476_cut1425:
    assign rx476_cstack, $I18
  rx476_jump1424:
    jump $I19
  rx476_done1421:
    rx476_cur."!cursor_fail"()
    .return (rx476_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_121_1431289913.64791") :anon :lex :outer("cuid_120_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<|>" :subid("cuid_122_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 380
    .param pmc __lowered_lex_192 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_193 
    set self, __lowered_lex_192
    .local pmc rx480_start
    .local string rx480_tgt
    .local int rx480_pos
    .local int rx480_off
    .local int rx480_eos
    .local int rx480_rep
    .local pmc rx480_cur
    .local pmc rx480_curclass
    .local pmc rx480_bstack
    .local pmc rx480_cstack
    rx480_start = self."!cursor_start_all"()
    set rx480_cur, rx480_start[0]
    set rx480_tgt, rx480_start[1]
    set rx480_pos, rx480_start[2]
    set rx480_curclass, rx480_start[3]
    set rx480_bstack, rx480_start[4]
    set $I19, rx480_start[5]
    store_lex unicode:"$\x{a2}", rx480_cur
    length rx480_eos, rx480_tgt
    eq $I19, 1, rx480_restart1436
    gt rx480_pos, rx480_eos, rx480_fail1437
    repr_get_attr_int $I11, self, rx480_curclass, "$!from"
    ne $I11, -1, rxscan481_done1443
    goto rxscan481_scan1442
  rxscan481_loop1441:
    inc rx480_pos
    index rx480_pos, rx480_tgt, ucs4:"|", rx480_pos
    eq rx480_pos, -1, rx480_fail1437
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!from", rx480_pos
  rxscan481_scan1442:
    nqp_rxmark rx480_bstack, rxscan481_loop1441, rx480_pos, 0
  rxscan481_done1443:
    add $I11, rx480_pos, 1
    gt $I11, rx480_eos, rx480_fail1437
    ord $I11, rx480_tgt, rx480_pos
    ne $I11, 124, rx480_fail1437
    add rx480_pos, 1
    repr_bind_attr_int rx480_cur, rx480_curclass, "$!pos", rx480_pos
    $P11 = rx480_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx480_curclass, "$!pos"
    lt $I11, 0, rx480_fail1437
    nqp_rxmark rx480_bstack, rxsubrule482_pass1444, -1, 0
  rxsubrule482_pass1444:
    rx480_cstack = rx480_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx480_pos, $P11, rx480_curclass, "$!pos"
    rx480_cur."!cursor_pass"(rx480_pos, "assertion:sym<|>")
    .return (rx480_cur)
  rx480_restart1436:
    repr_get_attr_obj rx480_cstack, rx480_cur, rx480_curclass, "$!cstack"
  rx480_fail1437:
    unless rx480_bstack, rx480_done1435
    pop $I19, rx480_bstack
    if_null rx480_cstack, rx480_cstack_done1440
    unless rx480_cstack, rx480_cstack_done1440
    dec $I19
    set $P11, rx480_cstack[$I19]
  rx480_cstack_done1440:
    pop rx480_rep, rx480_bstack
    pop rx480_pos, rx480_bstack
    pop $I19, rx480_bstack
    lt rx480_pos, -1, rx480_done1435
    lt rx480_pos, 0, rx480_fail1437
    eq $I19, 0, rx480_fail1437
    nqp_islist $I20, rx480_cstack
    unless $I20, rx480_jump1438
    elements $I18, rx480_bstack
    le $I18, 0, rx480_cut1439
    dec $I18
    set $I18, rx480_bstack[$I18]
  rx480_cut1439:
    assign rx480_cstack, $I18
  rx480_jump1438:
    jump $I19
  rx480_done1435:
    rx480_cur."!cursor_fail"()
    .return (rx480_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<method>" :subid("cuid_123_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 382
    .param pmc __lowered_lex_194 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_195 
    set self, __lowered_lex_194
    .local pmc rx483_start
    .local string rx483_tgt
    .local int rx483_pos
    .local int rx483_off
    .local int rx483_eos
    .local int rx483_rep
    .local pmc rx483_cur
    .local pmc rx483_curclass
    .local pmc rx483_bstack
    .local pmc rx483_cstack
    rx483_start = self."!cursor_start_all"()
    set rx483_cur, rx483_start[0]
    set rx483_tgt, rx483_start[1]
    set rx483_pos, rx483_start[2]
    set rx483_curclass, rx483_start[3]
    set rx483_bstack, rx483_start[4]
    set $I19, rx483_start[5]
    store_lex unicode:"$\x{a2}", rx483_cur
    length rx483_eos, rx483_tgt
    eq $I19, 1, rx483_restart1447
    gt rx483_pos, rx483_eos, rx483_fail1448
    repr_get_attr_int $I11, self, rx483_curclass, "$!from"
    ne $I11, -1, rxscan484_done1454
    goto rxscan484_scan1453
  rxscan484_loop1452:
    inc rx483_pos
    index rx483_pos, rx483_tgt, ucs4:".", rx483_pos
    eq rx483_pos, -1, rx483_fail1448
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!from", rx483_pos
  rxscan484_scan1453:
    nqp_rxmark rx483_bstack, rxscan484_loop1452, rx483_pos, 0
  rxscan484_done1454:
    add $I11, rx483_pos, 1
    gt $I11, rx483_eos, rx483_fail1448
    ord $I11, rx483_tgt, rx483_pos
    ne $I11, 46, rx483_fail1448
    add rx483_pos, 1
    repr_bind_attr_int rx483_cur, rx483_curclass, "$!pos", rx483_pos
    $P11 = rx483_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx483_curclass, "$!pos"
    lt $I11, 0, rx483_fail1448
    nqp_rxmark rx483_bstack, rxsubrule485_pass1455, -1, 0
  rxsubrule485_pass1455:
    rx483_cstack = rx483_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx483_pos, $P11, rx483_curclass, "$!pos"
    rx483_cur."!cursor_pass"(rx483_pos, "assertion:sym<method>")
    .return (rx483_cur)
  rx483_restart1447:
    repr_get_attr_obj rx483_cstack, rx483_cur, rx483_curclass, "$!cstack"
  rx483_fail1448:
    unless rx483_bstack, rx483_done1446
    pop $I19, rx483_bstack
    if_null rx483_cstack, rx483_cstack_done1451
    unless rx483_cstack, rx483_cstack_done1451
    dec $I19
    set $P11, rx483_cstack[$I19]
  rx483_cstack_done1451:
    pop rx483_rep, rx483_bstack
    pop rx483_pos, rx483_bstack
    pop $I19, rx483_bstack
    lt rx483_pos, -1, rx483_done1446
    lt rx483_pos, 0, rx483_fail1448
    eq $I19, 0, rx483_fail1448
    nqp_islist $I20, rx483_cstack
    unless $I20, rx483_jump1449
    elements $I18, rx483_bstack
    le $I18, 0, rx483_cut1450
    dec $I18
    set $I18, rx483_bstack[$I18]
  rx483_cut1450:
    assign rx483_cstack, $I18
  rx483_jump1449:
    jump $I19
  rx483_done1446:
    rx483_cur."!cursor_fail"()
    .return (rx483_cur) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_124_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 386
    .param pmc __lowered_lex_196 
    .const 'Sub' $P5002 = 'cuid_125_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_197 
    set self, __lowered_lex_196
    .const 'Sub' $P5001 = 'cuid_125_1431289913.64791' 
    capture_lex $P5001
    .local pmc rx486_start
    .local string rx486_tgt
    .local int rx486_pos
    .local int rx486_off
    .local int rx486_eos
    .local int rx486_rep
    .local pmc rx486_cur
    .local pmc rx486_curclass
    .local pmc rx486_bstack
    .local pmc rx486_cstack
    rx486_start = self."!cursor_start_all"()
    set rx486_cur, rx486_start[0]
    set rx486_tgt, rx486_start[1]
    set rx486_pos, rx486_start[2]
    set rx486_curclass, rx486_start[3]
    set rx486_bstack, rx486_start[4]
    set $I19, rx486_start[5]
    store_lex unicode:"$\x{a2}", rx486_cur
    length rx486_eos, rx486_tgt
    eq $I19, 1, rx486_restart1458
    gt rx486_pos, rx486_eos, rx486_fail1459
    repr_get_attr_int $I11, self, rx486_curclass, "$!from"
    ne $I11, -1, rxscan487_done1465
    goto rxscan487_scan1464
  rxscan487_loop1463:
    inc rx486_pos
    gt rx486_pos, rx486_eos, rx486_fail1459
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!from", rx486_pos
  rxscan487_scan1464:
    nqp_rxmark rx486_bstack, rxscan487_loop1463, rx486_pos, 0
  rxscan487_done1465:
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!pos", rx486_pos
    $P11 = rx486_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx486_curclass, "$!pos"
    lt $I11, 0, rx486_fail1459
    nqp_rxmark rx486_bstack, rxsubrule488_pass1466, -1, 0
  rxsubrule488_pass1466:
    rx486_cstack = rx486_cur."!cursor_capture"($P11, "longname")
    repr_get_attr_int rx486_pos, $P11, rx486_curclass, "$!pos"
    nqp_rxmark rx486_bstack, rxquantr489_done1468, rx486_pos, 0
  rxquantr489_loop1467:
    new $P11, "ResizableIntegerArray"
    assign $P11, 5
    assign $P11, 0
    nqp_push_label $P11, alt490_01470
    nqp_push_label $P11, alt490_11471
    nqp_push_label $P11, alt490_21473
    nqp_push_label $P11, alt490_31475
    nqp_push_label $P11, alt490_41477
    nqp_rxmark rx486_bstack, alt490_end1469, -1, 0
    rx486_cur."!alt"(rx486_pos, "alt_nfa__21_1431289914.6754", $P11)
    goto rx486_fail1459
  alt490_01470:
    add $I11, rx486_pos, 1
    gt $I11, rx486_eos, rx486_fail1459
    ord $I11, rx486_tgt, rx486_pos
    ne $I11, 62, rx486_fail1459
    goto alt490_end1469
  alt490_11471:
    add $I11, rx486_pos, 1
    gt $I11, rx486_eos, rx486_fail1459
    ord $I11, rx486_tgt, rx486_pos
    ne $I11, 61, rx486_fail1459
    add rx486_pos, 1
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!pos", rx486_pos
    $P11 = rx486_cur."assertion"()
    repr_get_attr_int $I11, $P11, rx486_curclass, "$!pos"
    lt $I11, 0, rx486_fail1459
    nqp_rxmark rx486_bstack, rxsubrule491_pass1472, -1, 0
  rxsubrule491_pass1472:
    rx486_cstack = rx486_cur."!cursor_capture"($P11, "assertion")
    repr_get_attr_int rx486_pos, $P11, rx486_curclass, "$!pos"
    goto alt490_end1469
  alt490_21473:
    add $I11, rx486_pos, 1
    gt $I11, rx486_eos, rx486_fail1459
    ord $I11, rx486_tgt, rx486_pos
    ne $I11, 58, rx486_fail1459
    add rx486_pos, 1
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!pos", rx486_pos
    $P11 = rx486_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx486_curclass, "$!pos"
    lt $I11, 0, rx486_fail1459
    nqp_rxmark rx486_bstack, rxsubrule492_pass1474, -1, 0
  rxsubrule492_pass1474:
    rx486_cstack = rx486_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx486_pos, $P11, rx486_curclass, "$!pos"
    goto alt490_end1469
  alt490_31475:
    add $I11, rx486_pos, 1
    gt $I11, rx486_eos, rx486_fail1459
    ord $I11, rx486_tgt, rx486_pos
    ne $I11, 40, rx486_fail1459
    add rx486_pos, 1
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!pos", rx486_pos
    $P11 = rx486_cur."arglist"()
    repr_get_attr_int $I11, $P11, rx486_curclass, "$!pos"
    lt $I11, 0, rx486_fail1459
    nqp_rxmark rx486_bstack, rxsubrule493_pass1476, -1, 0
  rxsubrule493_pass1476:
    rx486_cstack = rx486_cur."!cursor_capture"($P11, "arglist")
    repr_get_attr_int rx486_pos, $P11, rx486_curclass, "$!pos"
    add $I11, rx486_pos, 1
    gt $I11, rx486_eos, rx486_fail1459
    ord $I11, rx486_tgt, rx486_pos
    ne $I11, 41, rx486_fail1459
    add rx486_pos, 1
    goto alt490_end1469
  alt490_41477:
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!pos", rx486_pos
    $P11 = rx486_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx486_curclass, "$!pos"
    lt $I11, 0, rx486_fail1459
    repr_get_attr_int rx486_pos, $P11, rx486_curclass, "$!pos"
    repr_bind_attr_int rx486_cur, rx486_curclass, "$!pos", rx486_pos
    $P11 = rx486_cur."nibbler"()
    repr_get_attr_int $I11, $P11, rx486_curclass, "$!pos"
    lt $I11, 0, rx486_fail1459
    nqp_rxmark rx486_bstack, rxsubrule495_pass1479, -1, 0
  rxsubrule495_pass1479:
    rx486_cstack = rx486_cur."!cursor_capture"($P11, "nibbler")
    repr_get_attr_int rx486_pos, $P11, rx486_curclass, "$!pos"
    goto alt490_end1469
  alt490_end1469:
    nqp_rxpeek $I19, rx486_bstack, rxquantr489_done1468
    inc $I19
    inc $I19
    set rx486_rep, rx486_bstack[$I19]
    nqp_rxcommit rx486_bstack, rxquantr489_done1468
    inc rx486_rep
  rxquantr489_done1468:
    rx486_cur."!cursor_pass"(rx486_pos, "assertion:sym<name>")
    .return (rx486_cur)
  rx486_restart1458:
    repr_get_attr_obj rx486_cstack, rx486_cur, rx486_curclass, "$!cstack"
  rx486_fail1459:
    unless rx486_bstack, rx486_done1457
    pop $I19, rx486_bstack
    if_null rx486_cstack, rx486_cstack_done1462
    unless rx486_cstack, rx486_cstack_done1462
    dec $I19
    set $P11, rx486_cstack[$I19]
  rx486_cstack_done1462:
    pop rx486_rep, rx486_bstack
    pop rx486_pos, rx486_bstack
    pop $I19, rx486_bstack
    lt rx486_pos, -1, rx486_done1457
    lt rx486_pos, 0, rx486_fail1459
    eq $I19, 0, rx486_fail1459
    nqp_islist $I20, rx486_cstack
    unless $I20, rx486_jump1460
    elements $I18, rx486_bstack
    le $I18, 0, rx486_cut1461
    dec $I18
    set $I18, rx486_bstack[$I18]
  rx486_cut1461:
    assign rx486_cstack, $I18
  rx486_jump1460:
    jump $I19
  rx486_done1457:
    rx486_cur."!cursor_fail"()
    .return (rx486_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_125_1431289913.64791") :anon :lex :outer("cuid_124_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<[>" :subid("cuid_126_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 397
    .param pmc __lowered_lex_198 
    .const 'Sub' $P5002 = 'cuid_127_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_199 
    set self, __lowered_lex_198
    .local pmc rx496_start
    .local string rx496_tgt
    .local int rx496_pos
    .local int rx496_off
    .local int rx496_eos
    .local int rx496_rep
    .local pmc rx496_cur
    .local pmc rx496_curclass
    .local pmc rx496_bstack
    .local pmc rx496_cstack
    rx496_start = self."!cursor_start_all"()
    set rx496_cur, rx496_start[0]
    set rx496_tgt, rx496_start[1]
    set rx496_pos, rx496_start[2]
    set rx496_curclass, rx496_start[3]
    set rx496_bstack, rx496_start[4]
    set $I19, rx496_start[5]
    store_lex unicode:"$\x{a2}", rx496_cur
    length rx496_eos, rx496_tgt
    eq $I19, 1, rx496_restart1482
    gt rx496_pos, rx496_eos, rx496_fail1483
    repr_get_attr_int $I11, self, rx496_curclass, "$!from"
    ne $I11, -1, rxscan497_done1489
    goto rxscan497_scan1488
  rxscan497_loop1487:
    inc rx496_pos
    gt rx496_pos, rx496_eos, rx496_fail1483
    repr_bind_attr_int rx496_cur, rx496_curclass, "$!from", rx496_pos
  rxscan497_scan1488:
    nqp_rxmark rx496_bstack, rxscan497_loop1487, rx496_pos, 0
  rxscan497_done1489:
    .const 'Sub' $P5001 = 'cuid_127_1431289913.64791' 
    capture_lex $P5001
    repr_bind_attr_int rx496_cur, rx496_curclass, "$!pos", rx496_pos
    $P11 = rx496_cur."before"($P5001)
    repr_get_attr_int $I11, $P11, rx496_curclass, "$!pos"
    lt $I11, 0, rx496_fail1483
    nqp_rxmark rx496_bstack, rxquantr500_done1503, -1, 0
  rxquantr500_loop1502:
    repr_bind_attr_int rx496_cur, rx496_curclass, "$!pos", rx496_pos
    $P11 = rx496_cur."cclass_elem"()
    repr_get_attr_int $I11, $P11, rx496_curclass, "$!pos"
    lt $I11, 0, rx496_fail1483
    goto rxsubrule501_pass1504
  rxsubrule501_back1505:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx496_curclass, "$!pos"
    lt $I11, 0, rx496_fail1483
  rxsubrule501_pass1504:
    rx496_cstack = rx496_cur."!cursor_capture"($P11, "cclass_elem")
    set_addr $I11, rxsubrule501_back1505
    push rx496_bstack, $I11
    push rx496_bstack, 0
    push rx496_bstack, rx496_pos
    elements $I11, rx496_cstack
    push rx496_bstack, $I11
    repr_get_attr_int rx496_pos, $P11, rx496_curclass, "$!pos"
    nqp_rxpeek $I19, rx496_bstack, rxquantr500_done1503
    inc $I19
    inc $I19
    set rx496_rep, rx496_bstack[$I19]
    nqp_rxcommit rx496_bstack, rxquantr500_done1503
    inc rx496_rep
    nqp_rxmark rx496_bstack, rxquantr500_done1503, rx496_pos, rx496_rep
    goto rxquantr500_loop1502
  rxquantr500_done1503:
    rx496_cur."!cursor_pass"(rx496_pos, "assertion:sym<[>")
    .return (rx496_cur)
  rx496_restart1482:
    repr_get_attr_obj rx496_cstack, rx496_cur, rx496_curclass, "$!cstack"
  rx496_fail1483:
    unless rx496_bstack, rx496_done1481
    pop $I19, rx496_bstack
    if_null rx496_cstack, rx496_cstack_done1486
    unless rx496_cstack, rx496_cstack_done1486
    dec $I19
    set $P11, rx496_cstack[$I19]
  rx496_cstack_done1486:
    pop rx496_rep, rx496_bstack
    pop rx496_pos, rx496_bstack
    pop $I19, rx496_bstack
    lt rx496_pos, -1, rx496_done1481
    lt rx496_pos, 0, rx496_fail1483
    eq $I19, 0, rx496_fail1483
    nqp_islist $I20, rx496_cstack
    unless $I20, rx496_jump1484
    elements $I18, rx496_bstack
    le $I18, 0, rx496_cut1485
    dec $I18
    set $I18, rx496_bstack[$I18]
  rx496_cut1485:
    assign rx496_cstack, $I18
  rx496_jump1484:
    jump $I19
  rx496_done1481:
    rx496_cur."!cursor_fail"()
    .return (rx496_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_127_1431289913.64791") :anon :lex :outer("cuid_126_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx498_start
    .local string rx498_tgt
    .local int rx498_pos
    .local int rx498_off
    .local int rx498_eos
    .local int rx498_rep
    .local pmc rx498_cur
    .local pmc rx498_curclass
    .local pmc rx498_bstack
    .local pmc rx498_cstack
    rx498_start = self."!cursor_start_all"()
    set rx498_cur, rx498_start[0]
    set rx498_tgt, rx498_start[1]
    set rx498_pos, rx498_start[2]
    set rx498_curclass, rx498_start[3]
    set rx498_bstack, rx498_start[4]
    set $I19, rx498_start[5]
    store_lex unicode:"$\x{a2}", rx498_cur
    length rx498_eos, rx498_tgt
    eq $I19, 1, rx498_restart1492
    gt rx498_pos, rx498_eos, rx498_fail1493
    new $P11, "ResizableIntegerArray"
    assign $P11, 4
    assign $P11, 0
    nqp_push_label $P11, alt499_01498
    nqp_push_label $P11, alt499_11499
    nqp_push_label $P11, alt499_21500
    nqp_push_label $P11, alt499_31501
    nqp_rxmark rx498_bstack, alt499_end1497, -1, 0
    rx498_cur."!alt"(rx498_pos, "alt_nfa__22_1431289914.72913", $P11)
    goto rx498_fail1493
  alt499_01498:
    add $I11, rx498_pos, 1
    gt $I11, rx498_eos, rx498_fail1493
    ord $I11, rx498_tgt, rx498_pos
    ne $I11, 91, rx498_fail1493
    add rx498_pos, 1
    goto alt499_end1497
  alt499_11499:
    add $I11, rx498_pos, 1
    gt $I11, rx498_eos, rx498_fail1493
    ord $I11, rx498_tgt, rx498_pos
    ne $I11, 43, rx498_fail1493
    add rx498_pos, 1
    goto alt499_end1497
  alt499_21500:
    add $I11, rx498_pos, 1
    gt $I11, rx498_eos, rx498_fail1493
    ord $I11, rx498_tgt, rx498_pos
    ne $I11, 45, rx498_fail1493
    add rx498_pos, 1
    goto alt499_end1497
  alt499_31501:
    add $I11, rx498_pos, 1
    gt $I11, rx498_eos, rx498_fail1493
    ord $I11, rx498_tgt, rx498_pos
    ne $I11, 58, rx498_fail1493
    add rx498_pos, 1
    goto alt499_end1497
  alt499_end1497:
    rx498_cur."!cursor_pass"(rx498_pos)
    .return (rx498_cur)
  rx498_restart1492:
    repr_get_attr_obj rx498_cstack, rx498_cur, rx498_curclass, "$!cstack"
  rx498_fail1493:
    unless rx498_bstack, rx498_done1491
    pop $I19, rx498_bstack
    if_null rx498_cstack, rx498_cstack_done1496
    unless rx498_cstack, rx498_cstack_done1496
    dec $I19
    set $P11, rx498_cstack[$I19]
  rx498_cstack_done1496:
    pop rx498_rep, rx498_bstack
    pop rx498_pos, rx498_bstack
    pop $I19, rx498_bstack
    lt rx498_pos, -1, rx498_done1491
    lt rx498_pos, 0, rx498_fail1493
    eq $I19, 0, rx498_fail1493
    nqp_islist $I20, rx498_cstack
    unless $I20, rx498_jump1494
    elements $I18, rx498_bstack
    le $I18, 0, rx498_cut1495
    dec $I18
    set $I18, rx498_bstack[$I18]
  rx498_cut1495:
    assign rx498_cstack, $I18
  rx498_jump1494:
    jump $I19
  rx498_done1491:
    rx498_cur."!cursor_fail"()
    .return (rx498_cur) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_elem" :subid("cuid_128_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 399
    .param pmc _lex_param_0 
    .const 'Sub' $P5109 = 'cuid_135_1431289913.64791' 
    capture_lex $P5109 
    .lex "$*key", $P101 
    .lex utf8:"$\x{a2}", $P102 
    .lex "$/", $P103 
    .lex "self", _lex_param_0 
    .local pmc self 
    .local pmc fb_tmp_16 
    .local pmc __lowered_lex_202 
    .local pmc lowered_for_it__2 
    .local pmc fb_tmp_17 
    .local pmc __lowered_lex_200 
    .local pmc fb_tmp_18 
    .local pmc fb_tmp_19 
    .local pmc fb_tmp_20 
    .local pmc fb_tmp_21 
    .local pmc fb_tmp_22 
    .local pmc fb_tmp_23 
    .local pmc fb_tmp_24 
    .local pmc fb_tmp_25 
    .local pmc fb_tmp_26 
    .local pmc fb_tmp_27 
    .local pmc fb_tmp_28 
    .local pmc fb_tmp_29 
    .local pmc fb_tmp_30 
    .local pmc fb_tmp_31 
    .local pmc lowered_for_it__3 
    .local pmc __lowered_lex_201 
    .local pmc fb_tmp_32 
    .local pmc fb_tmp_33 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P101, $P5001
    set self, _lex_param_0
    .local pmc rx502_start
    .local string rx502_tgt
    .local int rx502_pos
    .local int rx502_off
    .local int rx502_eos
    .local int rx502_rep
    .local pmc rx502_cur
    .local pmc rx502_curclass
    .local pmc rx502_bstack
    .local pmc rx502_cstack
    rx502_start = self."!cursor_start_all"()
    set rx502_cur, rx502_start[0]
    set rx502_tgt, rx502_start[1]
    set rx502_pos, rx502_start[2]
    set rx502_curclass, rx502_start[3]
    set rx502_bstack, rx502_start[4]
    set $I19, rx502_start[5]
    store_lex unicode:"$\x{a2}", rx502_cur
    length rx502_eos, rx502_tgt
    eq $I19, 1, rx502_restart1508
    gt rx502_pos, rx502_eos, rx502_fail1509
    repr_get_attr_int $I11, self, rx502_curclass, "$!from"
    ne $I11, -1, rxscan503_done1515
    goto rxscan503_scan1514
  rxscan503_loop1513:
    inc rx502_pos
    gt rx502_pos, rx502_eos, rx502_fail1509
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!from", rx502_pos
  rxscan503_scan1514:
    nqp_rxmark rx502_bstack, rxscan503_loop1513, rx502_pos, 0
  rxscan503_done1515:
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    store_lex unicode:"$\x{a2}", rx502_cur
    unless_null $P101, fallback1516
    nqp_get_sc_object $P5003, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5002, $P5003
    set fb_tmp_16, $P5002
    repr_defined $I5001, fb_tmp_16
    unless $I5001 goto if504_else1517 
    set $P5004, fb_tmp_16["$key"]
    set $P5006, $P5004
    goto if504_end1518
  if504_else1517:
    null $P5005
    set $P5006, $P5005
  if504_end1518:
    unless_null $P5006, vivi_5051519
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_5051519:
    unless_null $P5006, vivi_5061520
    die "Contextual $*key not found"
    box $P5008, "Contextual $*key not found"
    set $P5006, $P5008
  vivi_5061520:
    set $P101, $P5006
  fallback1516:
    nqp_rxmark rx502_bstack, rxcap507_fail1522, rx502_pos, 0
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt508_01524
    nqp_push_label $P11, alt508_11525
    nqp_push_label $P11, alt508_21526
    nqp_rxmark rx502_bstack, alt508_end1523, -1, 0
    rx502_cur."!alt"(rx502_pos, "alt_nfa__23_1431289914.82999", $P11)
    goto rx502_fail1509
  alt508_01524:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail1509
    ord $I11, rx502_tgt, rx502_pos
    ne $I11, 43, rx502_fail1509
    add rx502_pos, 1
    goto alt508_end1523
  alt508_11525:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail1509
    ord $I11, rx502_tgt, rx502_pos
    ne $I11, 45, rx502_fail1509
    add rx502_pos, 1
    goto alt508_end1523
  alt508_21526:
    goto alt508_end1523
  alt508_end1523:
    nqp_rxcommit rx502_bstack, alt508_end1523
    nqp_rxpeek $I19, rx502_bstack, rxcap507_fail1522
    inc $I19
    set $I11, rx502_bstack[$I19]
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx502_pos)
    rx502_cstack = rx502_cur."!cursor_capture"($P11, "sign")
    goto rxcap507_done1521
  rxcap507_fail1522:
    goto rx502_fail1509
  rxcap507_done1521:
    nqp_rxmark rx502_bstack, rxquantr510_done1529, rx502_pos, 0
  rxquantr510_loop1528:
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
    goto rxsubrule511_pass1530
  rxsubrule511_back1531:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
  rxsubrule511_pass1530:
    rx502_cstack = rx502_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule511_back1531
    push rx502_bstack, $I11
    push rx502_bstack, 0
    push rx502_bstack, rx502_pos
    elements $I11, rx502_cstack
    push rx502_bstack, $I11
    repr_get_attr_int rx502_pos, $P11, rx502_curclass, "$!pos"
    nqp_rxpeek $I19, rx502_bstack, rxquantr510_done1529
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr510_done1529
    inc rx502_rep
  rxquantr510_done1529:
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt512_01533
    nqp_push_label $P11, alt512_11681
    nqp_push_label $P11, alt512_21686
    nqp_rxmark rx502_bstack, alt512_end1532, -1, 0
    rx502_cur."!alt"(rx502_pos, "alt_nfa__25_1431289914.83099", $P11)
    goto rx502_fail1509
  alt512_01533:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail1509
    ord $I11, rx502_tgt, rx502_pos
    ne $I11, 91, rx502_fail1509
    add rx502_pos, 1
    nqp_rxmark rx502_bstack, rxquantr513_done1535, rx502_pos, 0
  rxquantr513_loop1534:
    .const 'Sub' $P5009 = 'cuid_135_1431289913.64791' 
    capture_lex $P5009
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur.$P5009()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
    goto rxsubrule537_pass1613
  rxsubrule537_back1614:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
  rxsubrule537_pass1613:
    rx502_cstack = rx502_cur."!cursor_capture"($P11, "charspec")
    set_addr $I11, rxsubrule537_back1614
    push rx502_bstack, $I11
    push rx502_bstack, 0
    push rx502_bstack, rx502_pos
    elements $I11, rx502_cstack
    push rx502_bstack, $I11
    repr_get_attr_int rx502_pos, $P11, rx502_curclass, "$!pos"
    nqp_rxpeek $I19, rx502_bstack, rxquantr513_done1535
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr513_done1535
    inc rx502_rep
    nqp_rxmark rx502_bstack, rxquantr513_done1535, rx502_pos, rx502_rep
    goto rxquantr513_loop1534
  rxquantr513_done1535:
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    store_lex unicode:"$\x{a2}", rx502_cur
    $P5010 = $P102."MATCH"()
    set $P103, $P5010
    new $P5011, 'Hash'
    set __lowered_lex_202, $P5011
.annotate 'line', 412
    unless_null $P103, fallback1617
    nqp_get_sc_object $P5013, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P103, $P5013
  fallback1617:
    set fb_tmp_17, $P103
    repr_defined $I5002, fb_tmp_17
    unless $I5002 goto if538_else1615 
    set $P5014, fb_tmp_17["charspec"]
    set $P5016, $P5014
    goto if538_end1616
  if538_else1615:
    null $P5015
    set $P5016, $P5015
  if538_end1616:
    unless_null $P5016, vivi_5391618
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_5391618:
    iter $P5012, $P5016
    set lowered_for_it__2, $P5012
    new $P5084, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5084, while540_handlers1622
    push_eh $P5084
  while540_test1619:
    set $P5083, lowered_for_it__2
    unless lowered_for_it__2 goto while540_done1623 
  while540_redo1621:
    shift $P5018, lowered_for_it__2
    set __lowered_lex_200, $P5018
.annotate 'line', 414
    set fb_tmp_19, __lowered_lex_200
    repr_defined $I5005, fb_tmp_19
    unless $I5005 goto if543_else1628 
    set $P5019, fb_tmp_19[0]
    set $P5021, $P5019
    goto if543_end1629
  if543_else1628:
    null $P5020
    set $P5021, $P5020
  if543_end1629:
    unless_null $P5021, vivi_5441630
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_5441630:
    set fb_tmp_18, $P5021
    repr_defined $I5004, fb_tmp_18
    unless $I5004 goto if542_else1626 
    set $P5023, fb_tmp_18[0]
    set $P5025, $P5023
    goto if542_end1627
  if542_else1626:
    null $P5024
    set $P5025, $P5024
  if542_end1627:
    unless_null $P5025, vivi_5451631
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5025, $P5026
  vivi_5451631:
    defined $I5003, $P5025
    unless $I5003 goto if541_end1625 
    set fb_tmp_21, __lowered_lex_200
    repr_defined $I5007, fb_tmp_21
    unless $I5007 goto if547_else1634 
    set $P5027, fb_tmp_21[0]
    set $P5029, $P5027
    goto if547_end1635
  if547_else1634:
    null $P5028
    set $P5029, $P5028
  if547_end1635:
    unless_null $P5029, vivi_5481636
    nqp_get_sc_object $P5030, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5029, $P5030
  vivi_5481636:
    set fb_tmp_20, $P5029
    repr_defined $I5006, fb_tmp_20
    unless $I5006 goto if546_else1632 
    set $P5031, fb_tmp_20[0]
    set $P5033, $P5031
    goto if546_end1633
  if546_else1632:
    null $P5032
    set $P5033, $P5032
  if546_end1633:
    unless_null $P5033, vivi_5491637
    nqp_get_sc_object $P5034, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5033, $P5034
  vivi_5491637:
    set $S5001, $P5033
    set fb_tmp_22, __lowered_lex_202
    repr_defined $I5009, fb_tmp_22
    unless $I5009 goto if550_else1639 
    set fb_tmp_24, __lowered_lex_200
    repr_defined $I5011, fb_tmp_24
    unless $I5011 goto if552_else1643 
    set $P5037, fb_tmp_24[0]
    set $P5039, $P5037
    goto if552_end1644
  if552_else1643:
    null $P5038
    set $P5039, $P5038
  if552_end1644:
    unless_null $P5039, vivi_5531645
    nqp_get_sc_object $P5040, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5039, $P5040
  vivi_5531645:
    set fb_tmp_23, $P5039
    repr_defined $I5010, fb_tmp_23
    unless $I5010 goto if551_else1641 
    set $P5041, fb_tmp_23[0]
    set $P5043, $P5041
    goto if551_end1642
  if551_else1641:
    null $P5042
    set $P5043, $P5042
  if551_end1642:
    unless_null $P5043, vivi_5541646
    nqp_get_sc_object $P5044, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5043, $P5044
  vivi_5541646:
    set $S5002, $P5043
    set $P5036, fb_tmp_22[$S5002]
    set $P5046, $P5036
    goto if550_end1640
  if550_else1639:
    null $P5045
    set $P5046, $P5045
  if550_end1640:
    unless_null $P5046, vivi_5551647
    nqp_get_sc_object $P5047, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5046, $P5047
  vivi_5551647:
    set $P5035, $P5046
    defined $I5008, $P5035
    if $I5008, defor1638
    box $P5048, 0
    set $P5035, $P5048
  defor1638:
    set $N5002, $P5035
    set $N5003, 1
    add $N5001, $N5002, $N5003
    box $P5049, $N5001
    set __lowered_lex_202[$S5001], $P5049
  if541_end1625:
    set fb_tmp_26, __lowered_lex_200
    repr_defined $I5014, fb_tmp_26
    unless $I5014 goto if558_else1652 
    set $P5050, fb_tmp_26[1]
    set $P5052, $P5050
    goto if558_end1653
  if558_else1652:
    null $P5051
    set $P5052, $P5051
  if558_end1653:
    unless_null $P5052, vivi_5591654
    nqp_get_sc_object $P5053, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5052, $P5053
  vivi_5591654:
    set fb_tmp_25, $P5052
    repr_defined $I5013, fb_tmp_25
    unless $I5013 goto if557_else1650 
    set $P5054, fb_tmp_25[0]
    set $P5056, $P5054
    goto if557_end1651
  if557_else1650:
    null $P5055
    set $P5056, $P5055
  if557_end1651:
    unless_null $P5056, vivi_5601655
    nqp_get_sc_object $P5057, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5056, $P5057
  vivi_5601655:
    defined $I5012, $P5056
    box $P5082, $I5012
    set $P5081, $P5082
    unless $I5012 goto if556_end1649 
    set fb_tmp_28, __lowered_lex_200
    repr_defined $I5016, fb_tmp_28
    unless $I5016 goto if562_else1658 
    set $P5058, fb_tmp_28[1]
    set $P5060, $P5058
    goto if562_end1659
  if562_else1658:
    null $P5059
    set $P5060, $P5059
  if562_end1659:
    unless_null $P5060, vivi_5631660
    nqp_get_sc_object $P5061, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5060, $P5061
  vivi_5631660:
    set fb_tmp_27, $P5060
    repr_defined $I5015, fb_tmp_27
    unless $I5015 goto if561_else1656 
    set $P5062, fb_tmp_27[0]
    set $P5064, $P5062
    goto if561_end1657
  if561_else1656:
    null $P5063
    set $P5064, $P5063
  if561_end1657:
    unless_null $P5064, vivi_5641661
    nqp_get_sc_object $P5065, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5064, $P5065
  vivi_5641661:
    set $S5003, $P5064
    set fb_tmp_29, __lowered_lex_202
    repr_defined $I5018, fb_tmp_29
    unless $I5018 goto if565_else1663 
    set fb_tmp_31, __lowered_lex_200
    repr_defined $I5020, fb_tmp_31
    unless $I5020 goto if567_else1667 
    set $P5068, fb_tmp_31[1]
    set $P5070, $P5068
    goto if567_end1668
  if567_else1667:
    null $P5069
    set $P5070, $P5069
  if567_end1668:
    unless_null $P5070, vivi_5681669
    nqp_get_sc_object $P5071, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5070, $P5071
  vivi_5681669:
    set fb_tmp_30, $P5070
    repr_defined $I5019, fb_tmp_30
    unless $I5019 goto if566_else1665 
    set $P5072, fb_tmp_30[0]
    set $P5074, $P5072
    goto if566_end1666
  if566_else1665:
    null $P5073
    set $P5074, $P5073
  if566_end1666:
    unless_null $P5074, vivi_5691670
    nqp_get_sc_object $P5075, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5074, $P5075
  vivi_5691670:
    set $S5004, $P5074
    set $P5067, fb_tmp_29[$S5004]
    set $P5077, $P5067
    goto if565_end1664
  if565_else1663:
    null $P5076
    set $P5077, $P5076
  if565_end1664:
    unless_null $P5077, vivi_5701671
    nqp_get_sc_object $P5078, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5077, $P5078
  vivi_5701671:
    set $P5066, $P5077
    defined $I5017, $P5066
    if $I5017, defor1662
    box $P5079, 0
    set $P5066, $P5079
  defor1662:
    set $N5005, $P5066
    set $N5006, 1
    add $N5004, $N5005, $N5006
    box $P5080, $N5004
    set __lowered_lex_202[$S5003], $P5080
    set $P5081, $P5080
  if556_end1649:
    set $P5083, $P5081
    goto while540_test1619 
  while540_handlers1622:
    .get_results ($P5084)
    pop_upto_eh $P5084
    getattribute $P5085, $P5084, 'type'
    eq $P5085, .CONTROL_LOOP_NEXT, while540_test1619
    eq $P5085, .CONTROL_LOOP_REDO, while540_redo1621
  while540_done1623:
    pop_eh 
    iter $P5086, __lowered_lex_202
    set lowered_for_it__3, $P5086
    new $P5093, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5093, while571_handlers1675
    push_eh $P5093
  while571_test1672:
    set $P5092, lowered_for_it__3
    unless lowered_for_it__3 goto while571_done1676 
  while571_redo1674:
    shift $P5087, lowered_for_it__3
    set __lowered_lex_201, $P5087
.annotate 'line', 418
.annotate 'line', 419
    $P5088 = __lowered_lex_201."value"()
    set $N5007, $P5088
    set $N5008, 2
    islt $I5021, $N5007, $N5008
    unless $I5021 goto if572_end1678 
    die 0, .CONTROL_LOOP_NEXT
  if572_end1678:
.annotate 'line', 420
    nqp_decontainerize $P5089, _lex_param_0
    $P5090 = __lowered_lex_201."key"()
    set $S5007, $P5090
    concat $S5006, "Repeated character (", $S5007
    concat $S5005, $S5006, ") unexpectedly found in character class"
    $P5091 = $P5089."worry"($S5005)
    set $P5092, $P5091
    goto while571_test1672 
  while571_handlers1675:
    .get_results ($P5093)
    pop_upto_eh $P5093
    getattribute $P5094, $P5093, 'type'
    eq $P5094, .CONTROL_LOOP_NEXT, while571_test1672
    eq $P5094, .CONTROL_LOOP_REDO, while571_redo1674
  while571_done1676:
    pop_eh 
    nqp_rxmark rx502_bstack, rxquantr573_done1680, rx502_pos, 0
  rxquantr573_loop1679:
    ge rx502_pos, rx502_eos, rx502_fail1509
    is_cclass $I11, .CCLASS_WHITESPACE, rx502_tgt, rx502_pos
    unless $I11, rx502_fail1509
    inc rx502_pos
    nqp_rxpeek $I19, rx502_bstack, rxquantr573_done1680
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr573_done1680
    inc rx502_rep
    nqp_rxmark rx502_bstack, rxquantr573_done1680, rx502_pos, rx502_rep
    goto rxquantr573_loop1679
  rxquantr573_done1680:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail1509
    ord $I11, rx502_tgt, rx502_pos
    ne $I11, 93, rx502_fail1509
    add rx502_pos, 1
    goto alt512_end1532
  alt512_11681:
    nqp_rxmark rx502_bstack, rxcap574_fail1683, rx502_pos, 0
    nqp_rxmark rx502_bstack, rxquantr575_done1685, -1, 0
  rxquantr575_loop1684:
    ge rx502_pos, rx502_eos, rx502_fail1509
    is_cclass $I11, .CCLASS_WORD, rx502_tgt, rx502_pos
    unless $I11, rx502_fail1509
    inc rx502_pos
    nqp_rxpeek $I19, rx502_bstack, rxquantr575_done1685
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr575_done1685
    inc rx502_rep
    nqp_rxmark rx502_bstack, rxquantr575_done1685, rx502_pos, rx502_rep
    goto rxquantr575_loop1684
  rxquantr575_done1685:
    nqp_rxpeek $I19, rx502_bstack, rxcap574_fail1683
    inc $I19
    set $I11, rx502_bstack[$I19]
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx502_pos)
    rx502_cstack = rx502_cur."!cursor_capture"($P11, "name")
    goto rxcap574_done1682
  rxcap574_fail1683:
    goto rx502_fail1509
  rxcap574_done1682:
    goto alt512_end1532
  alt512_21686:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail1509
    ord $I11, rx502_tgt, rx502_pos
    ne $I11, 58, rx502_fail1509
    add rx502_pos, 1
    nqp_rxmark rx502_bstack, rxcap576_fail1688, rx502_pos, 0
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt577_01690
    nqp_push_label $P11, alt577_11691
    nqp_rxmark rx502_bstack, alt577_end1689, -1, 0
    rx502_cur."!alt"(rx502_pos, "alt_nfa__24_1431289914.83066", $P11)
    goto rx502_fail1509
  alt577_01690:
    add $I11, rx502_pos, 1
    gt $I11, rx502_eos, rx502_fail1509
    ord $I11, rx502_tgt, rx502_pos
    ne $I11, 33, rx502_fail1509
    add rx502_pos, 1
    goto alt577_end1689
  alt577_11691:
    goto alt577_end1689
  alt577_end1689:
    nqp_rxcommit rx502_bstack, alt577_end1689
    nqp_rxpeek $I19, rx502_bstack, rxcap576_fail1688
    inc $I19
    set $I11, rx502_bstack[$I19]
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx502_pos)
    rx502_cstack = rx502_cur."!cursor_capture"($P11, "invert")
    goto rxcap576_done1687
  rxcap576_fail1688:
    goto rx502_fail1509
  rxcap576_done1687:
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."identifier"()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
    nqp_rxmark rx502_bstack, rxsubrule579_pass1693, -1, 0
  rxsubrule579_pass1693:
    rx502_cstack = rx502_cur."!cursor_capture"($P11, "identifier")
    repr_get_attr_int rx502_pos, $P11, rx502_curclass, "$!pos"
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    store_lex unicode:"$\x{a2}", rx502_cur
    $P5095 = $P102."MATCH"()
    set $P103, $P5095
.annotate 'line', 425
    unless_null $P103, fallback1696
    nqp_get_sc_object $P5096, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P103, $P5096
  fallback1696:
    set fb_tmp_32, $P103
    repr_defined $I5022, fb_tmp_32
    unless $I5022 goto if580_else1694 
    set $P5097, fb_tmp_32["identifier"]
    set $P5099, $P5097
    goto if580_end1695
  if580_else1694:
    null $P5098
    set $P5099, $P5098
  if580_end1695:
    unless_null $P5099, vivi_5811697
    nqp_get_sc_object $P5100, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5099, $P5100
  vivi_5811697:
    $P5101 = $P5099."Str"()
    set $P101, $P5101
  alt582_01699:
    nqp_rxmark rx502_bstack, alt582_11706, rx502_pos, 0
    unless_null $P101, fallback1700
    nqp_get_sc_object $P5103, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5102, $P5103
    set fb_tmp_33, $P5102
    repr_defined $I5023, fb_tmp_33
    unless $I5023 goto if583_else1701 
    set $P5104, fb_tmp_33["$key"]
    set $P5106, $P5104
    goto if583_end1702
  if583_else1701:
    null $P5105
    set $P5106, $P5105
  if583_end1702:
    unless_null $P5106, vivi_5841703
    nqp_get_sc_object $P5107, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5106, $P5107
  vivi_5841703:
    unless_null $P5106, vivi_5851704
    die "Contextual $*key not found"
    box $P5108, "Contextual $*key not found"
    set $P5106, $P5108
  vivi_5851704:
    set $P101, $P5106
  fallback1700:
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."LANG"("MAIN", "coloncircumfix", $P101)
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
    nqp_rxmark rx502_bstack, rxsubrule586_pass1705, -1, 0
  rxsubrule586_pass1705:
    rx502_cstack = rx502_cur."!cursor_capture"($P11, "coloncircumfix")
    repr_get_attr_int rx502_pos, $P11, rx502_curclass, "$!pos"
    goto alt582_end1698
  alt582_11706:
  alt582_end1698:
    goto alt512_end1532
  alt512_end1532:
    nqp_rxcommit rx502_bstack, alt512_end1532
    nqp_rxmark rx502_bstack, rxquantr588_done1709, rx502_pos, 0
  rxquantr588_loop1708:
    repr_bind_attr_int rx502_cur, rx502_curclass, "$!pos", rx502_pos
    $P11 = rx502_cur."normspace"()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
    goto rxsubrule589_pass1710
  rxsubrule589_back1711:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx502_curclass, "$!pos"
    lt $I11, 0, rx502_fail1509
  rxsubrule589_pass1710:
    rx502_cstack = rx502_cur."!cursor_push_cstack"($P11)
    set_addr $I11, rxsubrule589_back1711
    push rx502_bstack, $I11
    push rx502_bstack, 0
    push rx502_bstack, rx502_pos
    elements $I11, rx502_cstack
    push rx502_bstack, $I11
    repr_get_attr_int rx502_pos, $P11, rx502_curclass, "$!pos"
    nqp_rxpeek $I19, rx502_bstack, rxquantr588_done1709
    inc $I19
    inc $I19
    set rx502_rep, rx502_bstack[$I19]
    nqp_rxcommit rx502_bstack, rxquantr588_done1709
    inc rx502_rep
  rxquantr588_done1709:
    rx502_cur."!cursor_pass"(rx502_pos, "cclass_elem")
    .return (rx502_cur)
  rx502_restart1508:
    repr_get_attr_obj rx502_cstack, rx502_cur, rx502_curclass, "$!cstack"
  rx502_fail1509:
    unless rx502_bstack, rx502_done1507
    pop $I19, rx502_bstack
    if_null rx502_cstack, rx502_cstack_done1512
    unless rx502_cstack, rx502_cstack_done1512
    dec $I19
    set $P11, rx502_cstack[$I19]
  rx502_cstack_done1512:
    pop rx502_rep, rx502_bstack
    pop rx502_pos, rx502_bstack
    pop $I19, rx502_bstack
    lt rx502_pos, -1, rx502_done1507
    lt rx502_pos, 0, rx502_fail1509
    eq $I19, 0, rx502_fail1509
    nqp_islist $I20, rx502_cstack
    unless $I20, rx502_jump1510
    elements $I18, rx502_bstack
    le $I18, 0, rx502_cut1511
    dec $I18
    set $I18, rx502_bstack[$I18]
  rx502_cut1511:
    assign rx502_cstack, $I18
  rx502_jump1510:
    jump $I19
  rx502_done1507:
    rx502_cur."!cursor_fail"()
    .return (rx502_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_135_1431289913.64791") :anon :lex :outer("cuid_128_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .const 'Sub' $P5005 = 'cuid_129_1431289913.64791' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_130_1431289913.64791' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_132_1431289913.64791' 
    capture_lex $P5005 
    .const 'Sub' $P5005 = 'cuid_134_1431289913.64791' 
    capture_lex $P5005 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx514_start
    .local string rx514_tgt
    .local int rx514_pos
    .local int rx514_off
    .local int rx514_eos
    .local int rx514_rep
    .local pmc rx514_cur
    .local pmc rx514_curclass
    .local pmc rx514_bstack
    .local pmc rx514_cstack
    rx514_start = self."!cursor_start_all"()
    set rx514_cur, rx514_start[0]
    set rx514_tgt, rx514_start[1]
    set rx514_pos, rx514_start[2]
    set rx514_curclass, rx514_start[3]
    set rx514_bstack, rx514_start[4]
    set $I19, rx514_start[5]
    store_lex unicode:"$\x{a2}", rx514_cur
    length rx514_eos, rx514_tgt
    eq $I19, 1, rx514_restart1538
    gt rx514_pos, rx514_eos, rx514_fail1539
  alt515_01544:
    nqp_rxmark rx514_bstack, alt515_11564, rx514_pos, 0
    .const 'Sub' $P5001 = 'cuid_129_1431289913.64791' 
    capture_lex $P5001
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."before"($P5001, 1)
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    ge $I11, 0, rx514_fail1539
    nqp_rxmark rx514_bstack, rxquantr517_done1553, rx514_pos, 0
  rxquantr517_loop1552:
    ge rx514_pos, rx514_eos, rx514_fail1539
    is_cclass $I11, .CCLASS_WHITESPACE, rx514_tgt, rx514_pos
    unless $I11, rx514_fail1539
    inc rx514_pos
    nqp_rxpeek $I19, rx514_bstack, rxquantr517_done1553
    inc $I19
    inc $I19
    set rx514_rep, rx514_bstack[$I19]
    nqp_rxcommit rx514_bstack, rxquantr517_done1553
    inc rx514_rep
    nqp_rxmark rx514_bstack, rxquantr517_done1553, rx514_pos, rx514_rep
    goto rxquantr517_loop1552
  rxquantr517_done1553:
    add $I11, rx514_pos, 1
    gt $I11, rx514_eos, rx514_fail1539
    ord $I11, rx514_tgt, rx514_pos
    ne $I11, 45, rx514_fail1539
    add rx514_pos, 1
    .const 'Sub' $P5002 = 'cuid_130_1431289913.64791' 
    capture_lex $P5002
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."before"($P5002)
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    ge $I11, 0, rx514_fail1539
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur."obs"("- as character range", ".. for range, for explicit - in character class, escape it or place it as the first or last thing")
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1539
    repr_get_attr_int rx514_pos, $P11, rx514_curclass, "$!pos"
    goto alt515_end1543
  alt515_11564:
    nqp_rxmark rx514_bstack, rxquantr521_done1566, rx514_pos, 0
  rxquantr521_loop1565:
    ge rx514_pos, rx514_eos, rx514_fail1539
    is_cclass $I11, .CCLASS_WHITESPACE, rx514_tgt, rx514_pos
    unless $I11, rx514_fail1539
    inc rx514_pos
    nqp_rxpeek $I19, rx514_bstack, rxquantr521_done1566
    inc $I19
    inc $I19
    set rx514_rep, rx514_bstack[$I19]
    nqp_rxcommit rx514_bstack, rxquantr521_done1566
    inc rx514_rep
    nqp_rxmark rx514_bstack, rxquantr521_done1566, rx514_pos, rx514_rep
    goto rxquantr521_loop1565
  rxquantr521_done1566:
    .const 'Sub' $P5003 = 'cuid_132_1431289913.64791' 
    capture_lex $P5003
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur.$P5003()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1539
    nqp_rxmark rx514_bstack, rxsubrule527_pass1586, -1, 0
  rxsubrule527_pass1586:
    rx514_cstack = rx514_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx514_pos, $P11, rx514_curclass, "$!pos"
    nqp_rxmark rx514_bstack, rxquantr528_done1588, rx514_pos, 0
  rxquantr528_loop1587:
    nqp_rxmark rx514_bstack, rxquantr529_done1590, rx514_pos, 0
  rxquantr529_loop1589:
    ge rx514_pos, rx514_eos, rx514_fail1539
    is_cclass $I11, .CCLASS_WHITESPACE, rx514_tgt, rx514_pos
    unless $I11, rx514_fail1539
    inc rx514_pos
    nqp_rxpeek $I19, rx514_bstack, rxquantr529_done1590
    inc $I19
    inc $I19
    set rx514_rep, rx514_bstack[$I19]
    nqp_rxcommit rx514_bstack, rxquantr529_done1590
    inc rx514_rep
    nqp_rxmark rx514_bstack, rxquantr529_done1590, rx514_pos, rx514_rep
    goto rxquantr529_loop1589
  rxquantr529_done1590:
    add $I11, rx514_pos, 2
    gt $I11, rx514_eos, rx514_fail1539
    nqp_string_equal_at $I11, rx514_tgt, ucs4:"..", rx514_pos
    ne $I11, 1, rx514_fail1539
    add rx514_pos, 2
    nqp_rxmark rx514_bstack, rxquantr530_done1592, rx514_pos, 0
  rxquantr530_loop1591:
    ge rx514_pos, rx514_eos, rx514_fail1539
    is_cclass $I11, .CCLASS_WHITESPACE, rx514_tgt, rx514_pos
    unless $I11, rx514_fail1539
    inc rx514_pos
    nqp_rxpeek $I19, rx514_bstack, rxquantr530_done1592
    inc $I19
    inc $I19
    set rx514_rep, rx514_bstack[$I19]
    nqp_rxcommit rx514_bstack, rxquantr530_done1592
    inc rx514_rep
    nqp_rxmark rx514_bstack, rxquantr530_done1592, rx514_pos, rx514_rep
    goto rxquantr530_loop1591
  rxquantr530_done1592:
    .const 'Sub' $P5004 = 'cuid_134_1431289913.64791' 
    capture_lex $P5004
    repr_bind_attr_int rx514_cur, rx514_curclass, "$!pos", rx514_pos
    $P11 = rx514_cur.$P5004()
    repr_get_attr_int $I11, $P11, rx514_curclass, "$!pos"
    lt $I11, 0, rx514_fail1539
    nqp_rxmark rx514_bstack, rxsubrule536_pass1612, -1, 0
  rxsubrule536_pass1612:
    rx514_cstack = rx514_cur."!cursor_capture"($P11, "1")
    repr_get_attr_int rx514_pos, $P11, rx514_curclass, "$!pos"
    nqp_rxpeek $I19, rx514_bstack, rxquantr528_done1588
    inc $I19
    inc $I19
    set rx514_rep, rx514_bstack[$I19]
    nqp_rxcommit rx514_bstack, rxquantr528_done1588
    inc rx514_rep
  rxquantr528_done1588:
  alt515_end1543:
    rx514_cur."!cursor_pass"(rx514_pos)
    .return (rx514_cur)
  rx514_restart1538:
    repr_get_attr_obj rx514_cstack, rx514_cur, rx514_curclass, "$!cstack"
  rx514_fail1539:
    unless rx514_bstack, rx514_done1537
    pop $I19, rx514_bstack
    if_null rx514_cstack, rx514_cstack_done1542
    unless rx514_cstack, rx514_cstack_done1542
    dec $I19
    set $P11, rx514_cstack[$I19]
  rx514_cstack_done1542:
    pop rx514_rep, rx514_bstack
    pop rx514_pos, rx514_bstack
    pop $I19, rx514_bstack
    lt rx514_pos, -1, rx514_done1537
    lt rx514_pos, 0, rx514_fail1539
    eq $I19, 0, rx514_fail1539
    nqp_islist $I20, rx514_cstack
    unless $I20, rx514_jump1540
    elements $I18, rx514_bstack
    le $I18, 0, rx514_cut1541
    dec $I18
    set $I18, rx514_bstack[$I18]
  rx514_cut1541:
    assign rx514_cstack, $I18
  rx514_jump1540:
    jump $I19
  rx514_done1537:
    rx514_cur."!cursor_fail"()
    .return (rx514_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_129_1431289913.64791") :anon :lex :outer("cuid_135_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx516_start
    .local string rx516_tgt
    .local int rx516_pos
    .local int rx516_off
    .local int rx516_eos
    .local int rx516_rep
    .local pmc rx516_cur
    .local pmc rx516_curclass
    .local pmc rx516_bstack
    .local pmc rx516_cstack
    rx516_start = self."!cursor_start_all"()
    set rx516_cur, rx516_start[0]
    set rx516_tgt, rx516_start[1]
    set rx516_pos, rx516_start[2]
    set rx516_curclass, rx516_start[3]
    set rx516_bstack, rx516_start[4]
    set $I19, rx516_start[5]
    store_lex unicode:"$\x{a2}", rx516_cur
    length rx516_eos, rx516_tgt
    eq $I19, 1, rx516_restart1547
    gt rx516_pos, rx516_eos, rx516_fail1548
    add $I11, rx516_pos, 1
    gt $I11, rx516_eos, rx516_fail1548
    ord $I11, rx516_tgt, rx516_pos
    ne $I11, 91, rx516_fail1548
    add rx516_pos, 1
    rx516_cur."!cursor_pass"(rx516_pos)
    .return (rx516_cur)
  rx516_restart1547:
    repr_get_attr_obj rx516_cstack, rx516_cur, rx516_curclass, "$!cstack"
  rx516_fail1548:
    unless rx516_bstack, rx516_done1546
    pop $I19, rx516_bstack
    if_null rx516_cstack, rx516_cstack_done1551
    unless rx516_cstack, rx516_cstack_done1551
    dec $I19
    set $P11, rx516_cstack[$I19]
  rx516_cstack_done1551:
    pop rx516_rep, rx516_bstack
    pop rx516_pos, rx516_bstack
    pop $I19, rx516_bstack
    lt rx516_pos, -1, rx516_done1546
    lt rx516_pos, 0, rx516_fail1548
    eq $I19, 0, rx516_fail1548
    nqp_islist $I20, rx516_cstack
    unless $I20, rx516_jump1549
    elements $I18, rx516_bstack
    le $I18, 0, rx516_cut1550
    dec $I18
    set $I18, rx516_bstack[$I18]
  rx516_cut1550:
    assign rx516_cstack, $I18
  rx516_jump1549:
    jump $I19
  rx516_done1546:
    rx516_cur."!cursor_fail"()
    .return (rx516_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_130_1431289913.64791") :anon :lex :outer("cuid_135_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx518_start
    .local string rx518_tgt
    .local int rx518_pos
    .local int rx518_off
    .local int rx518_eos
    .local int rx518_rep
    .local pmc rx518_cur
    .local pmc rx518_curclass
    .local pmc rx518_bstack
    .local pmc rx518_cstack
    rx518_start = self."!cursor_start_all"()
    set rx518_cur, rx518_start[0]
    set rx518_tgt, rx518_start[1]
    set rx518_pos, rx518_start[2]
    set rx518_curclass, rx518_start[3]
    set rx518_bstack, rx518_start[4]
    set $I19, rx518_start[5]
    store_lex unicode:"$\x{a2}", rx518_cur
    length rx518_eos, rx518_tgt
    eq $I19, 1, rx518_restart1556
    gt rx518_pos, rx518_eos, rx518_fail1557
    nqp_rxmark rx518_bstack, rxquantr519_done1562, rx518_pos, 0
  rxquantr519_loop1561:
    ge rx518_pos, rx518_eos, rx518_fail1557
    is_cclass $I11, .CCLASS_WHITESPACE, rx518_tgt, rx518_pos
    unless $I11, rx518_fail1557
    inc rx518_pos
    nqp_rxpeek $I19, rx518_bstack, rxquantr519_done1562
    inc $I19
    inc $I19
    set rx518_rep, rx518_bstack[$I19]
    nqp_rxcommit rx518_bstack, rxquantr519_done1562
    inc rx518_rep
    nqp_rxmark rx518_bstack, rxquantr519_done1562, rx518_pos, rx518_rep
    goto rxquantr519_loop1561
  rxquantr519_done1562:
    add $I11, rx518_pos, 1
    gt $I11, rx518_eos, rx518_fail1557
    ord $I11, rx518_tgt, rx518_pos
    ne $I11, 93, rx518_fail1557
    add rx518_pos, 1
    rx518_cur."!cursor_pass"(rx518_pos)
    .return (rx518_cur)
  rx518_restart1556:
    repr_get_attr_obj rx518_cstack, rx518_cur, rx518_curclass, "$!cstack"
  rx518_fail1557:
    unless rx518_bstack, rx518_done1555
    pop $I19, rx518_bstack
    if_null rx518_cstack, rx518_cstack_done1560
    unless rx518_cstack, rx518_cstack_done1560
    dec $I19
    set $P11, rx518_cstack[$I19]
  rx518_cstack_done1560:
    pop rx518_rep, rx518_bstack
    pop rx518_pos, rx518_bstack
    pop $I19, rx518_bstack
    lt rx518_pos, -1, rx518_done1555
    lt rx518_pos, 0, rx518_fail1557
    eq $I19, 0, rx518_fail1557
    nqp_islist $I20, rx518_cstack
    unless $I20, rx518_jump1558
    elements $I18, rx518_bstack
    le $I18, 0, rx518_cut1559
    dec $I18
    set $I18, rx518_bstack[$I18]
  rx518_cut1559:
    assign rx518_cstack, $I18
  rx518_jump1558:
    jump $I19
  rx518_done1555:
    rx518_cur."!cursor_fail"()
    .return (rx518_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_132_1431289913.64791") :anon :lex :outer("cuid_135_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .const 'Sub' $P5002 = 'cuid_131_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx522_start
    .local string rx522_tgt
    .local int rx522_pos
    .local int rx522_off
    .local int rx522_eos
    .local int rx522_rep
    .local pmc rx522_cur
    .local pmc rx522_curclass
    .local pmc rx522_bstack
    .local pmc rx522_cstack
    rx522_start = self."!cursor_start_all"()
    set rx522_cur, rx522_start[0]
    set rx522_tgt, rx522_start[1]
    set rx522_pos, rx522_start[2]
    set rx522_curclass, rx522_start[3]
    set rx522_bstack, rx522_start[4]
    set $I19, rx522_start[5]
    store_lex unicode:"$\x{a2}", rx522_cur
    length rx522_eos, rx522_tgt
    eq $I19, 1, rx522_restart1569
    gt rx522_pos, rx522_eos, rx522_fail1570
  alt523_01575:
    nqp_rxmark rx522_bstack, alt523_11577, rx522_pos, 0
    add $I11, rx522_pos, 1
    gt $I11, rx522_eos, rx522_fail1570
    ord $I11, rx522_tgt, rx522_pos
    ne $I11, 92, rx522_fail1570
    add rx522_pos, 1
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    $P11 = rx522_cur."cclass_backslash"()
    repr_get_attr_int $I11, $P11, rx522_curclass, "$!pos"
    lt $I11, 0, rx522_fail1570
    nqp_rxmark rx522_bstack, rxsubrule524_pass1576, -1, 0
  rxsubrule524_pass1576:
    rx522_cstack = rx522_cur."!cursor_capture"($P11, "cclass_backslash")
    repr_get_attr_int rx522_pos, $P11, rx522_curclass, "$!pos"
    goto alt523_end1574
  alt523_11577:
    .const 'Sub' $P5001 = 'cuid_131_1431289913.64791' 
    capture_lex $P5001
    repr_bind_attr_int rx522_cur, rx522_curclass, "$!pos", rx522_pos
    $P11 = rx522_cur.$P5001()
    repr_get_attr_int $I11, $P11, rx522_curclass, "$!pos"
    lt $I11, 0, rx522_fail1570
    nqp_rxmark rx522_bstack, rxsubrule526_pass1585, -1, 0
  rxsubrule526_pass1585:
    rx522_cstack = rx522_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx522_pos, $P11, rx522_curclass, "$!pos"
  alt523_end1574:
    rx522_cur."!cursor_pass"(rx522_pos)
    .return (rx522_cur)
  rx522_restart1569:
    repr_get_attr_obj rx522_cstack, rx522_cur, rx522_curclass, "$!cstack"
  rx522_fail1570:
    unless rx522_bstack, rx522_done1568
    pop $I19, rx522_bstack
    if_null rx522_cstack, rx522_cstack_done1573
    unless rx522_cstack, rx522_cstack_done1573
    dec $I19
    set $P11, rx522_cstack[$I19]
  rx522_cstack_done1573:
    pop rx522_rep, rx522_bstack
    pop rx522_pos, rx522_bstack
    pop $I19, rx522_bstack
    lt rx522_pos, -1, rx522_done1568
    lt rx522_pos, 0, rx522_fail1570
    eq $I19, 0, rx522_fail1570
    nqp_islist $I20, rx522_cstack
    unless $I20, rx522_jump1571
    elements $I18, rx522_bstack
    le $I18, 0, rx522_cut1572
    dec $I18
    set $I18, rx522_bstack[$I18]
  rx522_cut1572:
    assign rx522_cstack, $I18
  rx522_jump1571:
    jump $I19
  rx522_done1568:
    rx522_cur."!cursor_fail"()
    .return (rx522_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_131_1431289913.64791") :anon :lex :outer("cuid_132_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx525_start
    .local string rx525_tgt
    .local int rx525_pos
    .local int rx525_off
    .local int rx525_eos
    .local int rx525_rep
    .local pmc rx525_cur
    .local pmc rx525_curclass
    .local pmc rx525_bstack
    .local pmc rx525_cstack
    rx525_start = self."!cursor_start_all"()
    set rx525_cur, rx525_start[0]
    set rx525_tgt, rx525_start[1]
    set rx525_pos, rx525_start[2]
    set rx525_curclass, rx525_start[3]
    set rx525_bstack, rx525_start[4]
    set $I19, rx525_start[5]
    store_lex unicode:"$\x{a2}", rx525_cur
    length rx525_eos, rx525_tgt
    eq $I19, 1, rx525_restart1580
    gt rx525_pos, rx525_eos, rx525_fail1581
    ge rx525_pos, rx525_eos, rx525_fail1581
    substr $S11, rx525_tgt, rx525_pos, 1
    index $I11, ucs4:"]\\", $S11
    ge $I11, 0, rx525_fail1581
    inc rx525_pos
    rx525_cur."!cursor_pass"(rx525_pos)
    .return (rx525_cur)
  rx525_restart1580:
    repr_get_attr_obj rx525_cstack, rx525_cur, rx525_curclass, "$!cstack"
  rx525_fail1581:
    unless rx525_bstack, rx525_done1579
    pop $I19, rx525_bstack
    if_null rx525_cstack, rx525_cstack_done1584
    unless rx525_cstack, rx525_cstack_done1584
    dec $I19
    set $P11, rx525_cstack[$I19]
  rx525_cstack_done1584:
    pop rx525_rep, rx525_bstack
    pop rx525_pos, rx525_bstack
    pop $I19, rx525_bstack
    lt rx525_pos, -1, rx525_done1579
    lt rx525_pos, 0, rx525_fail1581
    eq $I19, 0, rx525_fail1581
    nqp_islist $I20, rx525_cstack
    unless $I20, rx525_jump1582
    elements $I18, rx525_bstack
    le $I18, 0, rx525_cut1583
    dec $I18
    set $I18, rx525_bstack[$I18]
  rx525_cut1583:
    assign rx525_cstack, $I18
  rx525_jump1582:
    jump $I19
  rx525_done1579:
    rx525_cur."!cursor_fail"()
    .return (rx525_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_134_1431289913.64791") :anon :lex :outer("cuid_135_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .const 'Sub' $P5002 = 'cuid_133_1431289913.64791' 
    capture_lex $P5002 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx531_start
    .local string rx531_tgt
    .local int rx531_pos
    .local int rx531_off
    .local int rx531_eos
    .local int rx531_rep
    .local pmc rx531_cur
    .local pmc rx531_curclass
    .local pmc rx531_bstack
    .local pmc rx531_cstack
    rx531_start = self."!cursor_start_all"()
    set rx531_cur, rx531_start[0]
    set rx531_tgt, rx531_start[1]
    set rx531_pos, rx531_start[2]
    set rx531_curclass, rx531_start[3]
    set rx531_bstack, rx531_start[4]
    set $I19, rx531_start[5]
    store_lex unicode:"$\x{a2}", rx531_cur
    length rx531_eos, rx531_tgt
    eq $I19, 1, rx531_restart1595
    gt rx531_pos, rx531_eos, rx531_fail1596
  alt532_01601:
    nqp_rxmark rx531_bstack, alt532_11603, rx531_pos, 0
    add $I11, rx531_pos, 1
    gt $I11, rx531_eos, rx531_fail1596
    ord $I11, rx531_tgt, rx531_pos
    ne $I11, 92, rx531_fail1596
    add rx531_pos, 1
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    $P11 = rx531_cur."cclass_backslash"()
    repr_get_attr_int $I11, $P11, rx531_curclass, "$!pos"
    lt $I11, 0, rx531_fail1596
    nqp_rxmark rx531_bstack, rxsubrule533_pass1602, -1, 0
  rxsubrule533_pass1602:
    rx531_cstack = rx531_cur."!cursor_capture"($P11, "cclass_backslash")
    repr_get_attr_int rx531_pos, $P11, rx531_curclass, "$!pos"
    goto alt532_end1600
  alt532_11603:
    .const 'Sub' $P5001 = 'cuid_133_1431289913.64791' 
    capture_lex $P5001
    repr_bind_attr_int rx531_cur, rx531_curclass, "$!pos", rx531_pos
    $P11 = rx531_cur.$P5001()
    repr_get_attr_int $I11, $P11, rx531_curclass, "$!pos"
    lt $I11, 0, rx531_fail1596
    nqp_rxmark rx531_bstack, rxsubrule535_pass1611, -1, 0
  rxsubrule535_pass1611:
    rx531_cstack = rx531_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx531_pos, $P11, rx531_curclass, "$!pos"
  alt532_end1600:
    rx531_cur."!cursor_pass"(rx531_pos)
    .return (rx531_cur)
  rx531_restart1595:
    repr_get_attr_obj rx531_cstack, rx531_cur, rx531_curclass, "$!cstack"
  rx531_fail1596:
    unless rx531_bstack, rx531_done1594
    pop $I19, rx531_bstack
    if_null rx531_cstack, rx531_cstack_done1599
    unless rx531_cstack, rx531_cstack_done1599
    dec $I19
    set $P11, rx531_cstack[$I19]
  rx531_cstack_done1599:
    pop rx531_rep, rx531_bstack
    pop rx531_pos, rx531_bstack
    pop $I19, rx531_bstack
    lt rx531_pos, -1, rx531_done1594
    lt rx531_pos, 0, rx531_fail1596
    eq $I19, 0, rx531_fail1596
    nqp_islist $I20, rx531_cstack
    unless $I20, rx531_jump1597
    elements $I18, rx531_bstack
    le $I18, 0, rx531_cut1598
    dec $I18
    set $I18, rx531_bstack[$I18]
  rx531_cut1598:
    assign rx531_cstack, $I18
  rx531_jump1597:
    jump $I19
  rx531_done1594:
    rx531_cur."!cursor_fail"()
    .return (rx531_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_133_1431289913.64791") :anon :lex :outer("cuid_134_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx534_start
    .local string rx534_tgt
    .local int rx534_pos
    .local int rx534_off
    .local int rx534_eos
    .local int rx534_rep
    .local pmc rx534_cur
    .local pmc rx534_curclass
    .local pmc rx534_bstack
    .local pmc rx534_cstack
    rx534_start = self."!cursor_start_all"()
    set rx534_cur, rx534_start[0]
    set rx534_tgt, rx534_start[1]
    set rx534_pos, rx534_start[2]
    set rx534_curclass, rx534_start[3]
    set rx534_bstack, rx534_start[4]
    set $I19, rx534_start[5]
    store_lex unicode:"$\x{a2}", rx534_cur
    length rx534_eos, rx534_tgt
    eq $I19, 1, rx534_restart1606
    gt rx534_pos, rx534_eos, rx534_fail1607
    ge rx534_pos, rx534_eos, rx534_fail1607
    substr $S11, rx534_tgt, rx534_pos, 1
    index $I11, ucs4:"]\\", $S11
    ge $I11, 0, rx534_fail1607
    inc rx534_pos
    rx534_cur."!cursor_pass"(rx534_pos)
    .return (rx534_cur)
  rx534_restart1606:
    repr_get_attr_obj rx534_cstack, rx534_cur, rx534_curclass, "$!cstack"
  rx534_fail1607:
    unless rx534_bstack, rx534_done1605
    pop $I19, rx534_bstack
    if_null rx534_cstack, rx534_cstack_done1610
    unless rx534_cstack, rx534_cstack_done1610
    dec $I19
    set $P11, rx534_cstack[$I19]
  rx534_cstack_done1610:
    pop rx534_rep, rx534_bstack
    pop rx534_pos, rx534_bstack
    pop $I19, rx534_bstack
    lt rx534_pos, -1, rx534_done1605
    lt rx534_pos, 0, rx534_fail1607
    eq $I19, 0, rx534_fail1607
    nqp_islist $I20, rx534_cstack
    unless $I20, rx534_jump1608
    elements $I18, rx534_bstack
    le $I18, 0, rx534_cut1609
    dec $I18
    set $I18, rx534_bstack[$I18]
  rx534_cut1609:
    assign rx534_cstack, $I18
  rx534_jump1608:
    jump $I19
  rx534_done1605:
    rx534_cur."!cursor_fail"()
    .return (rx534_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_internal" :subid("cuid_136_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 434
    .param pmc __lowered_lex_204 
    .const 'Sub' $P5051 = 'cuid_137_1431289913.64791' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_139_1431289913.64791' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_138_1431289913.64791' 
    capture_lex $P5051 
    .const 'Sub' $P5051 = 'cuid_140_1431289913.64791' 
    capture_lex $P5051 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_205 
    .local pmc fb_tmp_34 
    .local pmc __lowered_lex_203 
    .local pmc fb_tmp_35 
    .local pmc fb_tmp_36 
    .local pmc fb_tmp_37 
    .local pmc fb_tmp_38 
    .local pmc fb_tmp_39 
    .local pmc pkg_viv_tmp_5 
    .local pmc fb_tmp_40 
    .local pmc fb_tmp_41 
    set self, __lowered_lex_204
    .const 'Sub' $P5001 = 'cuid_137_1431289913.64791' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_139_1431289913.64791' 
    capture_lex $P5002
    .local pmc rx590_start
    .local string rx590_tgt
    .local int rx590_pos
    .local int rx590_off
    .local int rx590_eos
    .local int rx590_rep
    .local pmc rx590_cur
    .local pmc rx590_curclass
    .local pmc rx590_bstack
    .local pmc rx590_cstack
    rx590_start = self."!cursor_start_all"()
    set rx590_cur, rx590_start[0]
    set rx590_tgt, rx590_start[1]
    set rx590_pos, rx590_start[2]
    set rx590_curclass, rx590_start[3]
    set rx590_bstack, rx590_start[4]
    set $I19, rx590_start[5]
    store_lex unicode:"$\x{a2}", rx590_cur
    length rx590_eos, rx590_tgt
    eq $I19, 1, rx590_restart1714
    gt rx590_pos, rx590_eos, rx590_fail1715
    repr_get_attr_int $I11, self, rx590_curclass, "$!from"
    ne $I11, -1, rxscan591_done1721
    goto rxscan591_scan1720
  rxscan591_loop1719:
    inc rx590_pos
    index rx590_pos, rx590_tgt, ucs4:":", rx590_pos
    eq rx590_pos, -1, rx590_fail1715
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!from", rx590_pos
  rxscan591_scan1720:
    nqp_rxmark rx590_bstack, rxscan591_loop1719, rx590_pos, 0
  rxscan591_done1721:
    add $I11, rx590_pos, 1
    gt $I11, rx590_eos, rx590_fail1715
    ord $I11, rx590_tgt, rx590_pos
    ne $I11, 58, rx590_fail1715
    add rx590_pos, 1
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt592_01723
    nqp_push_label $P11, alt592_11737
    nqp_push_label $P11, alt592_21753
    nqp_rxmark rx590_bstack, alt592_end1722, -1, 0
    rx590_cur."!alt"(rx590_pos, "alt_nfa__27_1431289914.87762", $P11)
    goto rx590_fail1715
  alt592_01723:
    add $I11, rx590_pos, 1
    gt $I11, rx590_eos, rx590_fail1715
    ord $I11, rx590_tgt, rx590_pos
    ne $I11, 33, rx590_fail1715
    nqp_rxmark rx590_bstack, rxquantr593_done1725, -1, 0
  rxquantr593_loop1724:
    .const 'Sub' $P5003 = 'cuid_138_1431289913.64791' 
    capture_lex $P5003
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur.$P5003()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    goto rxsubrule595_pass1733
  rxsubrule595_back1734:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
  rxsubrule595_pass1733:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "n")
    set_addr $I11, rxsubrule595_back1734
    push rx590_bstack, $I11
    push rx590_bstack, 0
    push rx590_bstack, rx590_pos
    elements $I11, rx590_cstack
    push rx590_bstack, $I11
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    nqp_rxpeek $I19, rx590_bstack, rxquantr593_done1725
    inc $I19
    inc $I19
    set rx590_rep, rx590_bstack[$I19]
    nqp_rxcommit rx590_bstack, rxquantr593_done1725
    inc rx590_rep
  rxquantr593_done1725:
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."mod_ident"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    nqp_rxmark rx590_bstack, rxsubrule596_pass1735, -1, 0
  rxsubrule596_pass1735:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "mod_ident")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    le rx590_pos, 0, rx590_fail1715
    is_cclass $I11, .CCLASS_WORD, rx590_tgt, rx590_pos
    if $I11, rx590_fail1715
    sub $I11, rx590_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx590_tgt, $I11
    unless $I11, rx590_fail1715
    goto alt592_end1722
  alt592_11737:
    ge rx590_pos, rx590_eos, rx590_fail1715
    is_cclass $I11, .CCLASS_NUMERIC, rx590_tgt, rx590_pos
    unless $I11, rx590_fail1715
    nqp_rxmark rx590_bstack, rxquantr598_done1739, -1, 0
  rxquantr598_loop1738:
    .const 'Sub' $P5004 = 'cuid_140_1431289913.64791' 
    capture_lex $P5004
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur.$P5004()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    goto rxsubrule601_pass1749
  rxsubrule601_back1750:
    $P11 = $P11."!cursor_next"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
  rxsubrule601_pass1749:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "n")
    set_addr $I11, rxsubrule601_back1750
    push rx590_bstack, $I11
    push rx590_bstack, 0
    push rx590_bstack, rx590_pos
    elements $I11, rx590_cstack
    push rx590_bstack, $I11
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    nqp_rxpeek $I19, rx590_bstack, rxquantr598_done1739
    inc $I19
    inc $I19
    set rx590_rep, rx590_bstack[$I19]
    nqp_rxcommit rx590_bstack, rxquantr598_done1739
    inc rx590_rep
  rxquantr598_done1739:
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."mod_ident"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    nqp_rxmark rx590_bstack, rxsubrule602_pass1751, -1, 0
  rxsubrule602_pass1751:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "mod_ident")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    le rx590_pos, 0, rx590_fail1715
    is_cclass $I11, .CCLASS_WORD, rx590_tgt, rx590_pos
    if $I11, rx590_fail1715
    sub $I11, rx590_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx590_tgt, $I11
    unless $I11, rx590_fail1715
    goto alt592_end1722
  alt592_21753:
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."mod_ident"()
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    nqp_rxmark rx590_bstack, rxsubrule604_pass1754, -1, 0
  rxsubrule604_pass1754:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "mod_ident")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    nqp_rxmark rx590_bstack, rxquantr605_done1756, rx590_pos, 0
  rxquantr605_loop1755:
    add $I11, rx590_pos, 1
    gt $I11, rx590_eos, rx590_fail1715
    ord $I11, rx590_tgt, rx590_pos
    ne $I11, 40, rx590_fail1715
    add rx590_pos, 1
    new $P11, "ResizableIntegerArray"
    assign $P11, 3
    assign $P11, 0
    nqp_push_label $P11, alt606_01758
    nqp_push_label $P11, alt606_11763
    nqp_push_label $P11, alt606_21765
    nqp_rxmark rx590_bstack, alt606_end1757, -1, 0
    rx590_cur."!alt"(rx590_pos, "alt_nfa__26_1431289914.87711", $P11)
    goto rx590_fail1715
  alt606_01758:
    nqp_rxmark rx590_bstack, rxcap607_fail1760, rx590_pos, 0
    nqp_rxmark rx590_bstack, rxquantr608_done1762, -1, 0
  rxquantr608_loop1761:
    ge rx590_pos, rx590_eos, rx590_fail1715
    is_cclass $I11, .CCLASS_NUMERIC, rx590_tgt, rx590_pos
    unless $I11, rx590_fail1715
    inc rx590_pos
    nqp_rxpeek $I19, rx590_bstack, rxquantr608_done1762
    inc $I19
    inc $I19
    set rx590_rep, rx590_bstack[$I19]
    nqp_rxcommit rx590_bstack, rxquantr608_done1762
    inc rx590_rep
    nqp_rxmark rx590_bstack, rxquantr608_done1762, rx590_pos, rx590_rep
    goto rxquantr608_loop1761
  rxquantr608_done1762:
    nqp_rxpeek $I19, rx590_bstack, rxcap607_fail1760
    inc $I19
    set $I11, rx590_bstack[$I19]
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx590_pos)
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "n")
    goto rxcap607_done1759
  rxcap607_fail1760:
    goto rx590_fail1715
  rxcap607_done1759:
    goto alt606_end1757
  alt606_11763:
    ge rx590_pos, rx590_eos, rx590_fail1715
    substr $S11, rx590_tgt, rx590_pos, 1
    index $I11, ucs4:"'", $S11
    lt $I11, 0, rx590_fail1715
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."quote_EXPR"(":q")
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    nqp_rxmark rx590_bstack, rxsubrule609_pass1764, -1, 0
  rxsubrule609_pass1764:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    goto alt606_end1757
  alt606_21765:
    ge rx590_pos, rx590_eos, rx590_fail1715
    substr $S11, rx590_tgt, rx590_pos, 1
    index $I11, ucs4:"\"", $S11
    lt $I11, 0, rx590_fail1715
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    $P11 = rx590_cur."quote_EXPR"(":qq")
    repr_get_attr_int $I11, $P11, rx590_curclass, "$!pos"
    lt $I11, 0, rx590_fail1715
    nqp_rxmark rx590_bstack, rxsubrule610_pass1766, -1, 0
  rxsubrule610_pass1766:
    rx590_cstack = rx590_cur."!cursor_capture"($P11, "quote_EXPR")
    repr_get_attr_int rx590_pos, $P11, rx590_curclass, "$!pos"
    goto alt606_end1757
  alt606_end1757:
    nqp_rxcommit rx590_bstack, alt606_end1757
    add $I11, rx590_pos, 1
    gt $I11, rx590_eos, rx590_fail1715
    ord $I11, rx590_tgt, rx590_pos
    ne $I11, 41, rx590_fail1715
    add rx590_pos, 1
    nqp_rxpeek $I19, rx590_bstack, rxquantr605_done1756
    inc $I19
    inc $I19
    set rx590_rep, rx590_bstack[$I19]
    nqp_rxcommit rx590_bstack, rxquantr605_done1756
    inc rx590_rep
  rxquantr605_done1756:
    goto alt592_end1722
  alt592_end1722:
    nqp_rxcommit rx590_bstack, alt592_end1722
    repr_bind_attr_int rx590_cur, rx590_curclass, "$!pos", rx590_pos
    store_lex unicode:"$\x{a2}", rx590_cur
    $P5005 = $P101."MATCH"()
    set __lowered_lex_205, $P5005
.annotate 'line', 450
    unless_null __lowered_lex_205, fallback1771
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_205, $P5006
  fallback1771:
    set fb_tmp_34, __lowered_lex_205
    repr_defined $I5002, fb_tmp_34
    unless $I5002 goto if612_else1769 
    set $P5007, fb_tmp_34["quote_EXPR"]
    set $P5009, $P5007
    goto if612_end1770
  if612_else1769:
    null $P5008
    set $P5009, $P5008
  if612_end1770:
    unless_null $P5009, vivi_6131772
    nqp_get_sc_object $P5010, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5009, $P5010
  vivi_6131772:
    isfalse $I5001, $P5009
    box $P5050, $I5001
    set $P5049, $P5050
    unless $I5001 goto if611_end1768 
.annotate 'line', 451
    unless_null __lowered_lex_205, fallback1779
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_205, $P5011
  fallback1779:
    set fb_tmp_36, __lowered_lex_205
    repr_defined $I5005, fb_tmp_36
    unless $I5005 goto if616_else1777 
    set $P5012, fb_tmp_36["n"]
    set $P5014, $P5012
    goto if616_end1778
  if616_else1777:
    null $P5013
    set $P5014, $P5013
  if616_end1778:
    unless_null $P5014, vivi_6171780
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_6171780:
    set fb_tmp_35, $P5014
    repr_defined $I5004, fb_tmp_35
    unless $I5004 goto if615_else1775 
    set $P5016, fb_tmp_35[0]
    set $P5018, $P5016
    goto if615_end1776
  if615_else1775:
    null $P5017
    set $P5018, $P5017
  if615_end1776:
    unless_null $P5018, vivi_6181781
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5018, $P5019
  vivi_6181781:
    set $S5001, $P5018
    isgt $I5003, $S5001, ""
    unless $I5003 goto if614_else1773 
    unless_null __lowered_lex_205, fallback1786
    nqp_get_sc_object $P5020, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_205, $P5020
  fallback1786:
    set fb_tmp_38, __lowered_lex_205
    repr_defined $I5007, fb_tmp_38
    unless $I5007 goto if620_else1784 
    set $P5021, fb_tmp_38["n"]
    set $P5023, $P5021
    goto if620_end1785
  if620_else1784:
    null $P5022
    set $P5023, $P5022
  if620_end1785:
    unless_null $P5023, vivi_6211787
    nqp_get_sc_object $P5024, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5023, $P5024
  vivi_6211787:
    set fb_tmp_37, $P5023
    repr_defined $I5006, fb_tmp_37
    unless $I5006 goto if619_else1782 
    set $P5025, fb_tmp_37[0]
    set $P5027, $P5025
    goto if619_end1783
  if619_else1782:
    null $P5026
    set $P5027, $P5026
  if619_end1783:
    unless_null $P5027, vivi_6221788
    nqp_get_sc_object $P5028, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5027, $P5028
  vivi_6221788:
    set $N5001, $P5027
    box $P5030, $N5001
    set $P5029, $P5030
    goto if614_end1774
  if614_else1773:
    box $P5031, 1
    set $P5029, $P5031
  if614_end1774:
    set __lowered_lex_203, $P5029
    find_dynamic_lex $P5032, "%*RX"
    unless_null $P5032, fallback1789
    nqp_get_sc_object $P5034, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5033, $P5034
    set pkg_viv_tmp_5, $P5033
    set fb_tmp_39, pkg_viv_tmp_5
    repr_defined $I5008, fb_tmp_39
    unless $I5008 goto if623_else1790 
    set $P5035, fb_tmp_39["%RX"]
    set $P5037, $P5035
    goto if623_end1791
  if623_else1790:
    null $P5036
    set $P5037, $P5036
  if623_end1791:
    unless_null $P5037, vivi_6241792
    new $P5038, 'Hash'
    set pkg_viv_tmp_5["%RX"], $P5038
    set $P5037, $P5038
  vivi_6241792:
    unless_null $P5037, vivi_6251793
    die "Contextual %*RX not found"
    box $P5039, "Contextual %*RX not found"
    set $P5037, $P5039
  vivi_6251793:
    set $P5032, $P5037
  fallback1789:
    unless_null __lowered_lex_205, fallback1798
    nqp_get_sc_object $P5040, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_205, $P5040
  fallback1798:
    set fb_tmp_41, __lowered_lex_205
    repr_defined $I5010, fb_tmp_41
    unless $I5010 goto if627_else1796 
    set $P5041, fb_tmp_41["mod_ident"]
    set $P5043, $P5041
    goto if627_end1797
  if627_else1796:
    null $P5042
    set $P5043, $P5042
  if627_end1797:
    unless_null $P5043, vivi_6281799
    nqp_get_sc_object $P5044, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5043, $P5044
  vivi_6281799:
    set fb_tmp_40, $P5043
    repr_defined $I5009, fb_tmp_40
    unless $I5009 goto if626_else1794 
    set $P5045, fb_tmp_40["sym"]
    set $P5047, $P5045
    goto if626_end1795
  if626_else1794:
    null $P5046
    set $P5047, $P5046
  if626_end1795:
    unless_null $P5047, vivi_6291800
    nqp_get_sc_object $P5048, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5047, $P5048
  vivi_6291800:
    set $S5002, $P5047
    set $P5032[$S5002], __lowered_lex_203
    set $P5049, __lowered_lex_203
  if611_end1768:
    rx590_cur."!cursor_pass"(rx590_pos, "mod_internal")
    .return (rx590_cur)
  rx590_restart1714:
    repr_get_attr_obj rx590_cstack, rx590_cur, rx590_curclass, "$!cstack"
  rx590_fail1715:
    unless rx590_bstack, rx590_done1713
    pop $I19, rx590_bstack
    if_null rx590_cstack, rx590_cstack_done1718
    unless rx590_cstack, rx590_cstack_done1718
    dec $I19
    set $P11, rx590_cstack[$I19]
  rx590_cstack_done1718:
    pop rx590_rep, rx590_bstack
    pop rx590_pos, rx590_bstack
    pop $I19, rx590_bstack
    lt rx590_pos, -1, rx590_done1713
    lt rx590_pos, 0, rx590_fail1715
    eq $I19, 0, rx590_fail1715
    nqp_islist $I20, rx590_cstack
    unless $I20, rx590_jump1716
    elements $I18, rx590_bstack
    le $I18, 0, rx590_cut1717
    dec $I18
    set $I18, rx590_bstack[$I18]
  rx590_cut1717:
    assign rx590_cstack, $I18
  rx590_jump1716:
    jump $I19
  rx590_done1713:
    rx590_cur."!cursor_fail"()
    .return (rx590_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_137_1431289913.64791") :anon :lex :outer("cuid_136_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_139_1431289913.64791") :anon :lex :outer("cuid_136_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    die "INTERNAL ERROR: Execution of block eliminated by optimizer"
    .return ("INTERNAL ERROR: Execution of block eliminated by optimizer") 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_138_1431289913.64791") :anon :lex :outer("cuid_136_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx594_start
    .local string rx594_tgt
    .local int rx594_pos
    .local int rx594_off
    .local int rx594_eos
    .local int rx594_rep
    .local pmc rx594_cur
    .local pmc rx594_curclass
    .local pmc rx594_bstack
    .local pmc rx594_cstack
    rx594_start = self."!cursor_start_all"()
    set rx594_cur, rx594_start[0]
    set rx594_tgt, rx594_start[1]
    set rx594_pos, rx594_start[2]
    set rx594_curclass, rx594_start[3]
    set rx594_bstack, rx594_start[4]
    set $I19, rx594_start[5]
    store_lex unicode:"$\x{a2}", rx594_cur
    length rx594_eos, rx594_tgt
    eq $I19, 1, rx594_restart1728
    gt rx594_pos, rx594_eos, rx594_fail1729
    add $I11, rx594_pos, 1
    gt $I11, rx594_eos, rx594_fail1729
    ord $I11, rx594_tgt, rx594_pos
    ne $I11, 33, rx594_fail1729
    add rx594_pos, 1
    rx594_cur."!cursor_pass"(rx594_pos)
    .return (rx594_cur)
  rx594_restart1728:
    repr_get_attr_obj rx594_cstack, rx594_cur, rx594_curclass, "$!cstack"
  rx594_fail1729:
    unless rx594_bstack, rx594_done1727
    pop $I19, rx594_bstack
    if_null rx594_cstack, rx594_cstack_done1732
    unless rx594_cstack, rx594_cstack_done1732
    dec $I19
    set $P11, rx594_cstack[$I19]
  rx594_cstack_done1732:
    pop rx594_rep, rx594_bstack
    pop rx594_pos, rx594_bstack
    pop $I19, rx594_bstack
    lt rx594_pos, -1, rx594_done1727
    lt rx594_pos, 0, rx594_fail1729
    eq $I19, 0, rx594_fail1729
    nqp_islist $I20, rx594_cstack
    unless $I20, rx594_jump1730
    elements $I18, rx594_bstack
    le $I18, 0, rx594_cut1731
    dec $I18
    set $I18, rx594_bstack[$I18]
  rx594_cut1731:
    assign rx594_cstack, $I18
  rx594_jump1730:
    jump $I19
  rx594_done1727:
    rx594_cur."!cursor_fail"()
    .return (rx594_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_140_1431289913.64791") :anon :lex :outer("cuid_136_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx599_start
    .local string rx599_tgt
    .local int rx599_pos
    .local int rx599_off
    .local int rx599_eos
    .local int rx599_rep
    .local pmc rx599_cur
    .local pmc rx599_curclass
    .local pmc rx599_bstack
    .local pmc rx599_cstack
    rx599_start = self."!cursor_start_all"()
    set rx599_cur, rx599_start[0]
    set rx599_tgt, rx599_start[1]
    set rx599_pos, rx599_start[2]
    set rx599_curclass, rx599_start[3]
    set rx599_bstack, rx599_start[4]
    set $I19, rx599_start[5]
    store_lex unicode:"$\x{a2}", rx599_cur
    length rx599_eos, rx599_tgt
    eq $I19, 1, rx599_restart1742
    gt rx599_pos, rx599_eos, rx599_fail1743
    nqp_rxmark rx599_bstack, rxquantr600_done1748, -1, 0
  rxquantr600_loop1747:
    ge rx599_pos, rx599_eos, rx599_fail1743
    is_cclass $I11, .CCLASS_NUMERIC, rx599_tgt, rx599_pos
    unless $I11, rx599_fail1743
    inc rx599_pos
    nqp_rxpeek $I19, rx599_bstack, rxquantr600_done1748
    inc $I19
    inc $I19
    set rx599_rep, rx599_bstack[$I19]
    nqp_rxcommit rx599_bstack, rxquantr600_done1748
    inc rx599_rep
    nqp_rxmark rx599_bstack, rxquantr600_done1748, rx599_pos, rx599_rep
    goto rxquantr600_loop1747
  rxquantr600_done1748:
    rx599_cur."!cursor_pass"(rx599_pos)
    .return (rx599_cur)
  rx599_restart1742:
    repr_get_attr_obj rx599_cstack, rx599_cur, rx599_curclass, "$!cstack"
  rx599_fail1743:
    unless rx599_bstack, rx599_done1741
    pop $I19, rx599_bstack
    if_null rx599_cstack, rx599_cstack_done1746
    unless rx599_cstack, rx599_cstack_done1746
    dec $I19
    set $P11, rx599_cstack[$I19]
  rx599_cstack_done1746:
    pop rx599_rep, rx599_bstack
    pop rx599_pos, rx599_bstack
    pop $I19, rx599_bstack
    lt rx599_pos, -1, rx599_done1741
    lt rx599_pos, 0, rx599_fail1743
    eq $I19, 0, rx599_fail1743
    nqp_islist $I20, rx599_cstack
    unless $I20, rx599_jump1744
    elements $I18, rx599_bstack
    le $I18, 0, rx599_cut1745
    dec $I18
    set $I18, rx599_bstack[$I18]
  rx599_cut1745:
    assign rx599_cstack, $I18
  rx599_jump1744:
    jump $I19
  rx599_done1741:
    rx599_cur."!cursor_fail"()
    .return (rx599_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident" :subid("cuid_141_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 458
    .param pmc self 
    $P5001 = self."!protoregex"("mod_ident")
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident:sym<ignorecase>" :subid("cuid_142_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 459
    .param pmc __lowered_lex_206 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_207 
    set self, __lowered_lex_206
    .local pmc rx630_start
    .local string rx630_tgt
    .local int rx630_pos
    .local int rx630_off
    .local int rx630_eos
    .local int rx630_rep
    .local pmc rx630_cur
    .local pmc rx630_curclass
    .local pmc rx630_bstack
    .local pmc rx630_cstack
    rx630_start = self."!cursor_start_all"()
    set rx630_cur, rx630_start[0]
    set rx630_tgt, rx630_start[1]
    set rx630_pos, rx630_start[2]
    set rx630_curclass, rx630_start[3]
    set rx630_bstack, rx630_start[4]
    set $I19, rx630_start[5]
    store_lex unicode:"$\x{a2}", rx630_cur
    length rx630_eos, rx630_tgt
    eq $I19, 1, rx630_restart1803
    gt rx630_pos, rx630_eos, rx630_fail1804
    repr_get_attr_int $I11, self, rx630_curclass, "$!from"
    ne $I11, -1, rxscan631_done1810
    goto rxscan631_scan1809
  rxscan631_loop1808:
    inc rx630_pos
    gt rx630_pos, rx630_eos, rx630_fail1804
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!from", rx630_pos
  rxscan631_scan1809:
    nqp_rxmark rx630_bstack, rxscan631_loop1808, rx630_pos, 0
  rxscan631_done1810:
    nqp_rxmark rx630_bstack, rxcap632_fail1812, rx630_pos, 0
    add $I11, rx630_pos, 1
    gt $I11, rx630_eos, rx630_fail1804
    ord $I11, rx630_tgt, rx630_pos
    ne $I11, 105, rx630_fail1804
    add rx630_pos, 1
    nqp_rxpeek $I19, rx630_bstack, rxcap632_fail1812
    inc $I19
    set $I11, rx630_bstack[$I19]
    repr_bind_attr_int rx630_cur, rx630_curclass, "$!pos", rx630_pos
    $P11 = rx630_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx630_pos)
    rx630_cstack = rx630_cur."!cursor_capture"($P11, "sym")
    goto rxcap632_done1811
  rxcap632_fail1812:
    goto rx630_fail1804
  rxcap632_done1811:
    nqp_rxmark rx630_bstack, rxquantr633_done1814, rx630_pos, 0
  rxquantr633_loop1813:
    add $I11, rx630_pos, 9
    gt $I11, rx630_eos, rx630_fail1804
    nqp_string_equal_at $I11, rx630_tgt, ucs4:"gnorecase", rx630_pos
    ne $I11, 1, rx630_fail1804
    add rx630_pos, 9
    nqp_rxpeek $I19, rx630_bstack, rxquantr633_done1814
    inc $I19
    inc $I19
    set rx630_rep, rx630_bstack[$I19]
    nqp_rxcommit rx630_bstack, rxquantr633_done1814
    inc rx630_rep
  rxquantr633_done1814:
    le rx630_pos, 0, rx630_fail1804
    is_cclass $I11, .CCLASS_WORD, rx630_tgt, rx630_pos
    if $I11, rx630_fail1804
    sub $I11, rx630_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx630_tgt, $I11
    unless $I11, rx630_fail1804
    rx630_cur."!cursor_pass"(rx630_pos, "mod_ident:sym<ignorecase>")
    .return (rx630_cur)
  rx630_restart1803:
    repr_get_attr_obj rx630_cstack, rx630_cur, rx630_curclass, "$!cstack"
  rx630_fail1804:
    unless rx630_bstack, rx630_done1802
    pop $I19, rx630_bstack
    if_null rx630_cstack, rx630_cstack_done1807
    unless rx630_cstack, rx630_cstack_done1807
    dec $I19
    set $P11, rx630_cstack[$I19]
  rx630_cstack_done1807:
    pop rx630_rep, rx630_bstack
    pop rx630_pos, rx630_bstack
    pop $I19, rx630_bstack
    lt rx630_pos, -1, rx630_done1802
    lt rx630_pos, 0, rx630_fail1804
    eq $I19, 0, rx630_fail1804
    nqp_islist $I20, rx630_cstack
    unless $I20, rx630_jump1805
    elements $I18, rx630_bstack
    le $I18, 0, rx630_cut1806
    dec $I18
    set $I18, rx630_bstack[$I18]
  rx630_cut1806:
    assign rx630_cstack, $I18
  rx630_jump1805:
    jump $I19
  rx630_done1802:
    rx630_cur."!cursor_fail"()
    .return (rx630_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident:sym<ignoremark>" :subid("cuid_143_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 460
    .param pmc __lowered_lex_208 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_209 
    set self, __lowered_lex_208
    .local pmc rx635_start
    .local string rx635_tgt
    .local int rx635_pos
    .local int rx635_off
    .local int rx635_eos
    .local int rx635_rep
    .local pmc rx635_cur
    .local pmc rx635_curclass
    .local pmc rx635_bstack
    .local pmc rx635_cstack
    rx635_start = self."!cursor_start_all"()
    set rx635_cur, rx635_start[0]
    set rx635_tgt, rx635_start[1]
    set rx635_pos, rx635_start[2]
    set rx635_curclass, rx635_start[3]
    set rx635_bstack, rx635_start[4]
    set $I19, rx635_start[5]
    store_lex unicode:"$\x{a2}", rx635_cur
    length rx635_eos, rx635_tgt
    eq $I19, 1, rx635_restart1818
    gt rx635_pos, rx635_eos, rx635_fail1819
    repr_get_attr_int $I11, self, rx635_curclass, "$!from"
    ne $I11, -1, rxscan636_done1825
    goto rxscan636_scan1824
  rxscan636_loop1823:
    inc rx635_pos
    gt rx635_pos, rx635_eos, rx635_fail1819
    repr_bind_attr_int rx635_cur, rx635_curclass, "$!from", rx635_pos
  rxscan636_scan1824:
    nqp_rxmark rx635_bstack, rxscan636_loop1823, rx635_pos, 0
  rxscan636_done1825:
    new $P11, "ResizableIntegerArray"
    assign $P11, 2
    assign $P11, 0
    nqp_push_label $P11, alt637_01827
    nqp_push_label $P11, alt637_11830
    nqp_rxmark rx635_bstack, alt637_end1826, -1, 0
    rx635_cur."!alt"(rx635_pos, "alt_nfa__28_1431289914.89636", $P11)
    goto rx635_fail1819
  alt637_01827:
    nqp_rxmark rx635_bstack, rxcap638_fail1829, rx635_pos, 0
    add $I11, rx635_pos, 1
    gt $I11, rx635_eos, rx635_fail1819
    ord $I11, rx635_tgt, rx635_pos
    ne $I11, 109, rx635_fail1819
    add rx635_pos, 1
    nqp_rxpeek $I19, rx635_bstack, rxcap638_fail1829
    inc $I19
    set $I11, rx635_bstack[$I19]
    repr_bind_attr_int rx635_cur, rx635_curclass, "$!pos", rx635_pos
    $P11 = rx635_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx635_pos)
    rx635_cstack = rx635_cur."!cursor_capture"($P11, "sym")
    goto rxcap638_done1828
  rxcap638_fail1829:
    goto rx635_fail1819
  rxcap638_done1828:
    goto alt637_end1826
  alt637_11830:
    add $I11, rx635_pos, 6
    gt $I11, rx635_eos, rx635_fail1819
    nqp_string_equal_at $I11, rx635_tgt, ucs4:"ignore", rx635_pos
    ne $I11, 1, rx635_fail1819
    add rx635_pos, 6
    nqp_rxmark rx635_bstack, rxcap639_fail1832, rx635_pos, 0
    add $I11, rx635_pos, 1
    gt $I11, rx635_eos, rx635_fail1819
    ord $I11, rx635_tgt, rx635_pos
    ne $I11, 109, rx635_fail1819
    add rx635_pos, 1
    nqp_rxpeek $I19, rx635_bstack, rxcap639_fail1832
    inc $I19
    set $I11, rx635_bstack[$I19]
    repr_bind_attr_int rx635_cur, rx635_curclass, "$!pos", rx635_pos
    $P11 = rx635_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx635_pos)
    rx635_cstack = rx635_cur."!cursor_capture"($P11, "sym")
    goto rxcap639_done1831
  rxcap639_fail1832:
    goto rx635_fail1819
  rxcap639_done1831:
    add $I11, rx635_pos, 3
    gt $I11, rx635_eos, rx635_fail1819
    nqp_string_equal_at $I11, rx635_tgt, ucs4:"ark", rx635_pos
    ne $I11, 1, rx635_fail1819
    add rx635_pos, 3
    goto alt637_end1826
  alt637_end1826:
    nqp_rxcommit rx635_bstack, alt637_end1826
    le rx635_pos, 0, rx635_fail1819
    is_cclass $I11, .CCLASS_WORD, rx635_tgt, rx635_pos
    if $I11, rx635_fail1819
    sub $I11, rx635_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx635_tgt, $I11
    unless $I11, rx635_fail1819
    rx635_cur."!cursor_pass"(rx635_pos, "mod_ident:sym<ignoremark>")
    .return (rx635_cur)
  rx635_restart1818:
    repr_get_attr_obj rx635_cstack, rx635_cur, rx635_curclass, "$!cstack"
  rx635_fail1819:
    unless rx635_bstack, rx635_done1817
    pop $I19, rx635_bstack
    if_null rx635_cstack, rx635_cstack_done1822
    unless rx635_cstack, rx635_cstack_done1822
    dec $I19
    set $P11, rx635_cstack[$I19]
  rx635_cstack_done1822:
    pop rx635_rep, rx635_bstack
    pop rx635_pos, rx635_bstack
    pop $I19, rx635_bstack
    lt rx635_pos, -1, rx635_done1817
    lt rx635_pos, 0, rx635_fail1819
    eq $I19, 0, rx635_fail1819
    nqp_islist $I20, rx635_cstack
    unless $I20, rx635_jump1820
    elements $I18, rx635_bstack
    le $I18, 0, rx635_cut1821
    dec $I18
    set $I18, rx635_bstack[$I18]
  rx635_cut1821:
    assign rx635_cstack, $I18
  rx635_jump1820:
    jump $I19
  rx635_done1817:
    rx635_cur."!cursor_fail"()
    .return (rx635_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident:sym<ratchet>" :subid("cuid_144_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 466
    .param pmc __lowered_lex_210 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_211 
    set self, __lowered_lex_210
    .local pmc rx641_start
    .local string rx641_tgt
    .local int rx641_pos
    .local int rx641_off
    .local int rx641_eos
    .local int rx641_rep
    .local pmc rx641_cur
    .local pmc rx641_curclass
    .local pmc rx641_bstack
    .local pmc rx641_cstack
    rx641_start = self."!cursor_start_all"()
    set rx641_cur, rx641_start[0]
    set rx641_tgt, rx641_start[1]
    set rx641_pos, rx641_start[2]
    set rx641_curclass, rx641_start[3]
    set rx641_bstack, rx641_start[4]
    set $I19, rx641_start[5]
    store_lex unicode:"$\x{a2}", rx641_cur
    length rx641_eos, rx641_tgt
    eq $I19, 1, rx641_restart1836
    gt rx641_pos, rx641_eos, rx641_fail1837
    repr_get_attr_int $I11, self, rx641_curclass, "$!from"
    ne $I11, -1, rxscan642_done1843
    goto rxscan642_scan1842
  rxscan642_loop1841:
    inc rx641_pos
    gt rx641_pos, rx641_eos, rx641_fail1837
    repr_bind_attr_int rx641_cur, rx641_curclass, "$!from", rx641_pos
  rxscan642_scan1842:
    nqp_rxmark rx641_bstack, rxscan642_loop1841, rx641_pos, 0
  rxscan642_done1843:
    nqp_rxmark rx641_bstack, rxcap643_fail1845, rx641_pos, 0
    add $I11, rx641_pos, 1
    gt $I11, rx641_eos, rx641_fail1837
    ord $I11, rx641_tgt, rx641_pos
    ne $I11, 114, rx641_fail1837
    add rx641_pos, 1
    nqp_rxpeek $I19, rx641_bstack, rxcap643_fail1845
    inc $I19
    set $I11, rx641_bstack[$I19]
    repr_bind_attr_int rx641_cur, rx641_curclass, "$!pos", rx641_pos
    $P11 = rx641_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx641_pos)
    rx641_cstack = rx641_cur."!cursor_capture"($P11, "sym")
    goto rxcap643_done1844
  rxcap643_fail1845:
    goto rx641_fail1837
  rxcap643_done1844:
    nqp_rxmark rx641_bstack, rxquantr644_done1847, rx641_pos, 0
  rxquantr644_loop1846:
    add $I11, rx641_pos, 6
    gt $I11, rx641_eos, rx641_fail1837
    nqp_string_equal_at $I11, rx641_tgt, ucs4:"atchet", rx641_pos
    ne $I11, 1, rx641_fail1837
    add rx641_pos, 6
    nqp_rxpeek $I19, rx641_bstack, rxquantr644_done1847
    inc $I19
    inc $I19
    set rx641_rep, rx641_bstack[$I19]
    nqp_rxcommit rx641_bstack, rxquantr644_done1847
    inc rx641_rep
  rxquantr644_done1847:
    le rx641_pos, 0, rx641_fail1837
    is_cclass $I11, .CCLASS_WORD, rx641_tgt, rx641_pos
    if $I11, rx641_fail1837
    sub $I11, rx641_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx641_tgt, $I11
    unless $I11, rx641_fail1837
    rx641_cur."!cursor_pass"(rx641_pos, "mod_ident:sym<ratchet>")
    .return (rx641_cur)
  rx641_restart1836:
    repr_get_attr_obj rx641_cstack, rx641_cur, rx641_curclass, "$!cstack"
  rx641_fail1837:
    unless rx641_bstack, rx641_done1835
    pop $I19, rx641_bstack
    if_null rx641_cstack, rx641_cstack_done1840
    unless rx641_cstack, rx641_cstack_done1840
    dec $I19
    set $P11, rx641_cstack[$I19]
  rx641_cstack_done1840:
    pop rx641_rep, rx641_bstack
    pop rx641_pos, rx641_bstack
    pop $I19, rx641_bstack
    lt rx641_pos, -1, rx641_done1835
    lt rx641_pos, 0, rx641_fail1837
    eq $I19, 0, rx641_fail1837
    nqp_islist $I20, rx641_cstack
    unless $I20, rx641_jump1838
    elements $I18, rx641_bstack
    le $I18, 0, rx641_cut1839
    dec $I18
    set $I18, rx641_bstack[$I18]
  rx641_cut1839:
    assign rx641_cstack, $I18
  rx641_jump1838:
    jump $I19
  rx641_done1835:
    rx641_cur."!cursor_fail"()
    .return (rx641_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident:sym<sigspace>" :subid("cuid_145_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 467
    .param pmc __lowered_lex_212 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_213 
    set self, __lowered_lex_212
    .local pmc rx646_start
    .local string rx646_tgt
    .local int rx646_pos
    .local int rx646_off
    .local int rx646_eos
    .local int rx646_rep
    .local pmc rx646_cur
    .local pmc rx646_curclass
    .local pmc rx646_bstack
    .local pmc rx646_cstack
    rx646_start = self."!cursor_start_all"()
    set rx646_cur, rx646_start[0]
    set rx646_tgt, rx646_start[1]
    set rx646_pos, rx646_start[2]
    set rx646_curclass, rx646_start[3]
    set rx646_bstack, rx646_start[4]
    set $I19, rx646_start[5]
    store_lex unicode:"$\x{a2}", rx646_cur
    length rx646_eos, rx646_tgt
    eq $I19, 1, rx646_restart1851
    gt rx646_pos, rx646_eos, rx646_fail1852
    repr_get_attr_int $I11, self, rx646_curclass, "$!from"
    ne $I11, -1, rxscan647_done1858
    goto rxscan647_scan1857
  rxscan647_loop1856:
    inc rx646_pos
    gt rx646_pos, rx646_eos, rx646_fail1852
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!from", rx646_pos
  rxscan647_scan1857:
    nqp_rxmark rx646_bstack, rxscan647_loop1856, rx646_pos, 0
  rxscan647_done1858:
    nqp_rxmark rx646_bstack, rxcap648_fail1860, rx646_pos, 0
    add $I11, rx646_pos, 1
    gt $I11, rx646_eos, rx646_fail1852
    ord $I11, rx646_tgt, rx646_pos
    ne $I11, 115, rx646_fail1852
    add rx646_pos, 1
    nqp_rxpeek $I19, rx646_bstack, rxcap648_fail1860
    inc $I19
    set $I11, rx646_bstack[$I19]
    repr_bind_attr_int rx646_cur, rx646_curclass, "$!pos", rx646_pos
    $P11 = rx646_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx646_pos)
    rx646_cstack = rx646_cur."!cursor_capture"($P11, "sym")
    goto rxcap648_done1859
  rxcap648_fail1860:
    goto rx646_fail1852
  rxcap648_done1859:
    nqp_rxmark rx646_bstack, rxquantr649_done1862, rx646_pos, 0
  rxquantr649_loop1861:
    add $I11, rx646_pos, 7
    gt $I11, rx646_eos, rx646_fail1852
    nqp_string_equal_at $I11, rx646_tgt, ucs4:"igspace", rx646_pos
    ne $I11, 1, rx646_fail1852
    add rx646_pos, 7
    nqp_rxpeek $I19, rx646_bstack, rxquantr649_done1862
    inc $I19
    inc $I19
    set rx646_rep, rx646_bstack[$I19]
    nqp_rxcommit rx646_bstack, rxquantr649_done1862
    inc rx646_rep
  rxquantr649_done1862:
    le rx646_pos, 0, rx646_fail1852
    is_cclass $I11, .CCLASS_WORD, rx646_tgt, rx646_pos
    if $I11, rx646_fail1852
    sub $I11, rx646_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx646_tgt, $I11
    unless $I11, rx646_fail1852
    rx646_cur."!cursor_pass"(rx646_pos, "mod_ident:sym<sigspace>")
    .return (rx646_cur)
  rx646_restart1851:
    repr_get_attr_obj rx646_cstack, rx646_cur, rx646_curclass, "$!cstack"
  rx646_fail1852:
    unless rx646_bstack, rx646_done1850
    pop $I19, rx646_bstack
    if_null rx646_cstack, rx646_cstack_done1855
    unless rx646_cstack, rx646_cstack_done1855
    dec $I19
    set $P11, rx646_cstack[$I19]
  rx646_cstack_done1855:
    pop rx646_rep, rx646_bstack
    pop rx646_pos, rx646_bstack
    pop $I19, rx646_bstack
    lt rx646_pos, -1, rx646_done1850
    lt rx646_pos, 0, rx646_fail1852
    eq $I19, 0, rx646_fail1852
    nqp_islist $I20, rx646_cstack
    unless $I20, rx646_jump1853
    elements $I18, rx646_bstack
    le $I18, 0, rx646_cut1854
    dec $I18
    set $I18, rx646_bstack[$I18]
  rx646_cut1854:
    assign rx646_cstack, $I18
  rx646_jump1853:
    jump $I19
  rx646_done1850:
    rx646_cur."!cursor_fail"()
    .return (rx646_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident:sym<dba>" :subid("cuid_146_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 468
    .param pmc __lowered_lex_214 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_215 
    set self, __lowered_lex_214
    .local pmc rx651_start
    .local string rx651_tgt
    .local int rx651_pos
    .local int rx651_off
    .local int rx651_eos
    .local int rx651_rep
    .local pmc rx651_cur
    .local pmc rx651_curclass
    .local pmc rx651_bstack
    .local pmc rx651_cstack
    rx651_start = self."!cursor_start_all"()
    set rx651_cur, rx651_start[0]
    set rx651_tgt, rx651_start[1]
    set rx651_pos, rx651_start[2]
    set rx651_curclass, rx651_start[3]
    set rx651_bstack, rx651_start[4]
    set $I19, rx651_start[5]
    store_lex unicode:"$\x{a2}", rx651_cur
    length rx651_eos, rx651_tgt
    eq $I19, 1, rx651_restart1866
    gt rx651_pos, rx651_eos, rx651_fail1867
    repr_get_attr_int $I11, self, rx651_curclass, "$!from"
    ne $I11, -1, rxscan652_done1873
    goto rxscan652_scan1872
  rxscan652_loop1871:
    inc rx651_pos
    gt rx651_pos, rx651_eos, rx651_fail1867
    repr_bind_attr_int rx651_cur, rx651_curclass, "$!from", rx651_pos
  rxscan652_scan1872:
    nqp_rxmark rx651_bstack, rxscan652_loop1871, rx651_pos, 0
  rxscan652_done1873:
    nqp_rxmark rx651_bstack, rxcap653_fail1875, rx651_pos, 0
    add $I11, rx651_pos, 3
    gt $I11, rx651_eos, rx651_fail1867
    nqp_string_equal_at $I11, rx651_tgt, ucs4:"dba", rx651_pos
    ne $I11, 1, rx651_fail1867
    add rx651_pos, 3
    nqp_rxpeek $I19, rx651_bstack, rxcap653_fail1875
    inc $I19
    set $I11, rx651_bstack[$I19]
    repr_bind_attr_int rx651_cur, rx651_curclass, "$!pos", rx651_pos
    $P11 = rx651_cur."!cursor_start_subcapture"($I11)
    $P11."!cursor_pass"(rx651_pos)
    rx651_cstack = rx651_cur."!cursor_capture"($P11, "sym")
    goto rxcap653_done1874
  rxcap653_fail1875:
    goto rx651_fail1867
  rxcap653_done1874:
    le rx651_pos, 0, rx651_fail1867
    is_cclass $I11, .CCLASS_WORD, rx651_tgt, rx651_pos
    if $I11, rx651_fail1867
    sub $I11, rx651_pos, 1
    is_cclass $I11, .CCLASS_WORD, rx651_tgt, $I11
    unless $I11, rx651_fail1867
    rx651_cur."!cursor_pass"(rx651_pos, "mod_ident:sym<dba>")
    .return (rx651_cur)
  rx651_restart1866:
    repr_get_attr_obj rx651_cstack, rx651_cur, rx651_curclass, "$!cstack"
  rx651_fail1867:
    unless rx651_bstack, rx651_done1865
    pop $I19, rx651_bstack
    if_null rx651_cstack, rx651_cstack_done1870
    unless rx651_cstack, rx651_cstack_done1870
    dec $I19
    set $P11, rx651_cstack[$I19]
  rx651_cstack_done1870:
    pop rx651_rep, rx651_bstack
    pop rx651_pos, rx651_bstack
    pop $I19, rx651_bstack
    lt rx651_pos, -1, rx651_done1865
    lt rx651_pos, 0, rx651_fail1867
    eq $I19, 0, rx651_fail1867
    nqp_islist $I20, rx651_cstack
    unless $I20, rx651_jump1868
    elements $I18, rx651_bstack
    le $I18, 0, rx651_cut1869
    dec $I18
    set $I18, rx651_bstack[$I18]
  rx651_cut1869:
    assign rx651_cstack, $I18
  rx651_jump1868:
    jump $I19
  rx651_done1865:
    rx651_cur."!cursor_fail"()
    .return (rx651_cur) 
.end
.HLL "nqp"
.namespace []
.sub "mod_ident:sym<oops>" :subid("cuid_147_1431289913.64791") :anon :lex :outer("cuid_241_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 469
    .param pmc __lowered_lex_216 
    .const 'Sub' $P5012 = 'cuid_148_1431289913.64791' 
    capture_lex $P5012 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc self 
    .local pmc __lowered_lex_217 
    .local pmc fb_tmp_42 
    set self, __lowered_lex_216
    .local pmc rx655_start
    .local string rx655_tgt
    .local int rx655_pos
    .local int rx655_off
    .local int rx655_eos
    .local int rx655_rep
    .local pmc rx655_cur
    .local pmc rx655_curclass
    .local pmc rx655_bstack
    .local pmc rx655_cstack
    rx655_start = self."!cursor_start_all"()
    set rx655_cur, rx655_start[0]
    set rx655_tgt, rx655_start[1]
    set rx655_pos, rx655_start[2]
    set rx655_curclass, rx655_start[3]
    set rx655_bstack, rx655_start[4]
    set $I19, rx655_start[5]
    store_lex unicode:"$\x{a2}", rx655_cur
    length rx655_eos, rx655_tgt
    eq $I19, 1, rx655_restart1879
    gt rx655_pos, rx655_eos, rx655_fail1880
    repr_get_attr_int $I11, self, rx655_curclass, "$!from"
    ne $I11, -1, rxscan656_done1886
    goto rxscan656_scan1885
  rxscan656_loop1884:
    inc rx655_pos
    gt rx655_pos, rx655_eos, rx655_fail1880
    repr_bind_attr_int rx655_cur, rx655_curclass, "$!from", rx655_pos
  rxscan656_scan1885:
    nqp_rxmark rx655_bstack, rxscan656_loop1884, rx655_pos, 0
  rxscan656_done1886:
    repr_bind_attr_int rx655_cur, rx655_curclass, "$!pos", rx655_pos
    store_lex unicode:"$\x{a2}", rx655_cur
    $P5001 = $P101."MATCH"()
    set __lowered_lex_217, $P5001
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    .const 'Sub' $P5003 = 'cuid_148_1431289913.64791' 
    capture_lex $P5003
    repr_bind_attr_int rx655_cur, rx655_curclass, "$!pos", rx655_pos
    $P11 = rx655_cur.$P5003()
    repr_get_attr_int $I11, $P11, rx655_curclass, "$!pos"
    lt $I11, 0, rx655_fail1880
    nqp_rxmark rx655_bstack, rxsubrule659_pass1896, -1, 0
  rxsubrule659_pass1896:
    rx655_cstack = rx655_cur."!cursor_capture"($P11, "0")
    repr_get_attr_int rx655_pos, $P11, rx655_curclass, "$!pos"
    repr_bind_attr_int rx655_cur, rx655_curclass, "$!pos", rx655_pos
    store_lex unicode:"$\x{a2}", rx655_cur
    $P5004 = $P101."MATCH"()
    set __lowered_lex_217, $P5004
    $P5005 = __lowered_lex_217."CURSOR"()
    set fb_tmp_42, __lowered_lex_217
    repr_defined $I5001, fb_tmp_42
    unless $I5001 goto if660_else1897 
    set $P5006, fb_tmp_42[0]
    set $P5008, $P5006
    goto if660_end1898
  if660_else1897:
    null $P5007
    set $P5008, $P5007
  if660_end1898:
    unless_null $P5008, vivi_6611899
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_6611899:
    $P5010 = $P5008."Str"()
    set $S5002, $P5010
    concat $S5001, "Unrecognized regex modifier :", $S5002
    $P5011 = $P5005."panic"($S5001)
    rx655_cur."!cursor_pass"(rx655_pos, "mod_ident:sym<oops>")
    .return (rx655_cur)
  rx655_restart1879:
    repr_get_attr_obj rx655_cstack, rx655_cur, rx655_curclass, "$!cstack"
  rx655_fail1880:
    unless rx655_bstack, rx655_done1878
    pop $I19, rx655_bstack
    if_null rx655_cstack, rx655_cstack_done1883
    unless rx655_cstack, rx655_cstack_done1883
    dec $I19
    set $P11, rx655_cstack[$I19]
  rx655_cstack_done1883:
    pop rx655_rep, rx655_bstack
    pop rx655_pos, rx655_bstack
    pop $I19, rx655_bstack
    lt rx655_pos, -1, rx655_done1878
    lt rx655_pos, 0, rx655_fail1880
    eq $I19, 0, rx655_fail1880
    nqp_islist $I20, rx655_cstack
    unless $I20, rx655_jump1881
    elements $I18, rx655_bstack
    le $I18, 0, rx655_cut1882
    dec $I18
    set $I18, rx655_bstack[$I18]
  rx655_cut1882:
    assign rx655_cstack, $I18
  rx655_jump1881:
    jump $I19
  rx655_done1878:
    rx655_cur."!cursor_fail"()
    .return (rx655_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_148_1431289913.64791") :anon :lex :outer("cuid_147_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc self 
    .lex utf8:"$\x{a2}", $P101 
    .local pmc rx657_start
    .local string rx657_tgt
    .local int rx657_pos
    .local int rx657_off
    .local int rx657_eos
    .local int rx657_rep
    .local pmc rx657_cur
    .local pmc rx657_curclass
    .local pmc rx657_bstack
    .local pmc rx657_cstack
    rx657_start = self."!cursor_start_all"()
    set rx657_cur, rx657_start[0]
    set rx657_tgt, rx657_start[1]
    set rx657_pos, rx657_start[2]
    set rx657_curclass, rx657_start[3]
    set rx657_bstack, rx657_start[4]
    set $I19, rx657_start[5]
    store_lex unicode:"$\x{a2}", rx657_cur
    length rx657_eos, rx657_tgt
    eq $I19, 1, rx657_restart1889
    gt rx657_pos, rx657_eos, rx657_fail1890
    nqp_rxmark rx657_bstack, rxquantr658_done1895, -1, 0
  rxquantr658_loop1894:
    ge rx657_pos, rx657_eos, rx657_fail1890
    is_cclass $I11, .CCLASS_NUMERIC, rx657_tgt, rx657_pos
    if $I11, rx657_fail1890
    inc rx657_pos
    nqp_rxpeek $I19, rx657_bstack, rxquantr658_done1895
    inc $I19
    inc $I19
    set rx657_rep, rx657_bstack[$I19]
    nqp_rxcommit rx657_bstack, rxquantr658_done1895
    inc rx657_rep
    nqp_rxmark rx657_bstack, rxquantr658_done1895, rx657_pos, rx657_rep
    goto rxquantr658_loop1894
  rxquantr658_done1895:
    rx657_cur."!cursor_pass"(rx657_pos)
    .return (rx657_cur)
  rx657_restart1889:
    repr_get_attr_obj rx657_cstack, rx657_cur, rx657_curclass, "$!cstack"
  rx657_fail1890:
    unless rx657_bstack, rx657_done1888
    pop $I19, rx657_bstack
    if_null rx657_cstack, rx657_cstack_done1893
    unless rx657_cstack, rx657_cstack_done1893
    dec $I19
    set $P11, rx657_cstack[$I19]
  rx657_cstack_done1893:
    pop rx657_rep, rx657_bstack
    pop rx657_pos, rx657_bstack
    pop $I19, rx657_bstack
    lt rx657_pos, -1, rx657_done1888
    lt rx657_pos, 0, rx657_fail1890
    eq $I19, 0, rx657_fail1890
    nqp_islist $I20, rx657_cstack
    unless $I20, rx657_jump1891
    elements $I18, rx657_bstack
    le $I18, 0, rx657_cut1892
    dec $I18
    set $I18, rx657_bstack[$I18]
  rx657_cut1892:
    assign rx657_cstack, $I18
  rx657_jump1891:
    jump $I19
  rx657_done1888:
    rx657_cur."!cursor_fail"()
    .return (rx657_cur) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_242_1431289913.64791") :anon :lex :outer("cuid_237_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 473
    .const 'Sub' $P5083 = 'cuid_243_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_244_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_149_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_150_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_151_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_152_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_153_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_154_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_155_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_156_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_157_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_158_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_159_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_160_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_161_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_162_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_163_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_164_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_165_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_166_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_167_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_168_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_169_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_170_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_171_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_172_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_173_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_174_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_175_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_176_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_177_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_178_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_179_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_180_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_181_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_182_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_183_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_184_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_185_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_186_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_187_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_188_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_189_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_190_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_191_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_192_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_193_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_194_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_195_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_196_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_197_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_198_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_199_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_200_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_201_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_202_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_203_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_204_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_205_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_206_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_207_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_208_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_209_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_210_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_211_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_212_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_213_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_214_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_215_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_216_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_217_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_218_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_219_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_220_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_221_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_222_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_223_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_224_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_225_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_226_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_227_1431289913.64791' 
    capture_lex $P5083 
    .const 'Sub' $P5083 = 'cuid_228_1431289913.64791' 
    capture_lex $P5083 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .lex "&backmod", $P103 
    .lex "&capnames", $P104 
    .const 'Sub' $P5001 = 'cuid_243_1431289913.64791' 
    capture_lex $P5001
    set $P103, $P5001
    .const 'Sub' $P5002 = 'cuid_244_1431289913.64791' 
    capture_lex $P5002
    set $P104, $P5002
    .const 'Sub' $P5003 = 'cuid_149_1431289913.64791' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_150_1431289913.64791' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_151_1431289913.64791' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_152_1431289913.64791' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_153_1431289913.64791' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_154_1431289913.64791' 
    capture_lex $P5008
    .const 'Sub' $P5009 = 'cuid_155_1431289913.64791' 
    capture_lex $P5009
    .const 'Sub' $P5010 = 'cuid_156_1431289913.64791' 
    capture_lex $P5010
    .const 'Sub' $P5011 = 'cuid_157_1431289913.64791' 
    capture_lex $P5011
    .const 'Sub' $P5012 = 'cuid_158_1431289913.64791' 
    capture_lex $P5012
    .const 'Sub' $P5013 = 'cuid_159_1431289913.64791' 
    capture_lex $P5013
    .const 'Sub' $P5014 = 'cuid_160_1431289913.64791' 
    capture_lex $P5014
    .const 'Sub' $P5015 = 'cuid_161_1431289913.64791' 
    capture_lex $P5015
    .const 'Sub' $P5016 = 'cuid_162_1431289913.64791' 
    capture_lex $P5016
    .const 'Sub' $P5017 = 'cuid_163_1431289913.64791' 
    capture_lex $P5017
    .const 'Sub' $P5018 = 'cuid_164_1431289913.64791' 
    capture_lex $P5018
    .const 'Sub' $P5019 = 'cuid_165_1431289913.64791' 
    capture_lex $P5019
    .const 'Sub' $P5020 = 'cuid_166_1431289913.64791' 
    capture_lex $P5020
    .const 'Sub' $P5021 = 'cuid_167_1431289913.64791' 
    capture_lex $P5021
    .const 'Sub' $P5022 = 'cuid_168_1431289913.64791' 
    capture_lex $P5022
    .const 'Sub' $P5023 = 'cuid_169_1431289913.64791' 
    capture_lex $P5023
    .const 'Sub' $P5024 = 'cuid_170_1431289913.64791' 
    capture_lex $P5024
    .const 'Sub' $P5025 = 'cuid_171_1431289913.64791' 
    capture_lex $P5025
    .const 'Sub' $P5026 = 'cuid_172_1431289913.64791' 
    capture_lex $P5026
    .const 'Sub' $P5027 = 'cuid_173_1431289913.64791' 
    capture_lex $P5027
    .const 'Sub' $P5028 = 'cuid_174_1431289913.64791' 
    capture_lex $P5028
    .const 'Sub' $P5029 = 'cuid_175_1431289913.64791' 
    capture_lex $P5029
    .const 'Sub' $P5030 = 'cuid_176_1431289913.64791' 
    capture_lex $P5030
    .const 'Sub' $P5031 = 'cuid_177_1431289913.64791' 
    capture_lex $P5031
    .const 'Sub' $P5032 = 'cuid_178_1431289913.64791' 
    capture_lex $P5032
    .const 'Sub' $P5033 = 'cuid_179_1431289913.64791' 
    capture_lex $P5033
    .const 'Sub' $P5034 = 'cuid_180_1431289913.64791' 
    capture_lex $P5034
    .const 'Sub' $P5035 = 'cuid_181_1431289913.64791' 
    capture_lex $P5035
    .const 'Sub' $P5036 = 'cuid_182_1431289913.64791' 
    capture_lex $P5036
    .const 'Sub' $P5037 = 'cuid_183_1431289913.64791' 
    capture_lex $P5037
    .const 'Sub' $P5038 = 'cuid_184_1431289913.64791' 
    capture_lex $P5038
    .const 'Sub' $P5039 = 'cuid_185_1431289913.64791' 
    capture_lex $P5039
    .const 'Sub' $P5040 = 'cuid_186_1431289913.64791' 
    capture_lex $P5040
    .const 'Sub' $P5041 = 'cuid_187_1431289913.64791' 
    capture_lex $P5041
    .const 'Sub' $P5042 = 'cuid_188_1431289913.64791' 
    capture_lex $P5042
    .const 'Sub' $P5043 = 'cuid_189_1431289913.64791' 
    capture_lex $P5043
    .const 'Sub' $P5044 = 'cuid_190_1431289913.64791' 
    capture_lex $P5044
    .const 'Sub' $P5045 = 'cuid_191_1431289913.64791' 
    capture_lex $P5045
    .const 'Sub' $P5046 = 'cuid_192_1431289913.64791' 
    capture_lex $P5046
    .const 'Sub' $P5047 = 'cuid_193_1431289913.64791' 
    capture_lex $P5047
    .const 'Sub' $P5048 = 'cuid_194_1431289913.64791' 
    capture_lex $P5048
    .const 'Sub' $P5049 = 'cuid_195_1431289913.64791' 
    capture_lex $P5049
    .const 'Sub' $P5050 = 'cuid_196_1431289913.64791' 
    capture_lex $P5050
    .const 'Sub' $P5051 = 'cuid_197_1431289913.64791' 
    capture_lex $P5051
    .const 'Sub' $P5052 = 'cuid_198_1431289913.64791' 
    capture_lex $P5052
    .const 'Sub' $P5053 = 'cuid_199_1431289913.64791' 
    capture_lex $P5053
    .const 'Sub' $P5054 = 'cuid_200_1431289913.64791' 
    capture_lex $P5054
    .const 'Sub' $P5055 = 'cuid_201_1431289913.64791' 
    capture_lex $P5055
    .const 'Sub' $P5056 = 'cuid_202_1431289913.64791' 
    capture_lex $P5056
    .const 'Sub' $P5057 = 'cuid_203_1431289913.64791' 
    capture_lex $P5057
    .const 'Sub' $P5058 = 'cuid_204_1431289913.64791' 
    capture_lex $P5058
    .const 'Sub' $P5059 = 'cuid_205_1431289913.64791' 
    capture_lex $P5059
    .const 'Sub' $P5060 = 'cuid_206_1431289913.64791' 
    capture_lex $P5060
    .const 'Sub' $P5061 = 'cuid_207_1431289913.64791' 
    capture_lex $P5061
    .const 'Sub' $P5062 = 'cuid_208_1431289913.64791' 
    capture_lex $P5062
    .const 'Sub' $P5063 = 'cuid_209_1431289913.64791' 
    capture_lex $P5063
    .const 'Sub' $P5064 = 'cuid_210_1431289913.64791' 
    capture_lex $P5064
    .const 'Sub' $P5065 = 'cuid_211_1431289913.64791' 
    capture_lex $P5065
    .const 'Sub' $P5066 = 'cuid_212_1431289913.64791' 
    capture_lex $P5066
    .const 'Sub' $P5067 = 'cuid_213_1431289913.64791' 
    capture_lex $P5067
    .const 'Sub' $P5068 = 'cuid_214_1431289913.64791' 
    capture_lex $P5068
    .const 'Sub' $P5069 = 'cuid_215_1431289913.64791' 
    capture_lex $P5069
    .const 'Sub' $P5070 = 'cuid_216_1431289913.64791' 
    capture_lex $P5070
    .const 'Sub' $P5071 = 'cuid_217_1431289913.64791' 
    capture_lex $P5071
    .const 'Sub' $P5072 = 'cuid_218_1431289913.64791' 
    capture_lex $P5072
    .const 'Sub' $P5073 = 'cuid_219_1431289913.64791' 
    capture_lex $P5073
    .const 'Sub' $P5074 = 'cuid_220_1431289913.64791' 
    capture_lex $P5074
    .const 'Sub' $P5075 = 'cuid_221_1431289913.64791' 
    capture_lex $P5075
    .const 'Sub' $P5076 = 'cuid_222_1431289913.64791' 
    capture_lex $P5076
    .const 'Sub' $P5077 = 'cuid_223_1431289913.64791' 
    capture_lex $P5077
    .const 'Sub' $P5078 = 'cuid_224_1431289913.64791' 
    capture_lex $P5078
    .const 'Sub' $P5079 = 'cuid_225_1431289913.64791' 
    capture_lex $P5079
    .const 'Sub' $P5080 = 'cuid_226_1431289913.64791' 
    capture_lex $P5080
    .const 'Sub' $P5081 = 'cuid_227_1431289913.64791' 
    capture_lex $P5081
    .const 'Sub' $P5082 = 'cuid_228_1431289913.64791' 
    capture_lex $P5082
    .return ($P5082) 
.end
.HLL "nqp"
.namespace []
.sub "backmod" :subid("cuid_243_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1240
    .param pmc __lowered_lex_218 
    .param pmc __lowered_lex_219 
    set $S5001, __lowered_lex_219
    iseq $I5001, $S5001, ":"
    unless $I5001 goto if662_else1900 
.annotate 'line', 1241
    $P5001 = __lowered_lex_218."backtrack"("r")
    goto if662_end1901
  if662_else1900:
    set $S5002, __lowered_lex_219
    iseq $I5002, $S5002, ":?"
    set $I5004, $I5002
    if $I5002 goto unless664_end1905 
    set $S5003, __lowered_lex_219
    iseq $I5003, $S5003, "?"
    set $I5004, $I5003
  unless664_end1905:
    unless $I5004 goto if663_else1902 
.annotate 'line', 1242
    $P5002 = __lowered_lex_218."backtrack"("f")
    set $P5006, $P5002
    goto if663_end1903
  if663_else1902:
    set $S5004, __lowered_lex_219
    iseq $I5005, $S5004, ":!"
    set $I5007, $I5005
    if $I5005 goto unless666_end1909 
    set $S5005, __lowered_lex_219
    iseq $I5006, $S5005, "!"
    set $I5007, $I5006
  unless666_end1909:
    box $P5005, $I5007
    set $P5004, $P5005
    unless $I5007 goto if665_end1907 
.annotate 'line', 1243
    $P5003 = __lowered_lex_218."backtrack"("g")
    set $P5004, $P5003
  if665_end1907:
    set $P5006, $P5004
  if663_end1903:
  if662_end1901:
    .return (__lowered_lex_218) 
.end
.HLL "nqp"
.namespace []
.sub "capnames" :subid("cuid_244_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1303
    .param pmc __lowered_lex_238 
    .param int __lowered_lex_239 
    .local pmc __lowered_lex_240 
    .local pmc __lowered_lex_241 
    .local pmc lowered_for_it__5 
    .local pmc __lowered_lex_222 
    .local pmc __lowered_lex_221 
    .local pmc lowered_for_it__4 
    .local pmc __lowered_lex_220 
    .local pmc fb_tmp_43 
    .local pmc fb_tmp_44 
    .local pmc __lowered_lex_226 
    .local pmc lowered_for_it__7 
    .local pmc __lowered_lex_225 
    .local pmc __lowered_lex_224 
    .local pmc lowered_for_it__6 
    .local pmc __lowered_lex_223 
    .local pmc fb_tmp_45 
    .local pmc fb_tmp_46 
    .local pmc fb_tmp_47 
    .local pmc fb_tmp_48 
    .local pmc __lowered_lex_228 
    .local pmc __lowered_lex_229 
    .local pmc lowered_for_it__8 
    .local pmc __lowered_lex_227 
    .local pmc __lowered_lex_232 
    .local pmc lowered_for_it__9 
    .local pmc __lowered_lex_230 
    .local pmc fb_tmp_49 
    .local pmc lowered_for_it__10 
    .local pmc __lowered_lex_231 
    .local pmc fb_tmp_50 
    .local pmc fb_tmp_51 
    .local pmc fb_tmp_52 
    .local pmc __lowered_lex_236 
    .local pmc __lowered_lex_237 
    .local pmc fb_tmp_53 
    .local pmc lowered_for_it__11 
    .local pmc __lowered_lex_233 
    .local pmc fb_tmp_54 
    .local pmc fb_tmp_55 
    .local pmc __lowered_lex_235 
    .local pmc fb_tmp_56 
    .local pmc lowered_for_it__12 
    .local pmc __lowered_lex_234 
    .local pmc fb_tmp_57 
    new $P5001, 'Hash'
    set __lowered_lex_240, $P5001
.annotate 'line', 1305
    $P5002 = __lowered_lex_238."rxtype"()
    set __lowered_lex_241, $P5002
    set $S5001, __lowered_lex_241
    iseq $I5001, $S5001, "concat"
    set $I5003, $I5001
    if $I5001 goto unless668_end1913 
    set $S5002, __lowered_lex_241
    iseq $I5002, $S5002, "goal"
    set $I5003, $I5002
  unless668_end1913:
    unless $I5003 goto if667_else1910 
.annotate 'line', 1306
.annotate 'line', 1307
    $P5004 = __lowered_lex_238."list"()
    iter $P5003, $P5004
    set lowered_for_it__5, $P5003
    new $P5025, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5025, while669_handlers1917
    push_eh $P5025
  while669_test1914:
    set $P5024, lowered_for_it__5
    unless lowered_for_it__5 goto while669_done1918 
  while669_redo1916:
    shift $P5005, lowered_for_it__5
    set __lowered_lex_222, $P5005
.annotate 'line', 1308
    $P5006 = "&capnames"(__lowered_lex_222, __lowered_lex_239)
    set __lowered_lex_221, $P5006
    iter $P5007, __lowered_lex_221
    set lowered_for_it__4, $P5007
    new $P5018, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5018, while670_handlers1922
    push_eh $P5018
  while670_test1919:
    set $P5017, lowered_for_it__4
    unless lowered_for_it__4 goto while670_done1923 
  while670_redo1921:
    shift $P5008, lowered_for_it__4
    set __lowered_lex_220, $P5008
.annotate 'line', 1309
    $P5009 = __lowered_lex_220."key"()
    set $S5003, $P5009
    set fb_tmp_43, __lowered_lex_240
    repr_defined $I5004, fb_tmp_43
    unless $I5004 goto if671_else1924 
    $P5011 = __lowered_lex_220."key"()
    set $S5004, $P5011
    set $P5010, fb_tmp_43[$S5004]
    set $P5013, $P5010
    goto if671_end1925
  if671_else1924:
    null $P5012
    set $P5013, $P5012
  if671_end1925:
    unless_null $P5013, vivi_6721926
    nqp_get_sc_object $P5014, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5013, $P5014
  vivi_6721926:
    set $N5002, $P5013
    $P5015 = __lowered_lex_220."value"()
    set $N5003, $P5015
    add $N5001, $N5002, $N5003
    box $P5016, $N5001
    set __lowered_lex_240[$S5003], $P5016
    set $P5017, $P5016
    goto while670_test1919 
  while670_handlers1922:
    .get_results ($P5018)
    pop_upto_eh $P5018
    getattribute $P5019, $P5018, 'type'
    eq $P5019, .CONTROL_LOOP_NEXT, while670_test1919
    eq $P5019, .CONTROL_LOOP_REDO, while670_redo1921
  while670_done1923:
    pop_eh 
    set fb_tmp_44, __lowered_lex_221
    repr_defined $I5005, fb_tmp_44
    unless $I5005 goto if673_else1927 
    set $P5020, fb_tmp_44[""]
    set $P5022, $P5020
    goto if673_end1928
  if673_else1927:
    null $P5021
    set $P5022, $P5021
  if673_end1928:
    unless_null $P5022, vivi_6741929
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_6741929:
    set $I5006, $P5022
    set __lowered_lex_239, $I5006
    box $P5026, __lowered_lex_239
    set $P5024, $P5026
    goto while669_test1914 
  while669_handlers1917:
    .get_results ($P5025)
    pop_upto_eh $P5025
    getattribute $P5027, $P5025, 'type'
    eq $P5027, .CONTROL_LOOP_NEXT, while669_test1914
    eq $P5027, .CONTROL_LOOP_REDO, while669_redo1916
  while669_done1918:
    pop_eh 
    goto if667_end1911
  if667_else1910:
    set $S5005, __lowered_lex_241
    iseq $I5007, $S5005, "altseq"
    set $I5009, $I5007
    if $I5007 goto unless676_end1933 
    set $S5006, __lowered_lex_241
    iseq $I5008, $S5006, "alt"
    set $I5009, $I5008
  unless676_end1933:
    unless $I5009 goto if675_else1930 
.annotate 'line', 1313
    box $P5028, __lowered_lex_239
    set __lowered_lex_226, $P5028
.annotate 'line', 1315
    $P5030 = __lowered_lex_238."list"()
    iter $P5029, $P5030
    set lowered_for_it__7, $P5029
    new $P5061, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5061, while677_handlers1937
    push_eh $P5061
  while677_test1934:
    set $P5060, lowered_for_it__7
    unless lowered_for_it__7 goto while677_done1938 
  while677_redo1936:
    shift $P5031, lowered_for_it__7
    set __lowered_lex_225, $P5031
.annotate 'line', 1316
    $P5032 = "&capnames"(__lowered_lex_225, __lowered_lex_239)
    set __lowered_lex_224, $P5032
    iter $P5033, __lowered_lex_224
    set lowered_for_it__6, $P5033
    new $P5048, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5048, while678_handlers1942
    push_eh $P5048
  while678_test1939:
    set $P5047, lowered_for_it__6
    unless lowered_for_it__6 goto while678_done1943 
  while678_redo1941:
    shift $P5034, lowered_for_it__6
    set __lowered_lex_223, $P5034
.annotate 'line', 1317
.annotate 'line', 1318
    $P5035 = __lowered_lex_223."key"()
    set $S5007, $P5035
    set fb_tmp_45, __lowered_lex_240
    repr_defined $I5011, fb_tmp_45
    unless $I5011 goto if681_else1948 
    $P5037 = __lowered_lex_223."key"()
    set $S5008, $P5037
    set $P5036, fb_tmp_45[$S5008]
    set $P5039, $P5036
    goto if681_end1949
  if681_else1948:
    null $P5038
    set $P5039, $P5038
  if681_end1949:
    unless_null $P5039, vivi_6821950
    nqp_get_sc_object $P5040, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5039, $P5040
  vivi_6821950:
    set $N5004, $P5039
    set $N5005, 2
    islt $I5010, $N5004, $N5005
    set $I5014, $I5010
    unless $I5010 goto if680_end1947 
    set fb_tmp_46, __lowered_lex_224
    repr_defined $I5013, fb_tmp_46
    unless $I5013 goto if683_else1951 
    $P5042 = __lowered_lex_223."key"()
    set $S5009, $P5042
    set $P5041, fb_tmp_46[$S5009]
    set $P5044, $P5041
    goto if683_end1952
  if683_else1951:
    null $P5043
    set $P5044, $P5043
  if683_end1952:
    unless_null $P5044, vivi_6841953
    nqp_get_sc_object $P5045, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5044, $P5045
  vivi_6841953:
    set $N5006, $P5044
    set $N5007, 1
    iseq $I5012, $N5006, $N5007
    set $I5014, $I5012
  if680_end1947:
    unless $I5014 goto if679_else1944 
    set $I5015, 1
    goto if679_end1945
  if679_else1944:
    set $I5015, 2
  if679_end1945:
    box $P5046, $I5015
    set __lowered_lex_240[$S5007], $P5046
    set $P5047, $P5046
    goto while678_test1939 
  while678_handlers1942:
    .get_results ($P5048)
    pop_upto_eh $P5048
    getattribute $P5049, $P5048, 'type'
    eq $P5049, .CONTROL_LOOP_NEXT, while678_test1939
    eq $P5049, .CONTROL_LOOP_REDO, while678_redo1941
  while678_done1943:
    pop_eh 
    set fb_tmp_47, __lowered_lex_224
    repr_defined $I5017, fb_tmp_47
    unless $I5017 goto if686_else1956 
    set $P5050, fb_tmp_47[""]
    set $P5052, $P5050
    goto if686_end1957
  if686_else1956:
    null $P5051
    set $P5052, $P5051
  if686_end1957:
    unless_null $P5052, vivi_6871958
    nqp_get_sc_object $P5053, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5052, $P5053
  vivi_6871958:
    set $N5008, $P5052
    set $N5009, __lowered_lex_226
    isgt $I5016, $N5008, $N5009
    box $P5059, $I5016
    set $P5058, $P5059
    unless $I5016 goto if685_end1955 
    set fb_tmp_48, __lowered_lex_224
    repr_defined $I5018, fb_tmp_48
    unless $I5018 goto if688_else1959 
    set $P5054, fb_tmp_48[""]
    set $P5056, $P5054
    goto if688_end1960
  if688_else1959:
    null $P5055
    set $P5056, $P5055
  if688_end1960:
    unless_null $P5056, vivi_6891961
    nqp_get_sc_object $P5057, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5056, $P5057
  vivi_6891961:
    set __lowered_lex_226, $P5056
    set $P5058, __lowered_lex_226
  if685_end1955:
    set $P5060, $P5058
    goto while677_test1934 
  while677_handlers1937:
    .get_results ($P5061)
    pop_upto_eh $P5061
    getattribute $P5062, $P5061, 'type'
    eq $P5062, .CONTROL_LOOP_NEXT, while677_test1934
    eq $P5062, .CONTROL_LOOP_REDO, while677_redo1936
  while677_done1938:
    pop_eh 
    set $I5019, __lowered_lex_226
    set __lowered_lex_239, $I5019
    box $P5158, __lowered_lex_239
    set $P5157, $P5158
    goto if675_end1931
  if675_else1930:
    set $S5010, __lowered_lex_241
    iseq $I5020, $S5010, "subrule"
    set $I5022, $I5020
    unless $I5020 goto if691_end1965 
.annotate 'line', 1324
    $P5063 = __lowered_lex_238."subtype"()
    set $S5011, $P5063
    iseq $I5021, $S5011, "capture"
    set $I5022, $I5021
  if691_end1965:
    unless $I5022 goto if690_else1962 
.annotate 'line', 1325
    $P5064 = __lowered_lex_238."name"()
    set __lowered_lex_228, $P5064
    set $S5012, __lowered_lex_228
    iseq $I5023, $S5012, ""
    unless $I5023 goto if692_end1967 
.annotate 'line', 1326
    box $P5065, __lowered_lex_239
    set __lowered_lex_228, $P5065
    $P5066 = __lowered_lex_238."name"(__lowered_lex_228)
  if692_end1967:
    set $S5013, __lowered_lex_228
    split $P5067, "=", $S5013
    set __lowered_lex_229, $P5067
    iter $P5068, __lowered_lex_229
    set lowered_for_it__8, $P5068
    new $P5072, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5072, while693_handlers1971
    push_eh $P5072
  while693_test1968:
    set $P5071, lowered_for_it__8
    unless lowered_for_it__8 goto while693_done1972 
  while693_redo1970:
    shift $P5069, lowered_for_it__8
    set __lowered_lex_227, $P5069
.annotate 'line', 1328
    set $S5014, __lowered_lex_227
    iseq $I5024, $S5014, "0"
    set $I5026, $I5024
    if $I5024 goto unless695_end1976 
    set $N5010, __lowered_lex_227
    set $N5011, 0
    isgt $I5025, $N5010, $N5011
    set $I5026, $I5025
  unless695_end1976:
    unless $I5026 goto if694_end1974 
.annotate 'line', 1329
    set $N5013, __lowered_lex_227
    set $N5014, 1
    add $N5012, $N5013, $N5014
    set $I5027, $N5012
    set __lowered_lex_239, $I5027
  if694_end1974:
    set $S5015, __lowered_lex_227
    box $P5070, 1
    set __lowered_lex_240[$S5015], $P5070
    set $P5071, $P5070
    goto while693_test1968 
  while693_handlers1971:
    .get_results ($P5072)
    pop_upto_eh $P5072
    getattribute $P5073, $P5072, 'type'
    eq $P5073, .CONTROL_LOOP_NEXT, while693_test1968
    eq $P5073, .CONTROL_LOOP_REDO, while693_redo1970
  while693_done1972:
    pop_eh 
    set $P5156, $P5071
    goto if690_end1963
  if690_else1962:
    set $S5016, __lowered_lex_241
    iseq $I5028, $S5016, "subcapture"
    unless $I5028 goto if696_else1977 
.annotate 'line', 1333
.annotate 'line', 1334
    $P5076 = __lowered_lex_238."name"()
    set $S5017, $P5076
    split $P5075, " ", $S5017
    iter $P5074, $P5075
    set lowered_for_it__9, $P5074
    new $P5080, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5080, while697_handlers1982
    push_eh $P5080
  while697_test1979:
    set $P5079, lowered_for_it__9
    unless lowered_for_it__9 goto while697_done1983 
  while697_redo1981:
    shift $P5077, lowered_for_it__9
    set __lowered_lex_230, $P5077
    set $S5018, __lowered_lex_230
    iseq $I5029, $S5018, "0"
    set $I5031, $I5029
    if $I5029 goto unless699_end1987 
    set $N5015, __lowered_lex_230
    set $N5016, 0
    isgt $I5030, $N5015, $N5016
    set $I5031, $I5030
  unless699_end1987:
    unless $I5031 goto if698_end1985 
.annotate 'line', 1335
    set $N5018, __lowered_lex_230
    set $N5019, 1
    add $N5017, $N5018, $N5019
    set $I5032, $N5017
    set __lowered_lex_239, $I5032
  if698_end1985:
    set $S5019, __lowered_lex_230
    box $P5078, 1
    set __lowered_lex_240[$S5019], $P5078
    set $P5079, $P5078
    goto while697_test1979 
  while697_handlers1982:
    .get_results ($P5080)
    pop_upto_eh $P5080
    getattribute $P5081, $P5080, 'type'
    eq $P5081, .CONTROL_LOOP_NEXT, while697_test1979
    eq $P5081, .CONTROL_LOOP_REDO, while697_redo1981
  while697_done1983:
    pop_eh 
.annotate 'line', 1338
    set fb_tmp_49, __lowered_lex_238
    repr_defined $I5033, fb_tmp_49
    unless $I5033 goto if700_else1988 
    set $P5082, fb_tmp_49[0]
    set $P5084, $P5082
    goto if700_end1989
  if700_else1988:
    null $P5083
    set $P5084, $P5083
  if700_end1989:
    unless_null $P5084, vivi_7011990
    nqp_get_sc_object $P5085, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5084, $P5085
  vivi_7011990:
    $P5086 = "&capnames"($P5084, __lowered_lex_239)
    set __lowered_lex_232, $P5086
    iter $P5087, __lowered_lex_232
    set lowered_for_it__10, $P5087
    new $P5102, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5102, while702_handlers1994
    push_eh $P5102
  while702_test1991:
    set $P5101, lowered_for_it__10
    unless lowered_for_it__10 goto while702_done1995 
  while702_redo1993:
    shift $P5088, lowered_for_it__10
    set __lowered_lex_231, $P5088
.annotate 'line', 1339
    $P5089 = __lowered_lex_231."key"()
    set $S5020, $P5089
    set fb_tmp_50, __lowered_lex_240
    repr_defined $I5034, fb_tmp_50
    unless $I5034 goto if703_else1996 
    $P5091 = __lowered_lex_231."key"()
    set $S5021, $P5091
    set $P5090, fb_tmp_50[$S5021]
    set $P5093, $P5090
    goto if703_end1997
  if703_else1996:
    null $P5092
    set $P5093, $P5092
  if703_end1997:
    unless_null $P5093, vivi_7041998
    nqp_get_sc_object $P5094, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5093, $P5094
  vivi_7041998:
    set $N5021, $P5093
    set fb_tmp_51, __lowered_lex_232
    repr_defined $I5035, fb_tmp_51
    unless $I5035 goto if705_else1999 
    $P5096 = __lowered_lex_231."key"()
    set $S5022, $P5096
    set $P5095, fb_tmp_51[$S5022]
    set $P5098, $P5095
    goto if705_end2000
  if705_else1999:
    null $P5097
    set $P5098, $P5097
  if705_end2000:
    unless_null $P5098, vivi_7062001
    nqp_get_sc_object $P5099, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5098, $P5099
  vivi_7062001:
    set $N5022, $P5098
    add $N5020, $N5021, $N5022
    box $P5100, $N5020
    set __lowered_lex_240[$S5020], $P5100
    set $P5101, $P5100
    goto while702_test1991 
  while702_handlers1994:
    .get_results ($P5102)
    pop_upto_eh $P5102
    getattribute $P5103, $P5102, 'type'
    eq $P5103, .CONTROL_LOOP_NEXT, while702_test1991
    eq $P5103, .CONTROL_LOOP_REDO, while702_redo1993
  while702_done1995:
    pop_eh 
    set fb_tmp_52, __lowered_lex_232
    repr_defined $I5036, fb_tmp_52
    unless $I5036 goto if707_else2002 
    set $P5104, fb_tmp_52[""]
    set $P5106, $P5104
    goto if707_end2003
  if707_else2002:
    null $P5105
    set $P5106, $P5105
  if707_end2003:
    unless_null $P5106, vivi_7082004
    nqp_get_sc_object $P5107, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5106, $P5107
  vivi_7082004:
    set $I5037, $P5106
    set __lowered_lex_239, $I5037
    box $P5155, __lowered_lex_239
    set $P5154, $P5155
    goto if696_end1978
  if696_else1977:
    set $S5023, __lowered_lex_241
    iseq $I5038, $S5023, "quant"
    box $P5153, $I5038
    set $P5152, $P5153
    unless $I5038 goto if709_end2006 
.annotate 'line', 1342
.annotate 'line', 1343
    $P5108 = __lowered_lex_238."subtype"()
    set $S5024, $P5108
    iseq $I5039, $S5024, "item"
    box $P5109, $I5039
    set __lowered_lex_236, $P5109
.annotate 'line', 1344
    set fb_tmp_53, __lowered_lex_238
    repr_defined $I5040, fb_tmp_53
    unless $I5040 goto if710_else2007 
    set $P5110, fb_tmp_53[0]
    set $P5112, $P5110
    goto if710_end2008
  if710_else2007:
    null $P5111
    set $P5112, $P5111
  if710_end2008:
    unless_null $P5112, vivi_7112009
    nqp_get_sc_object $P5113, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5112, $P5113
  vivi_7112009:
    $P5114 = "&capnames"($P5112, __lowered_lex_239)
    set __lowered_lex_237, $P5114
    iter $P5115, __lowered_lex_237
    set lowered_for_it__11, $P5115
    new $P5122, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5122, while712_handlers2013
    push_eh $P5122
  while712_test2010:
    set $P5121, lowered_for_it__11
    unless lowered_for_it__11 goto while712_done2014 
  while712_redo2012:
    shift $P5116, lowered_for_it__11
    set __lowered_lex_233, $P5116
.annotate 'line', 1345
    $P5117 = __lowered_lex_233."key"()
    set $S5025, $P5117
    unless __lowered_lex_236 goto if713_else2015 
    $P5118 = __lowered_lex_233."value"()
    set $P5119, $P5118
    goto if713_end2016
  if713_else2015:
    box $P5120, 2
    set $P5119, $P5120
  if713_end2016:
    set __lowered_lex_240[$S5025], $P5119
    set $P5121, $P5119
    goto while712_test2010 
  while712_handlers2013:
    .get_results ($P5122)
    pop_upto_eh $P5122
    getattribute $P5123, $P5122, 'type'
    eq $P5123, .CONTROL_LOOP_NEXT, while712_test2010
    eq $P5123, .CONTROL_LOOP_REDO, while712_redo2012
  while712_done2014:
    pop_eh 
    set fb_tmp_54, __lowered_lex_237
    repr_defined $I5041, fb_tmp_54
    unless $I5041 goto if714_else2017 
    set $P5124, fb_tmp_54[""]
    set $P5126, $P5124
    goto if714_end2018
  if714_else2017:
    null $P5125
    set $P5126, $P5125
  if714_end2018:
    unless_null $P5126, vivi_7152019
    nqp_get_sc_object $P5127, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5126, $P5127
  vivi_7152019:
    set $I5042, $P5126
    set __lowered_lex_239, $I5042
    set fb_tmp_55, __lowered_lex_238
    repr_defined $I5043, fb_tmp_55
    unless $I5043 goto if717_else2022 
    set $P5128, fb_tmp_55[1]
    set $P5130, $P5128
    goto if717_end2023
  if717_else2022:
    null $P5129
    set $P5130, $P5129
  if717_end2023:
    unless_null $P5130, vivi_7182024
    nqp_get_sc_object $P5131, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5130, $P5131
  vivi_7182024:
    set $P5150, $P5130
    unless $P5130 goto if716_end2021 
.annotate 'line', 1347
.annotate 'line', 1349
    set fb_tmp_56, __lowered_lex_238
    repr_defined $I5044, fb_tmp_56
    unless $I5044 goto if719_else2025 
    set $P5132, fb_tmp_56[1]
    set $P5134, $P5132
    goto if719_end2026
  if719_else2025:
    null $P5133
    set $P5134, $P5133
  if719_end2026:
    unless_null $P5134, vivi_7202027
    nqp_get_sc_object $P5135, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5134, $P5135
  vivi_7202027:
    $P5136 = "&capnames"($P5134, __lowered_lex_239)
    set __lowered_lex_235, $P5136
    iter $P5137, __lowered_lex_235
    set lowered_for_it__12, $P5137
    new $P5144, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5144, while721_handlers2031
    push_eh $P5144
  while721_test2028:
    set $P5143, lowered_for_it__12
    unless lowered_for_it__12 goto while721_done2032 
  while721_redo2030:
    shift $P5138, lowered_for_it__12
    set __lowered_lex_234, $P5138
.annotate 'line', 1350
    $P5139 = __lowered_lex_234."key"()
    set $S5026, $P5139
    unless __lowered_lex_236 goto if722_else2033 
    $P5140 = __lowered_lex_234."value"()
    set $P5141, $P5140
    goto if722_end2034
  if722_else2033:
    box $P5142, 2
    set $P5141, $P5142
  if722_end2034:
    set __lowered_lex_240[$S5026], $P5141
    set $P5143, $P5141
    goto while721_test2028 
  while721_handlers2031:
    .get_results ($P5144)
    pop_upto_eh $P5144
    getattribute $P5145, $P5144, 'type'
    eq $P5145, .CONTROL_LOOP_NEXT, while721_test2028
    eq $P5145, .CONTROL_LOOP_REDO, while721_redo2030
  while721_done2032:
    pop_eh 
    set fb_tmp_57, __lowered_lex_235
    repr_defined $I5045, fb_tmp_57
    unless $I5045 goto if723_else2035 
    set $P5146, fb_tmp_57[""]
    set $P5148, $P5146
    goto if723_end2036
  if723_else2035:
    null $P5147
    set $P5148, $P5147
  if723_end2036:
    unless_null $P5148, vivi_7242037
    nqp_get_sc_object $P5149, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5148, $P5149
  vivi_7242037:
    set $I5046, $P5148
    set __lowered_lex_239, $I5046
    box $P5151, __lowered_lex_239
    set $P5150, $P5151
  if716_end2021:
    set $P5152, $P5150
  if709_end2006:
    set $P5154, $P5152
  if696_end1978:
    set $P5156, $P5154
  if690_end1963:
    set $P5157, $P5156
  if675_end1931:
  if667_end1911:
    box $P5159, __lowered_lex_239
    set __lowered_lex_240[""], $P5159
    .return (__lowered_lex_240) 
.end
.HLL "nqp"
.namespace []
.sub "TOP" :subid("cuid_149_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 474
    .param pmc __lowered_lex_242 
    .param pmc __lowered_lex_243 
    .local pmc fb_tmp_58 
    .local pmc fb_tmp_59 
    .local pmc fb_tmp_60 
    .local pmc fb_tmp_61 
    .local pmc fb_tmp_62 
.annotate 'line', 475
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 165
.annotate 'line', 477
    find_dynamic_lex $P5002, "$*W"
    unless_null $P5002, fallback2038
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5003, $P5004
    set fb_tmp_58, $P5003
    repr_defined $I5001, fb_tmp_58
    unless $I5001 goto if725_else2039 
    set $P5005, fb_tmp_58["$W"]
    set $P5007, $P5005
    goto if725_end2040
  if725_else2039:
    null $P5006
    set $P5007, $P5006
  if725_end2040:
    unless_null $P5007, vivi_7262041
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5007, $P5008
  vivi_7262041:
    unless_null $P5007, vivi_7272042
    die "Contextual $*W not found"
    box $P5009, "Contextual $*W not found"
    set $P5007, $P5009
  vivi_7272042:
    set $P5002, $P5007
  fallback2038:
    $P5010 = $P5002."sc"()
.annotate 'line', 478
    find_dynamic_lex $P5011, "$*W"
    unless_null $P5011, fallback2043
    nqp_get_sc_object $P5013, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5012, $P5013
    set fb_tmp_59, $P5012
    repr_defined $I5002, fb_tmp_59
    unless $I5002 goto if728_else2044 
    set $P5014, fb_tmp_59["$W"]
    set $P5016, $P5014
    goto if728_end2045
  if728_else2044:
    null $P5015
    set $P5016, $P5015
  if728_end2045:
    unless_null $P5016, vivi_7292046
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_7292046:
    unless_null $P5016, vivi_7302047
    die "Contextual $*W not found"
    box $P5018, "Contextual $*W not found"
    set $P5016, $P5018
  vivi_7302047:
    set $P5011, $P5016
  fallback2043:
    $P5019 = $P5011."code_ref_blocks"()
.annotate 'line', 480
    find_dynamic_lex $P5020, "$*W"
    unless_null $P5020, fallback2048
    nqp_get_sc_object $P5022, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5021, $P5022
    set fb_tmp_60, $P5021
    repr_defined $I5003, fb_tmp_60
    unless $I5003 goto if731_else2049 
    set $P5023, fb_tmp_60["$W"]
    set $P5025, $P5023
    goto if731_end2050
  if731_else2049:
    null $P5024
    set $P5025, $P5024
  if731_end2050:
    unless_null $P5025, vivi_7322051
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5025, $P5026
  vivi_7322051:
    unless_null $P5025, vivi_7332052
    die "Contextual $*W not found"
    box $P5027, "Contextual $*W not found"
    set $P5025, $P5027
  vivi_7332052:
    set $P5020, $P5025
  fallback2048:
    $P5028 = $P5020."load_dependency_tasks"()
.annotate 'line', 481
    find_dynamic_lex $P5029, "$*W"
    unless_null $P5029, fallback2053
    nqp_get_sc_object $P5031, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5030, $P5031
    set fb_tmp_61, $P5030
    repr_defined $I5004, fb_tmp_61
    unless $I5004 goto if734_else2054 
    set $P5032, fb_tmp_61["$W"]
    set $P5034, $P5032
    goto if734_end2055
  if734_else2054:
    null $P5033
    set $P5034, $P5033
  if734_end2055:
    unless_null $P5034, vivi_7352056
    nqp_get_sc_object $P5035, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5034, $P5035
  vivi_7352056:
    unless_null $P5034, vivi_7362057
    die "Contextual $*W not found"
    box $P5036, "Contextual $*W not found"
    set $P5034, $P5036
  vivi_7362057:
    set $P5029, $P5034
  fallback2053:
    $P5037 = $P5029."fixup_tasks"()
.annotate 'line', 482
    nqp_decontainerize $P5038, __lowered_lex_242
    unless_null __lowered_lex_243, fallback2060
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_243, $P5039
  fallback2060:
    set fb_tmp_62, __lowered_lex_243
    repr_defined $I5005, fb_tmp_62
    unless $I5005 goto if737_else2058 
    set $P5040, fb_tmp_62["nibbler"]
    set $P5042, $P5040
    goto if737_end2059
  if737_else2058:
    null $P5041
    set $P5042, $P5041
  if737_end2059:
    unless_null $P5042, vivi_7382061
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5042, $P5043
  vivi_7382061:
    $P5044 = $P5042."ast"()
    $P5045 = $P5038."qbuildsub"($P5044, 1 :named("anon"), 1 :named("addself"))
    $P5046 = $P5001."new"($P5045, "P6Regex" :named("hll"), $P5010 :named("sc"), $P5019 :named("code_ref_blocks"), 0 :named("compilation_mode"), $P5028 :named("pre_deserialize"), $P5037 :named("post_deserialize"))
    $P5047 = __lowered_lex_243."make"($P5046)
    .return ($P5047) 
.end
.HLL "nqp"
.namespace []
.sub "nibbler" :subid("cuid_150_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 486
    .param pmc __lowered_lex_244 
    .param pmc __lowered_lex_245 
    .local pmc fb_tmp_63 
    unless_null __lowered_lex_245, fallback2064
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_245, $P5001
  fallback2064:
    set fb_tmp_63, __lowered_lex_245
    repr_defined $I5001, fb_tmp_63
    unless $I5001 goto if739_else2062 
    set $P5002, fb_tmp_63["termseq"]
    set $P5004, $P5002
    goto if739_end2063
  if739_else2062:
    null $P5003
    set $P5004, $P5003
  if739_end2063:
    unless_null $P5004, vivi_7402065
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_7402065:
    $P5006 = $P5004."ast"()
    $P5007 = __lowered_lex_245."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "termseq" :subid("cuid_151_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 488
    .param pmc __lowered_lex_246 
    .param pmc __lowered_lex_247 
    .local pmc fb_tmp_64 
    .local pmc fb_tmp_65 
    unless_null __lowered_lex_247, fallback2070
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_247, $P5001
  fallback2070:
    set fb_tmp_64, __lowered_lex_247
    repr_defined $I5001, fb_tmp_64
    unless $I5001 goto if742_else2068 
    set $P5002, fb_tmp_64["termaltseq"]
    set $P5004, $P5002
    goto if742_end2069
  if742_else2068:
    null $P5003
    set $P5004, $P5003
  if742_end2069:
    unless_null $P5004, vivi_7432071
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_7432071:
    set $P5013, $P5004
    unless $P5004 goto if741_end2067 
.annotate 'line', 489
    unless_null __lowered_lex_247, fallback2074
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_247, $P5006
  fallback2074:
    set fb_tmp_65, __lowered_lex_247
    repr_defined $I5002, fb_tmp_65
    unless $I5002 goto if744_else2072 
    set $P5007, fb_tmp_65["termaltseq"]
    set $P5009, $P5007
    goto if744_end2073
  if744_else2072:
    null $P5008
    set $P5009, $P5008
  if744_end2073:
    unless_null $P5009, vivi_7452075
    nqp_get_sc_object $P5010, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5009, $P5010
  vivi_7452075:
    $P5011 = $P5009."ast"()
    $P5012 = __lowered_lex_247."make"($P5011)
    set $P5013, $P5012
  if741_end2067:
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "termaltseq" :subid("cuid_152_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 491
    .param pmc __lowered_lex_249 
    .param pmc __lowered_lex_250 
    .local pmc __lowered_lex_251 
    .local pmc fb_tmp_66 
    .local pmc fb_tmp_67 
    .local pmc fb_tmp_68 
    .local pmc lowered_for_it__13 
    .local pmc fb_tmp_69 
    .local pmc __lowered_lex_248 
.annotate 'line', 492
    unless_null __lowered_lex_250, fallback2080
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_250, $P5001
  fallback2080:
    set fb_tmp_67, __lowered_lex_250
    repr_defined $I5002, fb_tmp_67
    unless $I5002 goto if747_else2078 
    set $P5002, fb_tmp_67["termconjseq"]
    set $P5004, $P5002
    goto if747_end2079
  if747_else2078:
    null $P5003
    set $P5004, $P5003
  if747_end2079:
    unless_null $P5004, vivi_7482081
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_7482081:
    set fb_tmp_66, $P5004
    repr_defined $I5001, fb_tmp_66
    unless $I5001 goto if746_else2076 
    set $P5006, fb_tmp_66[0]
    set $P5008, $P5006
    goto if746_end2077
  if746_else2076:
    null $P5007
    set $P5008, $P5007
  if746_end2077:
    unless_null $P5008, vivi_7492082
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_7492082:
    $P5010 = $P5008."ast"()
    set __lowered_lex_251, $P5010
    unless_null __lowered_lex_250, fallback2087
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_250, $P5011
  fallback2087:
    set fb_tmp_68, __lowered_lex_250
    repr_defined $I5004, fb_tmp_68
    unless $I5004 goto if751_else2085 
    set $P5012, fb_tmp_68["termconjseq"]
    set $P5014, $P5012
    goto if751_end2086
  if751_else2085:
    null $P5013
    set $P5014, $P5013
  if751_end2086:
    unless_null $P5014, vivi_7522088
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_7522088:
    set $N5001, $P5014
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if750_end2084 
.annotate 'line', 493
.annotate 'line', 494
    nqp_get_sc_object $P5016, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5017 = $P5016."new"("altseq" :named("rxtype"), __lowered_lex_250 :named("node"))
    set __lowered_lex_251, $P5017
    unless_null __lowered_lex_250, fallback2091
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_250, $P5019
  fallback2091:
    set fb_tmp_69, __lowered_lex_250
    repr_defined $I5005, fb_tmp_69
    unless $I5005 goto if753_else2089 
    set $P5020, fb_tmp_69["termconjseq"]
    set $P5022, $P5020
    goto if753_end2090
  if753_else2089:
    null $P5021
    set $P5022, $P5021
  if753_end2090:
    unless_null $P5022, vivi_7542092
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_7542092:
    iter $P5018, $P5022
    set lowered_for_it__13, $P5018
    new $P5028, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5028, while755_handlers2096
    push_eh $P5028
  while755_test2093:
    set $P5027, lowered_for_it__13
    unless lowered_for_it__13 goto while755_done2097 
  while755_redo2095:
    shift $P5024, lowered_for_it__13
    set __lowered_lex_248, $P5024
.annotate 'line', 495
    $P5025 = __lowered_lex_248."ast"()
    $P5026 = __lowered_lex_251."push"($P5025)
    set $P5027, $P5026
    goto while755_test2093 
  while755_handlers2096:
    .get_results ($P5028)
    pop_upto_eh $P5028
    getattribute $P5029, $P5028, 'type'
    eq $P5029, .CONTROL_LOOP_NEXT, while755_test2093
    eq $P5029, .CONTROL_LOOP_REDO, while755_redo2095
  while755_done2097:
    pop_eh 
  if750_end2084:
.annotate 'line', 497
    $P5030 = __lowered_lex_250."make"(__lowered_lex_251)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "termconjseq" :subid("cuid_153_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 500
    .param pmc __lowered_lex_253 
    .param pmc __lowered_lex_254 
    .local pmc __lowered_lex_255 
    .local pmc fb_tmp_70 
    .local pmc fb_tmp_71 
    .local pmc fb_tmp_72 
    .local pmc lowered_for_it__14 
    .local pmc fb_tmp_73 
    .local pmc __lowered_lex_252 
.annotate 'line', 501
    unless_null __lowered_lex_254, fallback2102
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_254, $P5001
  fallback2102:
    set fb_tmp_71, __lowered_lex_254
    repr_defined $I5002, fb_tmp_71
    unless $I5002 goto if757_else2100 
    set $P5002, fb_tmp_71["termalt"]
    set $P5004, $P5002
    goto if757_end2101
  if757_else2100:
    null $P5003
    set $P5004, $P5003
  if757_end2101:
    unless_null $P5004, vivi_7582103
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_7582103:
    set fb_tmp_70, $P5004
    repr_defined $I5001, fb_tmp_70
    unless $I5001 goto if756_else2098 
    set $P5006, fb_tmp_70[0]
    set $P5008, $P5006
    goto if756_end2099
  if756_else2098:
    null $P5007
    set $P5008, $P5007
  if756_end2099:
    unless_null $P5008, vivi_7592104
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_7592104:
    $P5010 = $P5008."ast"()
    set __lowered_lex_255, $P5010
    unless_null __lowered_lex_254, fallback2109
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_254, $P5011
  fallback2109:
    set fb_tmp_72, __lowered_lex_254
    repr_defined $I5004, fb_tmp_72
    unless $I5004 goto if761_else2107 
    set $P5012, fb_tmp_72["termalt"]
    set $P5014, $P5012
    goto if761_end2108
  if761_else2107:
    null $P5013
    set $P5014, $P5013
  if761_end2108:
    unless_null $P5014, vivi_7622110
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_7622110:
    set $N5001, $P5014
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if760_end2106 
.annotate 'line', 502
.annotate 'line', 503
    nqp_get_sc_object $P5016, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5017 = $P5016."new"("conjseq" :named("rxtype"), __lowered_lex_254 :named("node"))
    set __lowered_lex_255, $P5017
    unless_null __lowered_lex_254, fallback2113
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_254, $P5019
  fallback2113:
    set fb_tmp_73, __lowered_lex_254
    repr_defined $I5005, fb_tmp_73
    unless $I5005 goto if763_else2111 
    set $P5020, fb_tmp_73["termalt"]
    set $P5022, $P5020
    goto if763_end2112
  if763_else2111:
    null $P5021
    set $P5022, $P5021
  if763_end2112:
    unless_null $P5022, vivi_7642114
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_7642114:
    iter $P5018, $P5022
    set lowered_for_it__14, $P5018
    new $P5028, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5028, while765_handlers2118
    push_eh $P5028
  while765_test2115:
    set $P5027, lowered_for_it__14
    unless lowered_for_it__14 goto while765_done2119 
  while765_redo2117:
    shift $P5024, lowered_for_it__14
    set __lowered_lex_252, $P5024
.annotate 'line', 504
    $P5025 = __lowered_lex_252."ast"()
    $P5026 = __lowered_lex_255."push"($P5025)
    set $P5027, $P5026
    goto while765_test2115 
  while765_handlers2118:
    .get_results ($P5028)
    pop_upto_eh $P5028
    getattribute $P5029, $P5028, 'type'
    eq $P5029, .CONTROL_LOOP_NEXT, while765_test2115
    eq $P5029, .CONTROL_LOOP_REDO, while765_redo2117
  while765_done2119:
    pop_eh 
  if760_end2106:
.annotate 'line', 506
    $P5030 = __lowered_lex_254."make"(__lowered_lex_255)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "termalt" :subid("cuid_154_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 509
    .param pmc __lowered_lex_257 
    .param pmc __lowered_lex_258 
    .local pmc __lowered_lex_259 
    .local pmc fb_tmp_74 
    .local pmc fb_tmp_75 
    .local pmc fb_tmp_76 
    .local pmc lowered_for_it__15 
    .local pmc fb_tmp_77 
    .local pmc __lowered_lex_256 
.annotate 'line', 510
    unless_null __lowered_lex_258, fallback2124
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_258, $P5001
  fallback2124:
    set fb_tmp_75, __lowered_lex_258
    repr_defined $I5002, fb_tmp_75
    unless $I5002 goto if767_else2122 
    set $P5002, fb_tmp_75["termconj"]
    set $P5004, $P5002
    goto if767_end2123
  if767_else2122:
    null $P5003
    set $P5004, $P5003
  if767_end2123:
    unless_null $P5004, vivi_7682125
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_7682125:
    set fb_tmp_74, $P5004
    repr_defined $I5001, fb_tmp_74
    unless $I5001 goto if766_else2120 
    set $P5006, fb_tmp_74[0]
    set $P5008, $P5006
    goto if766_end2121
  if766_else2120:
    null $P5007
    set $P5008, $P5007
  if766_end2121:
    unless_null $P5008, vivi_7692126
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_7692126:
    $P5010 = $P5008."ast"()
    set __lowered_lex_259, $P5010
    unless_null __lowered_lex_258, fallback2131
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_258, $P5011
  fallback2131:
    set fb_tmp_76, __lowered_lex_258
    repr_defined $I5004, fb_tmp_76
    unless $I5004 goto if771_else2129 
    set $P5012, fb_tmp_76["termconj"]
    set $P5014, $P5012
    goto if771_end2130
  if771_else2129:
    null $P5013
    set $P5014, $P5013
  if771_end2130:
    unless_null $P5014, vivi_7722132
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_7722132:
    set $N5001, $P5014
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if770_end2128 
.annotate 'line', 511
.annotate 'line', 512
    nqp_get_sc_object $P5016, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5017 = $P5016."new"("alt" :named("rxtype"), __lowered_lex_258 :named("node"))
    set __lowered_lex_259, $P5017
    unless_null __lowered_lex_258, fallback2135
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_258, $P5019
  fallback2135:
    set fb_tmp_77, __lowered_lex_258
    repr_defined $I5005, fb_tmp_77
    unless $I5005 goto if773_else2133 
    set $P5020, fb_tmp_77["termconj"]
    set $P5022, $P5020
    goto if773_end2134
  if773_else2133:
    null $P5021
    set $P5022, $P5021
  if773_end2134:
    unless_null $P5022, vivi_7742136
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_7742136:
    iter $P5018, $P5022
    set lowered_for_it__15, $P5018
    new $P5028, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5028, while775_handlers2140
    push_eh $P5028
  while775_test2137:
    set $P5027, lowered_for_it__15
    unless lowered_for_it__15 goto while775_done2141 
  while775_redo2139:
    shift $P5024, lowered_for_it__15
    set __lowered_lex_256, $P5024
.annotate 'line', 513
    $P5025 = __lowered_lex_256."ast"()
    $P5026 = __lowered_lex_259."push"($P5025)
    set $P5027, $P5026
    goto while775_test2137 
  while775_handlers2140:
    .get_results ($P5028)
    pop_upto_eh $P5028
    getattribute $P5029, $P5028, 'type'
    eq $P5029, .CONTROL_LOOP_NEXT, while775_test2137
    eq $P5029, .CONTROL_LOOP_REDO, while775_redo2139
  while775_done2141:
    pop_eh 
  if770_end2128:
.annotate 'line', 515
    $P5030 = __lowered_lex_258."make"(__lowered_lex_259)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "termconj" :subid("cuid_155_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 518
    .param pmc __lowered_lex_261 
    .param pmc __lowered_lex_262 
    .local pmc __lowered_lex_263 
    .local pmc fb_tmp_78 
    .local pmc fb_tmp_79 
    .local pmc fb_tmp_80 
    .local pmc lowered_for_it__16 
    .local pmc fb_tmp_81 
    .local pmc __lowered_lex_260 
.annotate 'line', 519
    unless_null __lowered_lex_262, fallback2146
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_262, $P5001
  fallback2146:
    set fb_tmp_79, __lowered_lex_262
    repr_defined $I5002, fb_tmp_79
    unless $I5002 goto if777_else2144 
    set $P5002, fb_tmp_79["termish"]
    set $P5004, $P5002
    goto if777_end2145
  if777_else2144:
    null $P5003
    set $P5004, $P5003
  if777_end2145:
    unless_null $P5004, vivi_7782147
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_7782147:
    set fb_tmp_78, $P5004
    repr_defined $I5001, fb_tmp_78
    unless $I5001 goto if776_else2142 
    set $P5006, fb_tmp_78[0]
    set $P5008, $P5006
    goto if776_end2143
  if776_else2142:
    null $P5007
    set $P5008, $P5007
  if776_end2143:
    unless_null $P5008, vivi_7792148
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_7792148:
    $P5010 = $P5008."ast"()
    set __lowered_lex_263, $P5010
    unless_null __lowered_lex_262, fallback2153
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_262, $P5011
  fallback2153:
    set fb_tmp_80, __lowered_lex_262
    repr_defined $I5004, fb_tmp_80
    unless $I5004 goto if781_else2151 
    set $P5012, fb_tmp_80["termish"]
    set $P5014, $P5012
    goto if781_end2152
  if781_else2151:
    null $P5013
    set $P5014, $P5013
  if781_end2152:
    unless_null $P5014, vivi_7822154
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_7822154:
    set $N5001, $P5014
    set $N5002, 1
    isgt $I5003, $N5001, $N5002
    unless $I5003 goto if780_end2150 
.annotate 'line', 520
.annotate 'line', 521
    nqp_get_sc_object $P5016, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5017 = $P5016."new"("conj" :named("rxtype"), __lowered_lex_262 :named("node"))
    set __lowered_lex_263, $P5017
    unless_null __lowered_lex_262, fallback2157
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_262, $P5019
  fallback2157:
    set fb_tmp_81, __lowered_lex_262
    repr_defined $I5005, fb_tmp_81
    unless $I5005 goto if783_else2155 
    set $P5020, fb_tmp_81["termish"]
    set $P5022, $P5020
    goto if783_end2156
  if783_else2155:
    null $P5021
    set $P5022, $P5021
  if783_end2156:
    unless_null $P5022, vivi_7842158
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_7842158:
    iter $P5018, $P5022
    set lowered_for_it__16, $P5018
    new $P5028, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5028, while785_handlers2162
    push_eh $P5028
  while785_test2159:
    set $P5027, lowered_for_it__16
    unless lowered_for_it__16 goto while785_done2163 
  while785_redo2161:
    shift $P5024, lowered_for_it__16
    set __lowered_lex_260, $P5024
.annotate 'line', 522
    $P5025 = __lowered_lex_260."ast"()
    $P5026 = __lowered_lex_263."push"($P5025)
    set $P5027, $P5026
    goto while785_test2159 
  while785_handlers2162:
    .get_results ($P5028)
    pop_upto_eh $P5028
    getattribute $P5029, $P5028, 'type'
    eq $P5029, .CONTROL_LOOP_NEXT, while785_test2159
    eq $P5029, .CONTROL_LOOP_REDO, while785_redo2161
  while785_done2163:
    pop_eh 
  if780_end2150:
.annotate 'line', 524
    $P5030 = __lowered_lex_262."make"(__lowered_lex_263)
    .return ($P5030) 
.end
.HLL "nqp"
.namespace []
.sub "termish" :subid("cuid_156_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 527
    .param pmc __lowered_lex_266 
    .param pmc __lowered_lex_267 
    .local pmc __lowered_lex_268 
    .local pmc __lowered_lex_269 
    .local pmc lowered_for_it__17 
    .local pmc fb_tmp_82 
    .local pmc __lowered_lex_265 
    .local pmc __lowered_lex_264 
    .local pmc fb_tmp_83 
    .local pmc fb_tmp_84 
    .local pmc fb_tmp_85 
    .local pmc fb_tmp_86 
.annotate 'line', 528
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("concat" :named("rxtype"), __lowered_lex_267 :named("node"))
    set __lowered_lex_268, $P5002
    box $P5003, 0
    set __lowered_lex_269, $P5003
    unless_null __lowered_lex_267, fallback2166
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_267, $P5005
  fallback2166:
    set fb_tmp_82, __lowered_lex_267
    repr_defined $I5001, fb_tmp_82
    unless $I5001 goto if786_else2164 
    set $P5006, fb_tmp_82["noun"]
    set $P5008, $P5006
    goto if786_end2165
  if786_else2164:
    null $P5007
    set $P5008, $P5007
  if786_end2165:
    unless_null $P5008, vivi_7872167
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_7872167:
    iter $P5004, $P5008
    set lowered_for_it__17, $P5004
    new $P5049, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5049, while788_handlers2171
    push_eh $P5049
  while788_test2168:
    set $P5048, lowered_for_it__17
    unless lowered_for_it__17 goto while788_done2172 
  while788_redo2170:
    shift $P5010, lowered_for_it__17
    set __lowered_lex_265, $P5010
.annotate 'line', 530
.annotate 'line', 531
    $P5011 = __lowered_lex_265."ast"()
    set __lowered_lex_264, $P5011
    set $P5047, __lowered_lex_264
    unless __lowered_lex_264 goto if789_end2174 
.annotate 'line', 532
    set $P5013, __lowered_lex_269
    unless __lowered_lex_269 goto if793_end2182 
.annotate 'line', 533
    $P5012 = __lowered_lex_264."rxtype"()
    set $S5001, $P5012
    iseq $I5002, $S5001, "literal"
    box $P5014, $I5002
    set $P5013, $P5014
  if793_end2182:
    set $P5021, $P5013
    unless $P5013 goto if792_end2180 
.annotate 'line', 534
    nqp_get_sc_object $P5015, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 23
    set fb_tmp_83, __lowered_lex_264
    repr_defined $I5004, fb_tmp_83
    unless $I5004 goto if794_else2183 
    set $P5016, fb_tmp_83[0]
    set $P5018, $P5016
    goto if794_end2184
  if794_else2183:
    null $P5017
    set $P5018, $P5017
  if794_end2184:
    unless_null $P5018, vivi_7952185
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5018, $P5019
  vivi_7952185:
    $P5020 = $P5015."ACCEPTS"($P5018)
    isfalse $I5003, $P5020
    box $P5022, $I5003
    set $P5021, $P5022
  if792_end2180:
    set $P5025, $P5021
    unless $P5021 goto if791_end2178 
.annotate 'line', 535
    $P5023 = __lowered_lex_269."subtype"()
    set $S5002, $P5023
    $P5024 = __lowered_lex_264."subtype"()
    set $S5003, $P5024
    iseq $I5005, $S5002, $S5003
    box $P5026, $I5005
    set $P5025, $P5026
  if791_end2178:
    unless $P5025 goto if790_else2175 
    set fb_tmp_84, __lowered_lex_269
    repr_defined $I5006, fb_tmp_84
    unless $I5006 goto if796_else2186 
    set $P5027, fb_tmp_84[0]
    set $P5029, $P5027
    goto if796_end2187
  if796_else2186:
    null $P5028
    set $P5029, $P5028
  if796_end2187:
    unless_null $P5029, vivi_7972188
    nqp_get_sc_object $P5030, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5029, $P5030
  vivi_7972188:
    set $S5005, $P5029
    set fb_tmp_85, __lowered_lex_264
    repr_defined $I5007, fb_tmp_85
    unless $I5007 goto if798_else2189 
    set $P5031, fb_tmp_85[0]
    set $P5033, $P5031
    goto if798_end2190
  if798_else2189:
    null $P5032
    set $P5033, $P5032
  if798_end2190:
    unless_null $P5033, vivi_7992191
    nqp_get_sc_object $P5034, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5033, $P5034
  vivi_7992191:
    set $S5006, $P5033
    concat $S5004, $S5005, $S5006
    box $P5035, $S5004
    set __lowered_lex_269[0], $P5035
    set $P5046, $P5035
    goto if790_end2176
  if790_else2175:
.annotate 'line', 538
.annotate 'line', 539
    $P5036 = __lowered_lex_265."ast"()
    __lowered_lex_268."push"($P5036)
.annotate 'line', 540
    $P5037 = __lowered_lex_264."rxtype"()
    set $S5007, $P5037
    iseq $I5008, $S5007, "literal"
    set $I5011, $I5008
    unless $I5008 goto if801_end2195 
.annotate 'line', 541
    nqp_get_sc_object $P5038, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 23
    set fb_tmp_86, __lowered_lex_264
    repr_defined $I5010, fb_tmp_86
    unless $I5010 goto if802_else2196 
    set $P5039, fb_tmp_86[0]
    set $P5041, $P5039
    goto if802_end2197
  if802_else2196:
    null $P5040
    set $P5041, $P5040
  if802_end2197:
    unless_null $P5041, vivi_8032198
    nqp_get_sc_object $P5042, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5041, $P5042
  vivi_8032198:
    $P5043 = $P5038."ACCEPTS"($P5041)
    isfalse $I5009, $P5043
    set $I5011, $I5009
  if801_end2195:
    unless $I5011 goto if800_else2192 
    set $P5044, __lowered_lex_264
    goto if800_end2193
  if800_else2192:
    box $P5045, 0
    set $P5044, $P5045
  if800_end2193:
    set __lowered_lex_269, $P5044
    set $P5046, __lowered_lex_269
  if790_end2176:
    set $P5047, $P5046
  if789_end2174:
    set $P5048, $P5047
    goto while788_test2168 
  while788_handlers2171:
    .get_results ($P5049)
    pop_upto_eh $P5049
    getattribute $P5050, $P5049, 'type'
    eq $P5050, .CONTROL_LOOP_NEXT, while788_test2168
    eq $P5050, .CONTROL_LOOP_REDO, while788_redo2170
  while788_done2172:
    pop_eh 
.annotate 'line', 546
    $P5051 = __lowered_lex_267."make"(__lowered_lex_268)
    .return ($P5051) 
.end
.HLL "nqp"
.namespace []
.sub "quantified_atom" :subid("cuid_157_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 549
    .param pmc __lowered_lex_271 
    .param pmc __lowered_lex_272 
    .local pmc __lowered_lex_273 
    .local pmc __lowered_lex_274 
    .local pmc __lowered_lex_275 
    .local pmc fb_tmp_87 
    .local pmc fb_tmp_88 
    .local pmc fb_tmp_89 
    .local pmc fb_tmp_90 
    .local pmc __lowered_lex_270 
    .local pmc fb_tmp_91 
    .local pmc fb_tmp_92 
    .local pmc fb_tmp_93 
    .local pmc fb_tmp_94 
    .local pmc fb_tmp_95 
    .local pmc fb_tmp_96 
    .local pmc fb_tmp_97 
    .local pmc fb_tmp_98 
    .local pmc fb_tmp_99 
    .local pmc fb_tmp_100 
    .local pmc fb_tmp_101 
    .local pmc fb_tmp_102 
    .local pmc fb_tmp_103 
    .local pmc pkg_viv_tmp_6 
    .local pmc fb_tmp_104 
    .local pmc fb_tmp_105 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_274, $P5001
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_275, $P5002
.annotate 'line', 550
    unless_null __lowered_lex_272, fallback2201
    nqp_get_sc_object $P5003, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5003
  fallback2201:
    set fb_tmp_87, __lowered_lex_272
    repr_defined $I5001, fb_tmp_87
    unless $I5001 goto if804_else2199 
    set $P5004, fb_tmp_87["atom"]
    set $P5006, $P5004
    goto if804_end2200
  if804_else2199:
    null $P5005
    set $P5006, $P5005
  if804_end2200:
    unless_null $P5006, vivi_8052202
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_8052202:
    $P5008 = $P5006."ast"()
    set __lowered_lex_273, $P5008
    unless_null __lowered_lex_272, fallback2207
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5009
  fallback2207:
    set fb_tmp_88, __lowered_lex_272
    repr_defined $I5002, fb_tmp_88
    unless $I5002 goto if807_else2205 
    set $P5010, fb_tmp_88["sigmaybe"]
    set $P5012, $P5010
    goto if807_end2206
  if807_else2205:
    null $P5011
    set $P5012, $P5011
  if807_end2206:
    unless_null $P5012, vivi_8082208
    nqp_get_sc_object $P5013, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5012, $P5013
  vivi_8082208:
    unless $P5012 goto if806_end2204 
.annotate 'line', 552
    unless_null __lowered_lex_272, fallback2211
    nqp_get_sc_object $P5014, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5014
  fallback2211:
    set fb_tmp_89, __lowered_lex_272
    repr_defined $I5003, fb_tmp_89
    unless $I5003 goto if809_else2209 
    set $P5015, fb_tmp_89["sigmaybe"]
    set $P5017, $P5015
    goto if809_end2210
  if809_else2209:
    null $P5016
    set $P5017, $P5016
  if809_end2210:
    unless_null $P5017, vivi_8102212
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5017, $P5018
  vivi_8102212:
    $P5019 = $P5017."ast"()
    set __lowered_lex_274, $P5019
  if806_end2204:
    unless __lowered_lex_274 goto if811_end2214 
.annotate 'line', 553
    nqp_get_sc_object $P5020, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5021 = $P5020."new"(__lowered_lex_273, __lowered_lex_274, "concat" :named("rxtype"))
    set __lowered_lex_273, $P5021
  if811_end2214:
    unless_null __lowered_lex_272, fallback2219
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5022
  fallback2219:
    set fb_tmp_90, __lowered_lex_272
    repr_defined $I5004, fb_tmp_90
    unless $I5004 goto if813_else2217 
    set $P5023, fb_tmp_90["quantifier"]
    set $P5025, $P5023
    goto if813_end2218
  if813_else2217:
    null $P5024
    set $P5025, $P5024
  if813_end2218:
    unless_null $P5025, vivi_8142220
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5025, $P5026
  vivi_8142220:
    unless $P5025 goto if812_end2216 
.annotate 'line', 555
    if __lowered_lex_273 goto unless815_end2222 
.annotate 'line', 556
    $P5027 = __lowered_lex_272."CURSOR"()
    $P5028 = $P5027."panic"("Quantifier quantifies nothing")
  unless815_end2222:
.annotate 'line', 558
    unless_null __lowered_lex_272, fallback2225
    nqp_get_sc_object $P5029, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5029
  fallback2225:
    set fb_tmp_91, __lowered_lex_272
    repr_defined $I5005, fb_tmp_91
    unless $I5005 goto if816_else2223 
    set $P5030, fb_tmp_91["quantifier"]
    set $P5032, $P5030
    goto if816_end2224
  if816_else2223:
    null $P5031
    set $P5032, $P5031
  if816_end2224:
    unless_null $P5032, vivi_8172226
    nqp_get_sc_object $P5033, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5032, $P5033
  vivi_8172226:
    $P5034 = $P5032."ast"()
    set __lowered_lex_270, $P5034
.annotate 'line', 559
    __lowered_lex_270."unshift"(__lowered_lex_273)
    set __lowered_lex_273, __lowered_lex_270
  if812_end2216:
    unless_null __lowered_lex_272, fallback2231
    nqp_get_sc_object $P5035, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5035
  fallback2231:
    set fb_tmp_92, __lowered_lex_272
    repr_defined $I5006, fb_tmp_92
    unless $I5006 goto if819_else2229 
    set $P5036, fb_tmp_92["separator"]
    set $P5038, $P5036
    goto if819_end2230
  if819_else2229:
    null $P5037
    set $P5038, $P5037
  if819_end2230:
    unless_null $P5038, vivi_8202232
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5038, $P5039
  vivi_8202232:
    unless $P5038 goto if818_end2228 
.annotate 'line', 562
.annotate 'line', 563
    $P5040 = __lowered_lex_273."rxtype"()
    set $S5001, $P5040
    isne $I5007, $S5001, "quant"
    set $I5009, $I5007
    unless $I5007 goto if822_end2236 
    $P5041 = __lowered_lex_273."rxtype"()
    set $S5002, $P5041
    isne $I5008, $S5002, "dynquant"
    set $I5009, $I5008
  if822_end2236:
    unless $I5009 goto if821_end2234 
.annotate 'line', 564
    $P5042 = __lowered_lex_272."CURSOR"()
    unless_null __lowered_lex_272, fallback2243
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5043
  fallback2243:
    set fb_tmp_95, __lowered_lex_272
    repr_defined $I5012, fb_tmp_95
    unless $I5012 goto if825_else2241 
    set $P5044, fb_tmp_95["separator"]
    set $P5046, $P5044
    goto if825_end2242
  if825_else2241:
    null $P5045
    set $P5046, $P5045
  if825_end2242:
    unless_null $P5046, vivi_8262244
    nqp_get_sc_object $P5047, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5046, $P5047
  vivi_8262244:
    set fb_tmp_94, $P5046
    repr_defined $I5011, fb_tmp_94
    unless $I5011 goto if824_else2239 
    set $P5048, fb_tmp_94[0]
    set $P5050, $P5048
    goto if824_end2240
  if824_else2239:
    null $P5049
    set $P5050, $P5049
  if824_end2240:
    unless_null $P5050, vivi_8272245
    nqp_get_sc_object $P5051, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5050, $P5051
  vivi_8272245:
    set fb_tmp_93, $P5050
    repr_defined $I5010, fb_tmp_93
    unless $I5010 goto if823_else2237 
    set $P5052, fb_tmp_93["septype"]
    set $P5054, $P5052
    goto if823_end2238
  if823_else2237:
    null $P5053
    set $P5054, $P5053
  if823_end2238:
    unless_null $P5054, vivi_8282246
    nqp_get_sc_object $P5055, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5054, $P5055
  vivi_8282246:
    set $S5005, $P5054
    concat $S5004, "'", $S5005
    concat $S5003, $S5004, "' many only be used immediately following a quantifier"
    $P5056 = $P5042."panic"($S5003)
  if821_end2234:
.annotate 'line', 567
    unless_null __lowered_lex_272, fallback2249
    nqp_get_sc_object $P5057, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5057
  fallback2249:
    set fb_tmp_96, __lowered_lex_272
    repr_defined $I5013, fb_tmp_96
    unless $I5013 goto if829_else2247 
    set $P5058, fb_tmp_96["separator"]
    set $P5060, $P5058
    goto if829_end2248
  if829_else2247:
    null $P5059
    set $P5060, $P5059
  if829_end2248:
    unless_null $P5060, vivi_8302250
    nqp_get_sc_object $P5061, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5060, $P5061
  vivi_8302250:
    $P5062 = $P5060."ast"()
    __lowered_lex_273."push"($P5062)
    unless_null __lowered_lex_272, fallback2257
    nqp_get_sc_object $P5063, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5063
  fallback2257:
    set fb_tmp_98, __lowered_lex_272
    repr_defined $I5016, fb_tmp_98
    unless $I5016 goto if833_else2255 
    set $P5064, fb_tmp_98["separator"]
    set $P5066, $P5064
    goto if833_end2256
  if833_else2255:
    null $P5065
    set $P5066, $P5065
  if833_end2256:
    unless_null $P5066, vivi_8342258
    nqp_get_sc_object $P5067, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5066, $P5067
  vivi_8342258:
    set fb_tmp_97, $P5066
    repr_defined $I5015, fb_tmp_97
    unless $I5015 goto if832_else2253 
    set $P5068, fb_tmp_97["septype"]
    set $P5070, $P5068
    goto if832_end2254
  if832_else2253:
    null $P5069
    set $P5070, $P5069
  if832_end2254:
    unless_null $P5070, vivi_8352259
    nqp_get_sc_object $P5071, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5070, $P5071
  vivi_8352259:
    set $S5006, $P5070
    iseq $I5014, $S5006, "%%"
    box $P5083, $I5014
    set $P5082, $P5083
    unless $I5014 goto if831_end2252 
.annotate 'line', 568
.annotate 'line', 569
    nqp_get_sc_object $P5072, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 570
    nqp_get_sc_object $P5073, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_272, fallback2262
    nqp_get_sc_object $P5074, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5074
  fallback2262:
    set fb_tmp_99, __lowered_lex_272
    repr_defined $I5017, fb_tmp_99
    unless $I5017 goto if836_else2260 
    set $P5075, fb_tmp_99["separator"]
    set $P5077, $P5075
    goto if836_end2261
  if836_else2260:
    null $P5076
    set $P5077, $P5076
  if836_end2261:
    unless_null $P5077, vivi_8372263
    nqp_get_sc_object $P5078, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5077, $P5078
  vivi_8372263:
    $P5079 = $P5077."ast"()
    $P5080 = $P5073."new"($P5079, "quant" :named("rxtype"), 0 :named("min"), 1 :named("max"))
    $P5081 = $P5072."new"(__lowered_lex_273, $P5080, "concat" :named("rxtype"))
    set __lowered_lex_273, $P5081
    set $P5082, __lowered_lex_273
  if831_end2252:
  if818_end2228:
    unless_null __lowered_lex_272, fallback2268
    nqp_get_sc_object $P5084, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5084
  fallback2268:
    set fb_tmp_100, __lowered_lex_272
    repr_defined $I5018, fb_tmp_100
    unless $I5018 goto if839_else2266 
    set $P5085, fb_tmp_100["sigfinal"]
    set $P5087, $P5085
    goto if839_end2267
  if839_else2266:
    null $P5086
    set $P5087, $P5086
  if839_end2267:
    unless_null $P5087, vivi_8402269
    nqp_get_sc_object $P5088, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5087, $P5088
  vivi_8402269:
    unless $P5087 goto if838_end2265 
.annotate 'line', 574
    unless_null __lowered_lex_272, fallback2272
    nqp_get_sc_object $P5089, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5089
  fallback2272:
    set fb_tmp_101, __lowered_lex_272
    repr_defined $I5019, fb_tmp_101
    unless $I5019 goto if841_else2270 
    set $P5090, fb_tmp_101["sigfinal"]
    set $P5092, $P5090
    goto if841_end2271
  if841_else2270:
    null $P5091
    set $P5092, $P5091
  if841_end2271:
    unless_null $P5092, vivi_8422273
    nqp_get_sc_object $P5093, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5092, $P5093
  vivi_8422273:
    $P5094 = $P5092."ast"()
    set __lowered_lex_275, $P5094
  if838_end2265:
    unless __lowered_lex_275 goto if843_end2275 
.annotate 'line', 575
    nqp_get_sc_object $P5095, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5096 = $P5095."new"(__lowered_lex_273, __lowered_lex_275, "concat" :named("rxtype"))
    set __lowered_lex_273, $P5096
  if843_end2275:
    unless __lowered_lex_273 goto if844_end2277 
.annotate 'line', 577
.annotate 'line', 578
    $P5097 = __lowered_lex_273."backtrack"()
    isfalse $I5020, $P5097
    box $P5124, $I5020
    set $P5123, $P5124
    unless $I5020 goto if846_end2281 
    find_dynamic_lex $P5098, "%*RX"
    unless_null $P5098, fallback2286
    nqp_get_sc_object $P5100, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5099, $P5100
    set pkg_viv_tmp_6, $P5099
    set fb_tmp_103, pkg_viv_tmp_6
    repr_defined $I5022, fb_tmp_103
    unless $I5022 goto if849_else2287 
    set $P5101, fb_tmp_103["%RX"]
    set $P5103, $P5101
    goto if849_end2288
  if849_else2287:
    null $P5102
    set $P5103, $P5102
  if849_end2288:
    unless_null $P5103, vivi_8502289
    new $P5104, 'Hash'
    set pkg_viv_tmp_6["%RX"], $P5104
    set $P5103, $P5104
  vivi_8502289:
    unless_null $P5103, vivi_8512290
    die "Contextual %*RX not found"
    box $P5105, "Contextual %*RX not found"
    set $P5103, $P5105
  vivi_8512290:
    set $P5098, $P5103
  fallback2286:
    set fb_tmp_102, $P5098
    repr_defined $I5021, fb_tmp_102
    unless $I5021 goto if848_else2284 
    set $P5106, fb_tmp_102["r"]
    set $P5108, $P5106
    goto if848_end2285
  if848_else2284:
    null $P5107
    set $P5108, $P5107
  if848_end2285:
    unless_null $P5108, vivi_8522291
    nqp_get_sc_object $P5109, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5108, $P5109
  vivi_8522291:
    set $P5122, $P5108
    if $P5108 goto unless847_end2283 
    unless_null __lowered_lex_272, fallback2296
    nqp_get_sc_object $P5110, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5110
  fallback2296:
    set fb_tmp_104, __lowered_lex_272
    repr_defined $I5023, fb_tmp_104
    unless $I5023 goto if854_else2294 
    set $P5111, fb_tmp_104["backmod"]
    set $P5113, $P5111
    goto if854_end2295
  if854_else2294:
    null $P5112
    set $P5113, $P5112
  if854_end2295:
    unless_null $P5113, vivi_8552297
    nqp_get_sc_object $P5114, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5113, $P5114
  vivi_8552297:
    set $P5120, $P5113
    unless $P5113 goto if853_end2293 
    unless_null __lowered_lex_272, fallback2300
    nqp_get_sc_object $P5115, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_272, $P5115
  fallback2300:
    set fb_tmp_105, __lowered_lex_272
    repr_defined $I5025, fb_tmp_105
    unless $I5025 goto if856_else2298 
    set $P5116, fb_tmp_105["backmod"]
    set $P5118, $P5116
    goto if856_end2299
  if856_else2298:
    null $P5117
    set $P5118, $P5117
  if856_end2299:
    unless_null $P5118, vivi_8572301
    nqp_get_sc_object $P5119, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5118, $P5119
  vivi_8572301:
    set $S5007, $P5118
    iseq $I5024, $S5007, ":"
    box $P5121, $I5024
    set $P5120, $P5121
  if853_end2293:
    set $P5122, $P5120
  unless847_end2283:
    set $P5123, $P5122
  if846_end2281:
    unless $P5123 goto if845_end2279 
    $P5125 = __lowered_lex_273."backtrack"("r")
  if845_end2279:
.annotate 'line', 579
    $P5126 = __lowered_lex_273."node"(__lowered_lex_272)
  if844_end2277:
.annotate 'line', 581
    $P5127 = __lowered_lex_272."make"(__lowered_lex_273)
    .return ($P5127) 
.end
.HLL "nqp"
.namespace []
.sub "separator" :subid("cuid_158_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 584
    .param pmc __lowered_lex_276 
    .param pmc __lowered_lex_277 
    .local pmc fb_tmp_106 
.annotate 'line', 585
    unless_null __lowered_lex_277, fallback2304
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_277, $P5001
  fallback2304:
    set fb_tmp_106, __lowered_lex_277
    repr_defined $I5001, fb_tmp_106
    unless $I5001 goto if858_else2302 
    set $P5002, fb_tmp_106["quantified_atom"]
    set $P5004, $P5002
    goto if858_end2303
  if858_else2302:
    null $P5003
    set $P5004, $P5003
  if858_end2303:
    unless_null $P5004, vivi_8592305
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_8592305:
    $P5006 = $P5004."ast"()
    $P5007 = __lowered_lex_277."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "atom" :subid("cuid_159_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 588
    .param pmc __lowered_lex_279 
    .param pmc __lowered_lex_280 
    .local pmc fb_tmp_107 
    .local pmc fb_tmp_108 
    .local pmc __lowered_lex_278 
    .local pmc fb_tmp_109 
    .local pmc fb_tmp_110 
    .local pmc pkg_viv_tmp_7 
    .local pmc fb_tmp_111 
    .local pmc fb_tmp_112 
    .local pmc pkg_viv_tmp_8 
    .local pmc fb_tmp_113 
    .local pmc fb_tmp_114 
    .local pmc pkg_viv_tmp_9 
    .local pmc fb_tmp_115 
    .local pmc fb_tmp_116 
    .local pmc pkg_viv_tmp_10 
    unless_null __lowered_lex_280, fallback2310
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_280, $P5001
  fallback2310:
    set fb_tmp_107, __lowered_lex_280
    repr_defined $I5001, fb_tmp_107
    unless $I5001 goto if861_else2308 
    set $P5002, fb_tmp_107["metachar"]
    set $P5004, $P5002
    goto if861_end2309
  if861_else2308:
    null $P5003
    set $P5004, $P5003
  if861_end2309:
    unless_null $P5004, vivi_8622311
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_8622311:
    unless $P5004 goto if860_else2306 
.annotate 'line', 589
.annotate 'line', 590
    unless_null __lowered_lex_280, fallback2314
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_280, $P5006
  fallback2314:
    set fb_tmp_108, __lowered_lex_280
    repr_defined $I5002, fb_tmp_108
    unless $I5002 goto if863_else2312 
    set $P5007, fb_tmp_108["metachar"]
    set $P5009, $P5007
    goto if863_end2313
  if863_else2312:
    null $P5008
    set $P5009, $P5008
  if863_end2313:
    unless_null $P5009, vivi_8642315
    nqp_get_sc_object $P5010, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5009, $P5010
  vivi_8642315:
    $P5011 = $P5009."ast"()
    $P5012 = __lowered_lex_280."make"($P5011)
    set $P5070, $P5012
    goto if860_end2307
  if860_else2306:
.annotate 'line', 592
.annotate 'line', 593
    nqp_get_sc_object $P5013, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    set $S5001, __lowered_lex_280
    $P5014 = $P5013."new"($S5001, "literal" :named("rxtype"), __lowered_lex_280 :named("node"))
    set __lowered_lex_278, $P5014
    find_dynamic_lex $P5015, "%*RX"
    unless_null $P5015, fallback2322
    nqp_get_sc_object $P5017, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5016, $P5017
    set pkg_viv_tmp_7, $P5016
    set fb_tmp_110, pkg_viv_tmp_7
    repr_defined $I5004, fb_tmp_110
    unless $I5004 goto if868_else2323 
    set $P5018, fb_tmp_110["%RX"]
    set $P5020, $P5018
    goto if868_end2324
  if868_else2323:
    null $P5019
    set $P5020, $P5019
  if868_end2324:
    unless_null $P5020, vivi_8692325
    new $P5021, 'Hash'
    set pkg_viv_tmp_7["%RX"], $P5021
    set $P5020, $P5021
  vivi_8692325:
    unless_null $P5020, vivi_8702326
    die "Contextual %*RX not found"
    box $P5022, "Contextual %*RX not found"
    set $P5020, $P5022
  vivi_8702326:
    set $P5015, $P5020
  fallback2322:
    set fb_tmp_109, $P5015
    repr_defined $I5003, fb_tmp_109
    unless $I5003 goto if867_else2320 
    set $P5023, fb_tmp_109["i"]
    set $P5025, $P5023
    goto if867_end2321
  if867_else2320:
    null $P5024
    set $P5025, $P5024
  if867_end2321:
    unless_null $P5025, vivi_8712327
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5025, $P5026
  vivi_8712327:
    set $P5039, $P5025
    unless $P5025 goto if866_end2319 
    find_dynamic_lex $P5027, "%*RX"
    unless_null $P5027, fallback2330
    nqp_get_sc_object $P5029, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5028, $P5029
    set pkg_viv_tmp_8, $P5028
    set fb_tmp_112, pkg_viv_tmp_8
    repr_defined $I5006, fb_tmp_112
    unless $I5006 goto if873_else2331 
    set $P5030, fb_tmp_112["%RX"]
    set $P5032, $P5030
    goto if873_end2332
  if873_else2331:
    null $P5031
    set $P5032, $P5031
  if873_end2332:
    unless_null $P5032, vivi_8742333
    new $P5033, 'Hash'
    set pkg_viv_tmp_8["%RX"], $P5033
    set $P5032, $P5033
  vivi_8742333:
    unless_null $P5032, vivi_8752334
    die "Contextual %*RX not found"
    box $P5034, "Contextual %*RX not found"
    set $P5032, $P5034
  vivi_8752334:
    set $P5027, $P5032
  fallback2330:
    set fb_tmp_111, $P5027
    repr_defined $I5005, fb_tmp_111
    unless $I5005 goto if872_else2328 
    set $P5035, fb_tmp_111["m"]
    set $P5037, $P5035
    goto if872_end2329
  if872_else2328:
    null $P5036
    set $P5037, $P5036
  if872_end2329:
    unless_null $P5037, vivi_8762335
    nqp_get_sc_object $P5038, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5037, $P5038
  vivi_8762335:
    set $P5039, $P5037
  if866_end2319:
    unless $P5039 goto if865_else2316 
.annotate 'line', 594
.annotate 'line', 595
    $P5040 = __lowered_lex_278."subtype"("ignorecase+ignoremark")
    goto if865_end2317
  if865_else2316:
    find_dynamic_lex $P5041, "%*RX"
    unless_null $P5041, fallback2340
    nqp_get_sc_object $P5043, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5042, $P5043
    set pkg_viv_tmp_9, $P5042
    set fb_tmp_114, pkg_viv_tmp_9
    repr_defined $I5008, fb_tmp_114
    unless $I5008 goto if879_else2341 
    set $P5044, fb_tmp_114["%RX"]
    set $P5046, $P5044
    goto if879_end2342
  if879_else2341:
    null $P5045
    set $P5046, $P5045
  if879_end2342:
    unless_null $P5046, vivi_8802343
    new $P5047, 'Hash'
    set pkg_viv_tmp_9["%RX"], $P5047
    set $P5046, $P5047
  vivi_8802343:
    unless_null $P5046, vivi_8812344
    die "Contextual %*RX not found"
    box $P5048, "Contextual %*RX not found"
    set $P5046, $P5048
  vivi_8812344:
    set $P5041, $P5046
  fallback2340:
    set fb_tmp_113, $P5041
    repr_defined $I5007, fb_tmp_113
    unless $I5007 goto if878_else2338 
    set $P5049, fb_tmp_113["i"]
    set $P5051, $P5049
    goto if878_end2339
  if878_else2338:
    null $P5050
    set $P5051, $P5050
  if878_end2339:
    unless_null $P5051, vivi_8822345
    nqp_get_sc_object $P5052, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5051, $P5052
  vivi_8822345:
    unless $P5051 goto if877_else2336 
.annotate 'line', 597
.annotate 'line', 598
    $P5053 = __lowered_lex_278."subtype"("ignorecase")
    set $P5068, $P5053
    goto if877_end2337
  if877_else2336:
    find_dynamic_lex $P5054, "%*RX"
    unless_null $P5054, fallback2350
    nqp_get_sc_object $P5056, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5055, $P5056
    set pkg_viv_tmp_10, $P5055
    set fb_tmp_116, pkg_viv_tmp_10
    repr_defined $I5010, fb_tmp_116
    unless $I5010 goto if885_else2351 
    set $P5057, fb_tmp_116["%RX"]
    set $P5059, $P5057
    goto if885_end2352
  if885_else2351:
    null $P5058
    set $P5059, $P5058
  if885_end2352:
    unless_null $P5059, vivi_8862353
    new $P5060, 'Hash'
    set pkg_viv_tmp_10["%RX"], $P5060
    set $P5059, $P5060
  vivi_8862353:
    unless_null $P5059, vivi_8872354
    die "Contextual %*RX not found"
    box $P5061, "Contextual %*RX not found"
    set $P5059, $P5061
  vivi_8872354:
    set $P5054, $P5059
  fallback2350:
    set fb_tmp_115, $P5054
    repr_defined $I5009, fb_tmp_115
    unless $I5009 goto if884_else2348 
    set $P5062, fb_tmp_115["m"]
    set $P5064, $P5062
    goto if884_end2349
  if884_else2348:
    null $P5063
    set $P5064, $P5063
  if884_end2349:
    unless_null $P5064, vivi_8882355
    nqp_get_sc_object $P5065, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5064, $P5065
  vivi_8882355:
    set $P5067, $P5064
    unless $P5064 goto if883_end2347 
.annotate 'line', 600
.annotate 'line', 601
    $P5066 = __lowered_lex_278."subtype"("ignoremark")
    set $P5067, $P5066
  if883_end2347:
    set $P5068, $P5067
  if877_end2337:
  if865_end2317:
.annotate 'line', 603
    $P5069 = __lowered_lex_280."make"(__lowered_lex_278)
    set $P5070, $P5069
  if860_end2307:
    .return ($P5070) 
.end
.HLL "nqp"
.namespace []
.sub "sigmaybe:sym<sigwhite>" :subid("cuid_160_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 607
    .param pmc __lowered_lex_281 
    .param pmc __lowered_lex_282 
.annotate 'line', 608
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 613
    nqp_get_sc_object $P5002, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
    nqp_get_sc_object $P5003, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5004 = $P5003."new"("ws" :named("value"))
    $P5005 = $P5002."new"($P5004)
    $P5006 = $P5001."new"($P5005, "subrule" :named("rxtype"), "method" :named("subtype"), __lowered_lex_282 :named("node"), "ws" :named("name"))
    $P5007 = __lowered_lex_282."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<*>" :subid("cuid_161_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 616
    .param pmc __lowered_lex_283 
    .param pmc __lowered_lex_284 
    .local pmc __lowered_lex_285 
    .local pmc fb_tmp_117 
.annotate 'line', 617
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("quant" :named("rxtype"), 0 :named("min"), -1 :named("max"), __lowered_lex_284 :named("node"))
    set __lowered_lex_285, $P5002
.annotate 'line', 618
    unless_null __lowered_lex_284, fallback2358
    nqp_get_sc_object $P5003, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_284, $P5003
  fallback2358:
    set fb_tmp_117, __lowered_lex_284
    repr_defined $I5001, fb_tmp_117
    unless $I5001 goto if889_else2356 
    set $P5004, fb_tmp_117["backmod"]
    set $P5006, $P5004
    goto if889_end2357
  if889_else2356:
    null $P5005
    set $P5006, $P5005
  if889_end2357:
    unless_null $P5006, vivi_8902359
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_8902359:
    $P5008 = "&backmod"(__lowered_lex_285, $P5006)
    $P5009 = __lowered_lex_284."make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<+>" :subid("cuid_162_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 621
    .param pmc __lowered_lex_286 
    .param pmc __lowered_lex_287 
    .local pmc __lowered_lex_288 
    .local pmc fb_tmp_118 
.annotate 'line', 622
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("quant" :named("rxtype"), 1 :named("min"), -1 :named("max"), __lowered_lex_287 :named("node"))
    set __lowered_lex_288, $P5002
.annotate 'line', 623
    unless_null __lowered_lex_287, fallback2362
    nqp_get_sc_object $P5003, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_287, $P5003
  fallback2362:
    set fb_tmp_118, __lowered_lex_287
    repr_defined $I5001, fb_tmp_118
    unless $I5001 goto if891_else2360 
    set $P5004, fb_tmp_118["backmod"]
    set $P5006, $P5004
    goto if891_end2361
  if891_else2360:
    null $P5005
    set $P5006, $P5005
  if891_end2361:
    unless_null $P5006, vivi_8922363
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_8922363:
    $P5008 = "&backmod"(__lowered_lex_288, $P5006)
    $P5009 = __lowered_lex_287."make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<?>" :subid("cuid_163_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 626
    .param pmc __lowered_lex_289 
    .param pmc __lowered_lex_290 
    .local pmc __lowered_lex_291 
    .local pmc fb_tmp_119 
.annotate 'line', 627
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("quant" :named("rxtype"), "item" :named("subtype"), 0 :named("min"), 1 :named("max"), __lowered_lex_290 :named("node"))
    set __lowered_lex_291, $P5002
.annotate 'line', 628
    unless_null __lowered_lex_290, fallback2366
    nqp_get_sc_object $P5003, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_290, $P5003
  fallback2366:
    set fb_tmp_119, __lowered_lex_290
    repr_defined $I5001, fb_tmp_119
    unless $I5001 goto if893_else2364 
    set $P5004, fb_tmp_119["backmod"]
    set $P5006, $P5004
    goto if893_end2365
  if893_else2364:
    null $P5005
    set $P5006, $P5005
  if893_end2365:
    unless_null $P5006, vivi_8942367
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_8942367:
    $P5008 = "&backmod"(__lowered_lex_291, $P5006)
    $P5009 = __lowered_lex_290."make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "quantifier:sym<**>" :subid("cuid_164_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 631
    .param pmc __lowered_lex_294 
    .param pmc __lowered_lex_295 
    .local pmc __lowered_lex_296 
    .local pmc fb_tmp_120 
    .local pmc fb_tmp_121 
    .local pmc __lowered_lex_292 
    .local pmc __lowered_lex_293 
    .local pmc fb_tmp_122 
    .local pmc fb_tmp_123 
    .local pmc fb_tmp_124 
    .local pmc fb_tmp_125 
    .local pmc fb_tmp_126 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_296, $P5001
    unless_null __lowered_lex_295, fallback2372
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5002
  fallback2372:
    set fb_tmp_120, __lowered_lex_295
    repr_defined $I5001, fb_tmp_120
    unless $I5001 goto if896_else2370 
    set $P5003, fb_tmp_120["codeblock"]
    set $P5005, $P5003
    goto if896_end2371
  if896_else2370:
    null $P5004
    set $P5005, $P5004
  if896_end2371:
    unless_null $P5005, vivi_8972373
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_8972373:
    unless $P5005 goto if895_else2368 
.annotate 'line', 633
.annotate 'line', 634
    nqp_get_sc_object $P5007, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 635
    nqp_get_sc_object $P5008, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
.annotate 'line', 636
    nqp_get_sc_object $P5009, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 103
    $P5010 = $P5009."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"))
.annotate 'line', 637
    unless_null __lowered_lex_295, fallback2376
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5011
  fallback2376:
    set fb_tmp_121, __lowered_lex_295
    repr_defined $I5002, fb_tmp_121
    unless $I5002 goto if898_else2374 
    set $P5012, fb_tmp_121["codeblock"]
    set $P5014, $P5012
    goto if898_end2375
  if898_else2374:
    null $P5013
    set $P5014, $P5013
  if898_end2375:
    unless_null $P5014, vivi_8992377
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_8992377:
    $P5016 = $P5014."ast"()
    $P5017 = $P5008."new"($P5010, $P5016, "callmethod" :named("op"), "!DYNQUANT_LIMITS" :named("name"))
    $P5018 = $P5007."new"($P5017, "dynquant" :named("rxtype"), __lowered_lex_295 :named("node"))
    set __lowered_lex_296, $P5018
    goto if895_end2369
  if895_else2368:
.annotate 'line', 641
.annotate 'line', 642
    unless_null __lowered_lex_295, fallback2380
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5019
  fallback2380:
    set fb_tmp_122, __lowered_lex_295
    repr_defined $I5003, fb_tmp_122
    unless $I5003 goto if900_else2378 
    set $P5020, fb_tmp_122["min"]
    set $P5022, $P5020
    goto if900_end2379
  if900_else2378:
    null $P5021
    set $P5022, $P5021
  if900_end2379:
    unless_null $P5022, vivi_9012381
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_9012381:
    $P5024 = $P5022."ast"()
    set __lowered_lex_292, $P5024
    box $P5025, -1
    set __lowered_lex_293, $P5025
    unless_null __lowered_lex_295, fallback2386
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5026
  fallback2386:
    set fb_tmp_123, __lowered_lex_295
    repr_defined $I5005, fb_tmp_123
    unless $I5005 goto if903_else2384 
    set $P5027, fb_tmp_123["max"]
    set $P5029, $P5027
    goto if903_end2385
  if903_else2384:
    null $P5028
    set $P5029, $P5028
  if903_end2385:
    unless_null $P5029, vivi_9042387
    nqp_get_sc_object $P5030, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5029, $P5030
  vivi_9042387:
    isfalse $I5004, $P5029
    unless $I5004 goto if902_else2382 
.annotate 'line', 644
    set __lowered_lex_293, __lowered_lex_292
    goto if902_end2383
  if902_else2382:
    unless_null __lowered_lex_295, fallback2392
    nqp_get_sc_object $P5031, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5031
  fallback2392:
    set fb_tmp_124, __lowered_lex_295
    repr_defined $I5007, fb_tmp_124
    unless $I5007 goto if906_else2390 
    set $P5032, fb_tmp_124["max"]
    set $P5034, $P5032
    goto if906_end2391
  if906_else2390:
    null $P5033
    set $P5034, $P5033
  if906_end2391:
    unless_null $P5034, vivi_9072393
    nqp_get_sc_object $P5035, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5034, $P5035
  vivi_9072393:
    set $S5001, $P5034
    isne $I5006, $S5001, "*"
    box $P5047, $I5006
    set $P5046, $P5047
    unless $I5006 goto if905_end2389 
.annotate 'line', 645
.annotate 'line', 646
    unless_null __lowered_lex_295, fallback2396
    nqp_get_sc_object $P5036, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5036
  fallback2396:
    set fb_tmp_125, __lowered_lex_295
    repr_defined $I5008, fb_tmp_125
    unless $I5008 goto if908_else2394 
    set $P5037, fb_tmp_125["max"]
    set $P5039, $P5037
    goto if908_end2395
  if908_else2394:
    null $P5038
    set $P5039, $P5038
  if908_end2395:
    unless_null $P5039, vivi_9092397
    nqp_get_sc_object $P5040, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5039, $P5040
  vivi_9092397:
    $P5041 = $P5039."ast"()
    set __lowered_lex_293, $P5041
    set $N5001, __lowered_lex_292
    set $N5002, __lowered_lex_293
    isgt $I5009, $N5001, $N5002
    box $P5045, $I5009
    set $P5044, $P5045
    unless $I5009 goto if910_end2399 
.annotate 'line', 647
    $P5042 = __lowered_lex_295."CURSOR"()
    $P5043 = $P5042."panic"("Empty range")
    set $P5044, $P5043
  if910_end2399:
    set $P5046, $P5044
  if905_end2389:
  if902_end2383:
.annotate 'line', 649
    nqp_get_sc_object $P5048, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5049 = $P5048."new"("quant" :named("rxtype"), __lowered_lex_292 :named("min"), __lowered_lex_293 :named("max"), __lowered_lex_295 :named("node"))
    set __lowered_lex_296, $P5049
  if895_end2369:
.annotate 'line', 651
    unless_null __lowered_lex_295, fallback2402
    nqp_get_sc_object $P5050, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_295, $P5050
  fallback2402:
    set fb_tmp_126, __lowered_lex_295
    repr_defined $I5010, fb_tmp_126
    unless $I5010 goto if911_else2400 
    set $P5051, fb_tmp_126["backmod"]
    set $P5053, $P5051
    goto if911_end2401
  if911_else2400:
    null $P5052
    set $P5053, $P5052
  if911_end2401:
    unless_null $P5053, vivi_9122403
    nqp_get_sc_object $P5054, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5053, $P5054
  vivi_9122403:
    $P5055 = "&backmod"(__lowered_lex_296, $P5053)
    $P5056 = __lowered_lex_295."make"($P5055)
    .return ($P5056) 
.end
.HLL "nqp"
.namespace []
.sub "codeblock" :subid("cuid_165_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 654
    .param pmc __lowered_lex_297 
    .param pmc __lowered_lex_298 
    .local pmc __lowered_lex_299 
    .local pmc __lowered_lex_300 
    .local pmc fb_tmp_127 
.annotate 'line', 655
    unless_null __lowered_lex_298, fallback2406
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_298, $P5001
  fallback2406:
    set fb_tmp_127, __lowered_lex_298
    repr_defined $I5001, fb_tmp_127
    unless $I5001 goto if913_else2404 
    set $P5002, fb_tmp_127["block"]
    set $P5004, $P5002
    goto if913_end2405
  if913_else2404:
    null $P5003
    set $P5004, $P5003
  if913_end2405:
    unless_null $P5004, vivi_9142407
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_9142407:
    $P5006 = $P5004."ast"()
    set __lowered_lex_299, $P5006
.annotate 'line', 656
    __lowered_lex_299."blocktype"("immediate")
.annotate 'line', 658
    nqp_get_sc_object $P5007, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 134
.annotate 'line', 659
    nqp_get_sc_object $P5008, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
.annotate 'line', 661
    nqp_get_sc_object $P5009, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 103
    $P5010 = $P5009."new"("$/" :named("name"), "lexical" :named("scope"))
.annotate 'line', 662
    nqp_get_sc_object $P5011, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
.annotate 'line', 663
    nqp_get_sc_object $P5012, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 103
    $P5013 = $P5012."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"))
    $P5014 = $P5011."new"($P5013, "MATCH" :named("name"), "callmethod" :named("op"))
    $P5015 = $P5008."new"($P5010, $P5014, "bind" :named("op"))
    $P5016 = $P5007."new"($P5015, __lowered_lex_299)
    set __lowered_lex_300, $P5016
.annotate 'line', 670
    $P5017 = __lowered_lex_298."make"(__lowered_lex_300)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<[ ]>" :subid("cuid_166_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 673
    .param pmc __lowered_lex_301 
    .param pmc __lowered_lex_302 
    .local pmc fb_tmp_128 
.annotate 'line', 674
    unless_null __lowered_lex_302, fallback2410
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_302, $P5001
  fallback2410:
    set fb_tmp_128, __lowered_lex_302
    repr_defined $I5001, fb_tmp_128
    unless $I5001 goto if915_else2408 
    set $P5002, fb_tmp_128["nibbler"]
    set $P5004, $P5002
    goto if915_end2409
  if915_else2408:
    null $P5003
    set $P5004, $P5003
  if915_end2409:
    unless_null $P5004, vivi_9162411
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_9162411:
    $P5006 = $P5004."ast"()
    $P5007 = __lowered_lex_302."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<( )>" :subid("cuid_167_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 677
    .param pmc __lowered_lex_303 
    .param pmc __lowered_lex_304 
    .local pmc __lowered_lex_305 
    .local pmc __lowered_lex_306 
    .local pmc fb_tmp_129 
    .local pmc fb_tmp_130 
.annotate 'line', 678
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
    nqp_decontainerize $P5002, __lowered_lex_303
    unless_null __lowered_lex_304, fallback2414
    nqp_get_sc_object $P5003, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_304, $P5003
  fallback2414:
    set fb_tmp_129, __lowered_lex_304
    repr_defined $I5001, fb_tmp_129
    unless $I5001 goto if917_else2412 
    set $P5004, fb_tmp_129["nibbler"]
    set $P5006, $P5004
    goto if917_end2413
  if917_else2412:
    null $P5005
    set $P5006, $P5005
  if917_end2413:
    unless_null $P5006, vivi_9182415
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_9182415:
    $P5008 = $P5006."ast"()
    $P5009 = $P5002."qbuildsub"($P5008, 1 :named("anon"), 1 :named("addself"))
    $P5010 = $P5001."new"($P5009)
    set __lowered_lex_305, $P5010
.annotate 'line', 679
    nqp_get_sc_object $P5011, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_304, fallback2418
    nqp_get_sc_object $P5012, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_304, $P5012
  fallback2418:
    set fb_tmp_130, __lowered_lex_304
    repr_defined $I5002, fb_tmp_130
    unless $I5002 goto if919_else2416 
    set $P5013, fb_tmp_130["nibbler"]
    set $P5015, $P5013
    goto if919_end2417
  if919_else2416:
    null $P5014
    set $P5015, $P5014
  if919_end2417:
    unless_null $P5015, vivi_9202419
    nqp_get_sc_object $P5016, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5015, $P5016
  vivi_9202419:
    $P5017 = $P5015."ast"()
    $P5018 = $P5011."new"(__lowered_lex_305, $P5017, "subrule" :named("rxtype"), "capture" :named("subtype"), __lowered_lex_304 :named("node"))
    set __lowered_lex_306, $P5018
.annotate 'line', 681
    $P5019 = __lowered_lex_304."make"(__lowered_lex_306)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<'>" :subid("cuid_168_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 684
    .param pmc __lowered_lex_307 
    .param pmc __lowered_lex_308 
    .local pmc __lowered_lex_309 
    .local pmc __lowered_lex_310 
    .local pmc fb_tmp_131 
    .local pmc fb_tmp_132 
    .local pmc fb_tmp_133 
    .local pmc pkg_viv_tmp_11 
    .local pmc fb_tmp_134 
    .local pmc fb_tmp_135 
    .local pmc pkg_viv_tmp_12 
    .local pmc fb_tmp_136 
    .local pmc fb_tmp_137 
    .local pmc pkg_viv_tmp_13 
    .local pmc fb_tmp_138 
    .local pmc fb_tmp_139 
    .local pmc pkg_viv_tmp_14 
.annotate 'line', 685
    unless_null __lowered_lex_308, fallback2422
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_308, $P5001
  fallback2422:
    set fb_tmp_131, __lowered_lex_308
    repr_defined $I5001, fb_tmp_131
    unless $I5001 goto if921_else2420 
    set $P5002, fb_tmp_131["quote_EXPR"]
    set $P5004, $P5002
    goto if921_end2421
  if921_else2420:
    null $P5003
    set $P5004, $P5003
  if921_end2421:
    unless_null $P5004, vivi_9222423
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_9222423:
    $P5006 = $P5004."ast"()
    set __lowered_lex_309, $P5006
.annotate 'line', 686
    nqp_get_sc_object $P5007, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5008 = $P5007."ACCEPTS"(__lowered_lex_309)
    unless $P5008 goto if923_end2425 
    $P5009 = __lowered_lex_309."value"()
    set __lowered_lex_309, $P5009
  if923_end2425:
.annotate 'line', 687
    nqp_get_sc_object $P5010, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5011 = $P5010."new"(__lowered_lex_309, "literal" :named("rxtype"), __lowered_lex_308 :named("node"))
    set __lowered_lex_310, $P5011
    find_dynamic_lex $P5012, "%*RX"
    unless_null $P5012, fallback2432
    nqp_get_sc_object $P5014, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_11, $P5013
    set fb_tmp_133, pkg_viv_tmp_11
    repr_defined $I5003, fb_tmp_133
    unless $I5003 goto if927_else2433 
    set $P5015, fb_tmp_133["%RX"]
    set $P5017, $P5015
    goto if927_end2434
  if927_else2433:
    null $P5016
    set $P5017, $P5016
  if927_end2434:
    unless_null $P5017, vivi_9282435
    new $P5018, 'Hash'
    set pkg_viv_tmp_11["%RX"], $P5018
    set $P5017, $P5018
  vivi_9282435:
    unless_null $P5017, vivi_9292436
    die "Contextual %*RX not found"
    box $P5019, "Contextual %*RX not found"
    set $P5017, $P5019
  vivi_9292436:
    set $P5012, $P5017
  fallback2432:
    set fb_tmp_132, $P5012
    repr_defined $I5002, fb_tmp_132
    unless $I5002 goto if926_else2430 
    set $P5020, fb_tmp_132["i"]
    set $P5022, $P5020
    goto if926_end2431
  if926_else2430:
    null $P5021
    set $P5022, $P5021
  if926_end2431:
    unless_null $P5022, vivi_9302437
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_9302437:
    set $P5036, $P5022
    unless $P5022 goto if925_end2429 
    find_dynamic_lex $P5024, "%*RX"
    unless_null $P5024, fallback2440
    nqp_get_sc_object $P5026, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5025, $P5026
    set pkg_viv_tmp_12, $P5025
    set fb_tmp_135, pkg_viv_tmp_12
    repr_defined $I5005, fb_tmp_135
    unless $I5005 goto if932_else2441 
    set $P5027, fb_tmp_135["%RX"]
    set $P5029, $P5027
    goto if932_end2442
  if932_else2441:
    null $P5028
    set $P5029, $P5028
  if932_end2442:
    unless_null $P5029, vivi_9332443
    new $P5030, 'Hash'
    set pkg_viv_tmp_12["%RX"], $P5030
    set $P5029, $P5030
  vivi_9332443:
    unless_null $P5029, vivi_9342444
    die "Contextual %*RX not found"
    box $P5031, "Contextual %*RX not found"
    set $P5029, $P5031
  vivi_9342444:
    set $P5024, $P5029
  fallback2440:
    set fb_tmp_134, $P5024
    repr_defined $I5004, fb_tmp_134
    unless $I5004 goto if931_else2438 
    set $P5032, fb_tmp_134["m"]
    set $P5034, $P5032
    goto if931_end2439
  if931_else2438:
    null $P5033
    set $P5034, $P5033
  if931_end2439:
    unless_null $P5034, vivi_9352445
    nqp_get_sc_object $P5035, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5034, $P5035
  vivi_9352445:
    set $P5036, $P5034
  if925_end2429:
    unless $P5036 goto if924_else2426 
.annotate 'line', 688
.annotate 'line', 689
    $P5037 = __lowered_lex_310."subtype"("ignorecase+ignoremark")
    goto if924_end2427
  if924_else2426:
    find_dynamic_lex $P5038, "%*RX"
    unless_null $P5038, fallback2450
    nqp_get_sc_object $P5040, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_13, $P5039
    set fb_tmp_137, pkg_viv_tmp_13
    repr_defined $I5007, fb_tmp_137
    unless $I5007 goto if938_else2451 
    set $P5041, fb_tmp_137["%RX"]
    set $P5043, $P5041
    goto if938_end2452
  if938_else2451:
    null $P5042
    set $P5043, $P5042
  if938_end2452:
    unless_null $P5043, vivi_9392453
    new $P5044, 'Hash'
    set pkg_viv_tmp_13["%RX"], $P5044
    set $P5043, $P5044
  vivi_9392453:
    unless_null $P5043, vivi_9402454
    die "Contextual %*RX not found"
    box $P5045, "Contextual %*RX not found"
    set $P5043, $P5045
  vivi_9402454:
    set $P5038, $P5043
  fallback2450:
    set fb_tmp_136, $P5038
    repr_defined $I5006, fb_tmp_136
    unless $I5006 goto if937_else2448 
    set $P5046, fb_tmp_136["i"]
    set $P5048, $P5046
    goto if937_end2449
  if937_else2448:
    null $P5047
    set $P5048, $P5047
  if937_end2449:
    unless_null $P5048, vivi_9412455
    nqp_get_sc_object $P5049, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5048, $P5049
  vivi_9412455:
    unless $P5048 goto if936_else2446 
.annotate 'line', 691
.annotate 'line', 692
    $P5050 = __lowered_lex_310."subtype"("ignorecase")
    set $P5065, $P5050
    goto if936_end2447
  if936_else2446:
    find_dynamic_lex $P5051, "%*RX"
    unless_null $P5051, fallback2460
    nqp_get_sc_object $P5053, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5052, $P5053
    set pkg_viv_tmp_14, $P5052
    set fb_tmp_139, pkg_viv_tmp_14
    repr_defined $I5009, fb_tmp_139
    unless $I5009 goto if944_else2461 
    set $P5054, fb_tmp_139["%RX"]
    set $P5056, $P5054
    goto if944_end2462
  if944_else2461:
    null $P5055
    set $P5056, $P5055
  if944_end2462:
    unless_null $P5056, vivi_9452463
    new $P5057, 'Hash'
    set pkg_viv_tmp_14["%RX"], $P5057
    set $P5056, $P5057
  vivi_9452463:
    unless_null $P5056, vivi_9462464
    die "Contextual %*RX not found"
    box $P5058, "Contextual %*RX not found"
    set $P5056, $P5058
  vivi_9462464:
    set $P5051, $P5056
  fallback2460:
    set fb_tmp_138, $P5051
    repr_defined $I5008, fb_tmp_138
    unless $I5008 goto if943_else2458 
    set $P5059, fb_tmp_138["m"]
    set $P5061, $P5059
    goto if943_end2459
  if943_else2458:
    null $P5060
    set $P5061, $P5060
  if943_end2459:
    unless_null $P5061, vivi_9472465
    nqp_get_sc_object $P5062, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5061, $P5062
  vivi_9472465:
    set $P5064, $P5061
    unless $P5061 goto if942_end2457 
.annotate 'line', 694
.annotate 'line', 695
    $P5063 = __lowered_lex_310."subtype"("ignoremark")
    set $P5064, $P5063
  if942_end2457:
    set $P5065, $P5064
  if936_end2447:
  if924_end2427:
.annotate 'line', 697
    $P5066 = __lowered_lex_308."make"(__lowered_lex_310)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<\">" :subid("cuid_169_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 700
    .param pmc __lowered_lex_311 
    .param pmc __lowered_lex_312 
    .local pmc __lowered_lex_313 
    .local pmc __lowered_lex_314 
    .local pmc fb_tmp_140 
    .local pmc fb_tmp_141 
    .local pmc fb_tmp_142 
    .local pmc pkg_viv_tmp_15 
    .local pmc fb_tmp_143 
    .local pmc fb_tmp_144 
    .local pmc pkg_viv_tmp_16 
    .local pmc fb_tmp_145 
    .local pmc fb_tmp_146 
    .local pmc pkg_viv_tmp_17 
    .local pmc fb_tmp_147 
    .local pmc fb_tmp_148 
    .local pmc pkg_viv_tmp_18 
.annotate 'line', 701
    unless_null __lowered_lex_312, fallback2468
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_312, $P5001
  fallback2468:
    set fb_tmp_140, __lowered_lex_312
    repr_defined $I5001, fb_tmp_140
    unless $I5001 goto if948_else2466 
    set $P5002, fb_tmp_140["quote_EXPR"]
    set $P5004, $P5002
    goto if948_end2467
  if948_else2466:
    null $P5003
    set $P5004, $P5003
  if948_end2467:
    unless_null $P5004, vivi_9492469
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_9492469:
    $P5006 = $P5004."ast"()
    set __lowered_lex_313, $P5006
.annotate 'line', 702
    nqp_get_sc_object $P5007, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5008 = $P5007."ACCEPTS"(__lowered_lex_313)
    unless $P5008 goto if950_end2471 
    $P5009 = __lowered_lex_313."value"()
    set __lowered_lex_313, $P5009
  if950_end2471:
.annotate 'line', 703
    nqp_get_sc_object $P5010, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5011 = $P5010."new"(__lowered_lex_313, "literal" :named("rxtype"), __lowered_lex_312 :named("node"))
    set __lowered_lex_314, $P5011
    find_dynamic_lex $P5012, "%*RX"
    unless_null $P5012, fallback2478
    nqp_get_sc_object $P5014, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_15, $P5013
    set fb_tmp_142, pkg_viv_tmp_15
    repr_defined $I5003, fb_tmp_142
    unless $I5003 goto if954_else2479 
    set $P5015, fb_tmp_142["%RX"]
    set $P5017, $P5015
    goto if954_end2480
  if954_else2479:
    null $P5016
    set $P5017, $P5016
  if954_end2480:
    unless_null $P5017, vivi_9552481
    new $P5018, 'Hash'
    set pkg_viv_tmp_15["%RX"], $P5018
    set $P5017, $P5018
  vivi_9552481:
    unless_null $P5017, vivi_9562482
    die "Contextual %*RX not found"
    box $P5019, "Contextual %*RX not found"
    set $P5017, $P5019
  vivi_9562482:
    set $P5012, $P5017
  fallback2478:
    set fb_tmp_141, $P5012
    repr_defined $I5002, fb_tmp_141
    unless $I5002 goto if953_else2476 
    set $P5020, fb_tmp_141["i"]
    set $P5022, $P5020
    goto if953_end2477
  if953_else2476:
    null $P5021
    set $P5022, $P5021
  if953_end2477:
    unless_null $P5022, vivi_9572483
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_9572483:
    set $P5036, $P5022
    unless $P5022 goto if952_end2475 
    find_dynamic_lex $P5024, "%*RX"
    unless_null $P5024, fallback2486
    nqp_get_sc_object $P5026, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5025, $P5026
    set pkg_viv_tmp_16, $P5025
    set fb_tmp_144, pkg_viv_tmp_16
    repr_defined $I5005, fb_tmp_144
    unless $I5005 goto if959_else2487 
    set $P5027, fb_tmp_144["%RX"]
    set $P5029, $P5027
    goto if959_end2488
  if959_else2487:
    null $P5028
    set $P5029, $P5028
  if959_end2488:
    unless_null $P5029, vivi_9602489
    new $P5030, 'Hash'
    set pkg_viv_tmp_16["%RX"], $P5030
    set $P5029, $P5030
  vivi_9602489:
    unless_null $P5029, vivi_9612490
    die "Contextual %*RX not found"
    box $P5031, "Contextual %*RX not found"
    set $P5029, $P5031
  vivi_9612490:
    set $P5024, $P5029
  fallback2486:
    set fb_tmp_143, $P5024
    repr_defined $I5004, fb_tmp_143
    unless $I5004 goto if958_else2484 
    set $P5032, fb_tmp_143["m"]
    set $P5034, $P5032
    goto if958_end2485
  if958_else2484:
    null $P5033
    set $P5034, $P5033
  if958_end2485:
    unless_null $P5034, vivi_9622491
    nqp_get_sc_object $P5035, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5034, $P5035
  vivi_9622491:
    set $P5036, $P5034
  if952_end2475:
    unless $P5036 goto if951_else2472 
.annotate 'line', 704
.annotate 'line', 705
    $P5037 = __lowered_lex_314."subtype"("ignorecase+ignoremark")
    goto if951_end2473
  if951_else2472:
    find_dynamic_lex $P5038, "%*RX"
    unless_null $P5038, fallback2496
    nqp_get_sc_object $P5040, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5039, $P5040
    set pkg_viv_tmp_17, $P5039
    set fb_tmp_146, pkg_viv_tmp_17
    repr_defined $I5007, fb_tmp_146
    unless $I5007 goto if965_else2497 
    set $P5041, fb_tmp_146["%RX"]
    set $P5043, $P5041
    goto if965_end2498
  if965_else2497:
    null $P5042
    set $P5043, $P5042
  if965_end2498:
    unless_null $P5043, vivi_9662499
    new $P5044, 'Hash'
    set pkg_viv_tmp_17["%RX"], $P5044
    set $P5043, $P5044
  vivi_9662499:
    unless_null $P5043, vivi_9672500
    die "Contextual %*RX not found"
    box $P5045, "Contextual %*RX not found"
    set $P5043, $P5045
  vivi_9672500:
    set $P5038, $P5043
  fallback2496:
    set fb_tmp_145, $P5038
    repr_defined $I5006, fb_tmp_145
    unless $I5006 goto if964_else2494 
    set $P5046, fb_tmp_145["i"]
    set $P5048, $P5046
    goto if964_end2495
  if964_else2494:
    null $P5047
    set $P5048, $P5047
  if964_end2495:
    unless_null $P5048, vivi_9682501
    nqp_get_sc_object $P5049, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5048, $P5049
  vivi_9682501:
    unless $P5048 goto if963_else2492 
.annotate 'line', 707
.annotate 'line', 708
    $P5050 = __lowered_lex_314."subtype"("ignorecase")
    set $P5065, $P5050
    goto if963_end2493
  if963_else2492:
    find_dynamic_lex $P5051, "%*RX"
    unless_null $P5051, fallback2506
    nqp_get_sc_object $P5053, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5052, $P5053
    set pkg_viv_tmp_18, $P5052
    set fb_tmp_148, pkg_viv_tmp_18
    repr_defined $I5009, fb_tmp_148
    unless $I5009 goto if971_else2507 
    set $P5054, fb_tmp_148["%RX"]
    set $P5056, $P5054
    goto if971_end2508
  if971_else2507:
    null $P5055
    set $P5056, $P5055
  if971_end2508:
    unless_null $P5056, vivi_9722509
    new $P5057, 'Hash'
    set pkg_viv_tmp_18["%RX"], $P5057
    set $P5056, $P5057
  vivi_9722509:
    unless_null $P5056, vivi_9732510
    die "Contextual %*RX not found"
    box $P5058, "Contextual %*RX not found"
    set $P5056, $P5058
  vivi_9732510:
    set $P5051, $P5056
  fallback2506:
    set fb_tmp_147, $P5051
    repr_defined $I5008, fb_tmp_147
    unless $I5008 goto if970_else2504 
    set $P5059, fb_tmp_147["m"]
    set $P5061, $P5059
    goto if970_end2505
  if970_else2504:
    null $P5060
    set $P5061, $P5060
  if970_end2505:
    unless_null $P5061, vivi_9742511
    nqp_get_sc_object $P5062, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5061, $P5062
  vivi_9742511:
    set $P5064, $P5061
    unless $P5061 goto if969_end2503 
.annotate 'line', 710
.annotate 'line', 711
    $P5063 = __lowered_lex_314."subtype"("ignoremark")
    set $P5064, $P5063
  if969_end2503:
    set $P5065, $P5064
  if963_end2493:
  if951_end2473:
.annotate 'line', 713
    $P5066 = __lowered_lex_312."make"(__lowered_lex_314)
    .return ($P5066) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<.>" :subid("cuid_170_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 716
    .param pmc __lowered_lex_315 
    .param pmc __lowered_lex_316 
.annotate 'line', 717
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("cclass" :named("rxtype"), "." :named("name"), __lowered_lex_316 :named("node"))
    $P5003 = __lowered_lex_316."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<^>" :subid("cuid_171_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 720
    .param pmc __lowered_lex_317 
    .param pmc __lowered_lex_318 
.annotate 'line', 721
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("anchor" :named("rxtype"), "bos" :named("subtype"), __lowered_lex_318 :named("node"))
    $P5003 = __lowered_lex_318."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<^^>" :subid("cuid_172_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 724
    .param pmc __lowered_lex_319 
    .param pmc __lowered_lex_320 
.annotate 'line', 725
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("anchor" :named("rxtype"), "bol" :named("subtype"), __lowered_lex_320 :named("node"))
    $P5003 = __lowered_lex_320."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<$>" :subid("cuid_173_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 728
    .param pmc __lowered_lex_321 
    .param pmc __lowered_lex_322 
.annotate 'line', 729
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("anchor" :named("rxtype"), "eos" :named("subtype"), __lowered_lex_322 :named("node"))
    $P5003 = __lowered_lex_322."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<$$>" :subid("cuid_174_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 732
    .param pmc __lowered_lex_323 
    .param pmc __lowered_lex_324 
.annotate 'line', 733
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("anchor" :named("rxtype"), "eol" :named("subtype"), __lowered_lex_324 :named("node"))
    $P5003 = __lowered_lex_324."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<lwb>" :subid("cuid_175_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 736
    .param pmc __lowered_lex_325 
    .param pmc __lowered_lex_326 
.annotate 'line', 737
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("anchor" :named("rxtype"), "lwb" :named("subtype"), __lowered_lex_326 :named("node"))
    $P5003 = __lowered_lex_326."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<rwb>" :subid("cuid_176_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 740
    .param pmc __lowered_lex_327 
    .param pmc __lowered_lex_328 
.annotate 'line', 741
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"("anchor" :named("rxtype"), "rwb" :named("subtype"), __lowered_lex_328 :named("node"))
    $P5003 = __lowered_lex_328."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<from>" :subid("cuid_177_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 744
    .param pmc __lowered_lex_329 
    .param pmc __lowered_lex_330 
.annotate 'line', 745
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 747
    nqp_get_sc_object $P5002, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
.annotate 'line', 748
    nqp_get_sc_object $P5003, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5004 = $P5003."new"("!LITERAL" :named("value"))
.annotate 'line', 749
    nqp_get_sc_object $P5005, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5006 = $P5005."new"("" :named("value"))
    $P5007 = $P5002."new"($P5004, $P5006)
    $P5008 = $P5001."new"($P5007, "subrule" :named("rxtype"), "capture" :named("subtype"), "r" :named("backtrack"), "$!from" :named("name"), __lowered_lex_330 :named("node"))
    $P5009 = __lowered_lex_330."make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<to>" :subid("cuid_178_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 752
    .param pmc __lowered_lex_331 
    .param pmc __lowered_lex_332 
.annotate 'line', 753
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 755
    nqp_get_sc_object $P5002, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
.annotate 'line', 756
    nqp_get_sc_object $P5003, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5004 = $P5003."new"("!LITERAL" :named("value"))
.annotate 'line', 757
    nqp_get_sc_object $P5005, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5006 = $P5005."new"("" :named("value"))
    $P5007 = $P5002."new"($P5004, $P5006)
    $P5008 = $P5001."new"($P5007, "subrule" :named("rxtype"), "capture" :named("subtype"), "r" :named("backtrack"), "$!to" :named("name"), __lowered_lex_332 :named("node"))
    $P5009 = __lowered_lex_332."make"($P5008)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<bs>" :subid("cuid_179_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 760
    .param pmc __lowered_lex_333 
    .param pmc __lowered_lex_334 
    .local pmc fb_tmp_149 
.annotate 'line', 761
    unless_null __lowered_lex_334, fallback2514
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_334, $P5001
  fallback2514:
    set fb_tmp_149, __lowered_lex_334
    repr_defined $I5001, fb_tmp_149
    unless $I5001 goto if975_else2512 
    set $P5002, fb_tmp_149["backslash"]
    set $P5004, $P5002
    goto if975_end2513
  if975_else2512:
    null $P5003
    set $P5004, $P5003
  if975_end2513:
    unless_null $P5004, vivi_9762515
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_9762515:
    $P5006 = $P5004."ast"()
    $P5007 = __lowered_lex_334."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<assert>" :subid("cuid_180_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 764
    .param pmc __lowered_lex_335 
    .param pmc __lowered_lex_336 
    .local pmc fb_tmp_150 
.annotate 'line', 765
    unless_null __lowered_lex_336, fallback2518
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_336, $P5001
  fallback2518:
    set fb_tmp_150, __lowered_lex_336
    repr_defined $I5001, fb_tmp_150
    unless $I5001 goto if977_else2516 
    set $P5002, fb_tmp_150["assertion"]
    set $P5004, $P5002
    goto if977_end2517
  if977_else2516:
    null $P5003
    set $P5004, $P5003
  if977_end2517:
    unless_null $P5004, vivi_9782519
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_9782519:
    $P5006 = $P5004."ast"()
    $P5007 = __lowered_lex_336."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<var>" :subid("cuid_181_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 768
    .param pmc __lowered_lex_337 
    .param pmc __lowered_lex_338 
    .local pmc __lowered_lex_339 
    .local pmc __lowered_lex_340 
    .local pmc fb_tmp_151 
    .local pmc fb_tmp_152 
    .local pmc fb_tmp_153 
    .local pmc fb_tmp_154 
    .local pmc fb_tmp_155 
    .local pmc fb_tmp_156 
    .local pmc fb_tmp_157 
    .local pmc fb_tmp_158 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_339, $P5001
    unless_null __lowered_lex_338, fallback2524
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_338, $P5002
  fallback2524:
    set fb_tmp_151, __lowered_lex_338
    repr_defined $I5001, fb_tmp_151
    unless $I5001 goto if980_else2522 
    set $P5003, fb_tmp_151["pos"]
    set $P5005, $P5003
    goto if980_end2523
  if980_else2522:
    null $P5004
    set $P5005, $P5004
  if980_end2523:
    unless_null $P5005, vivi_9812525
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_9812525:
    unless $P5005 goto if979_else2520 
    unless_null __lowered_lex_338, fallback2528
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_338, $P5007
  fallback2528:
    set fb_tmp_152, __lowered_lex_338
    repr_defined $I5002, fb_tmp_152
    unless $I5002 goto if982_else2526 
    set $P5008, fb_tmp_152["pos"]
    set $P5010, $P5008
    goto if982_end2527
  if982_else2526:
    null $P5009
    set $P5010, $P5009
  if982_end2527:
    unless_null $P5010, vivi_9832529
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_9832529:
    set $N5001, $P5010
    box $P5018, $N5001
    set $P5017, $P5018
    goto if979_end2521
  if979_else2520:
    unless_null __lowered_lex_338, fallback2532
    nqp_get_sc_object $P5012, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_338, $P5012
  fallback2532:
    set fb_tmp_153, __lowered_lex_338
    repr_defined $I5003, fb_tmp_153
    unless $I5003 goto if984_else2530 
    set $P5013, fb_tmp_153["name"]
    set $P5015, $P5013
    goto if984_end2531
  if984_else2530:
    null $P5014
    set $P5015, $P5014
  if984_end2531:
    unless_null $P5015, vivi_9852533
    nqp_get_sc_object $P5016, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5015, $P5016
  vivi_9852533:
    set $S5001, $P5015
    box $P5019, $S5001
    set $P5017, $P5019
  if979_end2521:
    set __lowered_lex_340, $P5017
    unless_null __lowered_lex_338, fallback2538
    nqp_get_sc_object $P5020, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_338, $P5020
  fallback2538:
    set fb_tmp_154, __lowered_lex_338
    repr_defined $I5004, fb_tmp_154
    unless $I5004 goto if987_else2536 
    set $P5021, fb_tmp_154["quantified_atom"]
    set $P5023, $P5021
    goto if987_end2537
  if987_else2536:
    null $P5022
    set $P5023, $P5022
  if987_end2537:
    unless_null $P5023, vivi_9882539
    nqp_get_sc_object $P5024, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5023, $P5024
  vivi_9882539:
    unless $P5023 goto if986_else2534 
.annotate 'line', 771
.annotate 'line', 772
    unless_null __lowered_lex_338, fallback2544
    nqp_get_sc_object $P5025, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_338, $P5025
  fallback2544:
    set fb_tmp_156, __lowered_lex_338
    repr_defined $I5006, fb_tmp_156
    unless $I5006 goto if990_else2542 
    set $P5026, fb_tmp_156["quantified_atom"]
    set $P5028, $P5026
    goto if990_end2543
  if990_else2542:
    null $P5027
    set $P5028, $P5027
  if990_end2543:
    unless_null $P5028, vivi_9912545
    nqp_get_sc_object $P5029, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5028, $P5029
  vivi_9912545:
    set fb_tmp_155, $P5028
    repr_defined $I5005, fb_tmp_155
    unless $I5005 goto if989_else2540 
    set $P5030, fb_tmp_155[0]
    set $P5032, $P5030
    goto if989_end2541
  if989_else2540:
    null $P5031
    set $P5032, $P5031
  if989_end2541:
    unless_null $P5032, vivi_9922546
    nqp_get_sc_object $P5033, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5032, $P5033
  vivi_9922546:
    $P5034 = $P5032."ast"()
    set __lowered_lex_339, $P5034
.annotate 'line', 773
    $P5035 = __lowered_lex_339."rxtype"()
    set $S5002, $P5035
    iseq $I5007, $S5002, "quant"
    set $I5010, $I5007
    unless $I5007 goto if994_end2550 
    set fb_tmp_157, __lowered_lex_339
    repr_defined $I5009, fb_tmp_157
    unless $I5009 goto if995_else2551 
    set $P5036, fb_tmp_157[0]
    set $P5038, $P5036
    goto if995_end2552
  if995_else2551:
    null $P5037
    set $P5038, $P5037
  if995_end2552:
    unless_null $P5038, vivi_9962553
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5038, $P5039
  vivi_9962553:
    $P5040 = $P5038."rxtype"()
    set $S5003, $P5040
    iseq $I5008, $S5003, "subrule"
    set $I5010, $I5008
  if994_end2550:
    unless $I5010 goto if993_else2547 
.annotate 'line', 774
    nqp_decontainerize $P5041, __lowered_lex_337
    set fb_tmp_158, __lowered_lex_339
    repr_defined $I5011, fb_tmp_158
    unless $I5011 goto if997_else2554 
    set $P5042, fb_tmp_158[0]
    set $P5044, $P5042
    goto if997_end2555
  if997_else2554:
    null $P5043
    set $P5044, $P5043
  if997_end2555:
    unless_null $P5044, vivi_9982556
    nqp_get_sc_object $P5045, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5044, $P5045
  vivi_9982556:
    $P5046 = $P5041."subrule_alias"($P5044, __lowered_lex_340)
    set $P5053, $P5046
    goto if993_end2548
  if993_else2547:
.annotate 'line', 776
    $P5047 = __lowered_lex_339."rxtype"()
    set $S5004, $P5047
    iseq $I5012, $S5004, "subrule"
    unless $I5012 goto if999_else2557 
.annotate 'line', 777
    nqp_decontainerize $P5048, __lowered_lex_337
    $P5049 = $P5048."subrule_alias"(__lowered_lex_339, __lowered_lex_340)
    set $P5052, $P5049
    goto if999_end2558
  if999_else2557:
.annotate 'line', 779
.annotate 'line', 780
    nqp_get_sc_object $P5050, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5051 = $P5050."new"(__lowered_lex_339, __lowered_lex_340 :named("name"), "subcapture" :named("rxtype"), __lowered_lex_338 :named("node"))
    set __lowered_lex_339, $P5051
    set $P5052, __lowered_lex_339
  if999_end2558:
    set $P5053, $P5052
  if993_end2548:
    goto if986_end2535
  if986_else2534:
.annotate 'line', 784
.annotate 'line', 785
    nqp_get_sc_object $P5054, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 786
    nqp_get_sc_object $P5055, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
.annotate 'line', 787
    nqp_get_sc_object $P5056, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5057 = $P5056."new"("!BACKREF" :named("value"))
.annotate 'line', 788
    nqp_get_sc_object $P5058, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5059 = $P5058."new"(__lowered_lex_340 :named("value"))
    $P5060 = $P5055."new"($P5057, $P5059)
    $P5061 = $P5054."new"($P5060, "subrule" :named("rxtype"), "method" :named("subtype"), __lowered_lex_338 :named("node"))
    set __lowered_lex_339, $P5061
  if986_end2535:
.annotate 'line', 790
    $P5062 = __lowered_lex_338."make"(__lowered_lex_339)
    .return ($P5062) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<~>" :subid("cuid_182_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 793
    .param pmc __lowered_lex_341 
    .param pmc __lowered_lex_342 
    .local pmc __lowered_lex_343 
    .local pmc fb_tmp_159 
    .local pmc pkg_viv_tmp_20 
    .local pmc fb_tmp_160 
    .local pmc fb_tmp_161 
    .local pmc pkg_viv_tmp_19 
    .local pmc fb_tmp_162 
    .local pmc fb_tmp_163 
    .local pmc fb_tmp_164 
    new $P5001, 'QRPA'
    set __lowered_lex_343, $P5001
    find_dynamic_lex $P5002, "%*RX"
    unless_null $P5002, fallback2561
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5003, $P5004
    set pkg_viv_tmp_20, $P5003
    set fb_tmp_159, pkg_viv_tmp_20
    repr_defined $I5002, fb_tmp_159
    unless $I5002 goto if1001_else2562 
    set $P5005, fb_tmp_159["%RX"]
    set $P5007, $P5005
    goto if1001_end2563
  if1001_else2562:
    null $P5006
    set $P5007, $P5006
  if1001_end2563:
    unless_null $P5007, vivi_10022564
    new $P5008, 'Hash'
    set pkg_viv_tmp_20["%RX"], $P5008
    set $P5007, $P5008
  vivi_10022564:
    unless_null $P5007, vivi_10032565
    die "Contextual %*RX not found"
    box $P5009, "Contextual %*RX not found"
    set $P5007, $P5009
  vivi_10032565:
    set $P5002, $P5007
  fallback2561:
    exists $I5001, $P5002["dba"]
    unless $I5001 goto if1000_end2560 
    new $P5010, 'QRPA'
.annotate 'line', 794
    nqp_get_sc_object $P5011, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    find_dynamic_lex $P5012, "%*RX"
    unless_null $P5012, fallback2568
    nqp_get_sc_object $P5014, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5013, $P5014
    set pkg_viv_tmp_19, $P5013
    set fb_tmp_161, pkg_viv_tmp_19
    repr_defined $I5004, fb_tmp_161
    unless $I5004 goto if1005_else2569 
    set $P5015, fb_tmp_161["%RX"]
    set $P5017, $P5015
    goto if1005_end2570
  if1005_else2569:
    null $P5016
    set $P5017, $P5016
  if1005_end2570:
    unless_null $P5017, vivi_10062571
    new $P5018, 'Hash'
    set pkg_viv_tmp_19["%RX"], $P5018
    set $P5017, $P5018
  vivi_10062571:
    unless_null $P5017, vivi_10072572
    die "Contextual %*RX not found"
    box $P5019, "Contextual %*RX not found"
    set $P5017, $P5019
  vivi_10072572:
    set $P5012, $P5017
  fallback2568:
    set fb_tmp_160, $P5012
    repr_defined $I5003, fb_tmp_160
    unless $I5003 goto if1004_else2566 
    set $P5020, fb_tmp_160["dba"]
    set $P5022, $P5020
    goto if1004_end2567
  if1004_else2566:
    null $P5021
    set $P5022, $P5021
  if1004_end2567:
    unless_null $P5022, vivi_10082573
    nqp_get_sc_object $P5023, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5022, $P5023
  vivi_10082573:
    $P5024 = $P5011."new"($P5022 :named("value"))
    push $P5010, $P5024
    set __lowered_lex_343, $P5010
  if1000_end2560:
.annotate 'line', 795
    nqp_get_sc_object $P5025, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 797
    unless_null __lowered_lex_342, fallback2576
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_342, $P5026
  fallback2576:
    set fb_tmp_162, __lowered_lex_342
    repr_defined $I5005, fb_tmp_162
    unless $I5005 goto if1009_else2574 
    set $P5027, fb_tmp_162["GOAL"]
    set $P5029, $P5027
    goto if1009_end2575
  if1009_else2574:
    null $P5028
    set $P5029, $P5028
  if1009_end2575:
    unless_null $P5029, vivi_10102577
    nqp_get_sc_object $P5030, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5029, $P5030
  vivi_10102577:
    $P5031 = $P5029."ast"()
.annotate 'line', 798
    unless_null __lowered_lex_342, fallback2580
    nqp_get_sc_object $P5032, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_342, $P5032
  fallback2580:
    set fb_tmp_163, __lowered_lex_342
    repr_defined $I5006, fb_tmp_163
    unless $I5006 goto if1011_else2578 
    set $P5033, fb_tmp_163["EXPR"]
    set $P5035, $P5033
    goto if1011_end2579
  if1011_else2578:
    null $P5034
    set $P5035, $P5034
  if1011_end2579:
    unless_null $P5035, vivi_10122581
    nqp_get_sc_object $P5036, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5035, $P5036
  vivi_10122581:
    $P5037 = $P5035."ast"()
.annotate 'line', 799
    nqp_get_sc_object $P5038, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 801
    nqp_get_sc_object $P5039, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
.annotate 'line', 802
    nqp_get_sc_object $P5040, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5041 = $P5040."new"("FAILGOAL" :named("value"))
.annotate 'line', 803
    nqp_get_sc_object $P5042, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    unless_null __lowered_lex_342, fallback2584
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_342, $P5043
  fallback2584:
    set fb_tmp_164, __lowered_lex_342
    repr_defined $I5007, fb_tmp_164
    unless $I5007 goto if1013_else2582 
    set $P5044, fb_tmp_164["GOAL"]
    set $P5046, $P5044
    goto if1013_end2583
  if1013_else2582:
    null $P5045
    set $P5046, $P5045
  if1013_end2583:
    unless_null $P5046, vivi_10142585
    nqp_get_sc_object $P5047, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5046, $P5047
  vivi_10142585:
    set $S5001, $P5046
    $P5048 = $P5042."new"($S5001 :named("value"))
    $P5049 = $P5039."new"($P5041, $P5048, __lowered_lex_343 :flat)
    $P5050 = $P5038."new"($P5049, "subrule" :named("rxtype"), "method" :named("subtype"))
    $P5051 = $P5025."new"($P5031, $P5037, $P5050, "goal" :named("rxtype"))
    $P5052 = __lowered_lex_342."make"($P5051)
    .return ($P5052) 
.end
.HLL "nqp"
.namespace []
.sub "metachar:sym<mod>" :subid("cuid_183_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 807
    .param pmc __lowered_lex_344 
    .param pmc __lowered_lex_345 
    .local pmc fb_tmp_165 
    unless_null __lowered_lex_345, fallback2588
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_345, $P5001
  fallback2588:
    set fb_tmp_165, __lowered_lex_345
    repr_defined $I5001, fb_tmp_165
    unless $I5001 goto if1015_else2586 
    set $P5002, fb_tmp_165["mod_internal"]
    set $P5004, $P5002
    goto if1015_end2587
  if1015_else2586:
    null $P5003
    set $P5004, $P5003
  if1015_end2587:
    unless_null $P5004, vivi_10162589
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_10162589:
    $P5006 = $P5004."ast"()
    $P5007 = __lowered_lex_345."make"($P5006)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<s>" :subid("cuid_184_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 809
    .param pmc __lowered_lex_346 
    .param pmc __lowered_lex_347 
    .local pmc fb_tmp_166 
    .local pmc fb_tmp_167 
.annotate 'line', 810
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_347, fallback2592
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_347, $P5002
  fallback2592:
    set fb_tmp_166, __lowered_lex_347
    repr_defined $I5001, fb_tmp_166
    unless $I5001 goto if1017_else2590 
    set $P5003, fb_tmp_166["sym"]
    set $P5005, $P5003
    goto if1017_end2591
  if1017_else2590:
    null $P5004
    set $P5005, $P5004
  if1017_end2591:
    unless_null $P5005, vivi_10182593
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10182593:
    set $S5002, $P5005
    downcase $S5001, $S5002
    unless_null __lowered_lex_347, fallback2596
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_347, $P5007
  fallback2596:
    set fb_tmp_167, __lowered_lex_347
    repr_defined $I5003, fb_tmp_167
    unless $I5003 goto if1019_else2594 
    set $P5008, fb_tmp_167["sym"]
    set $P5010, $P5008
    goto if1019_end2595
  if1019_else2594:
    null $P5009
    set $P5010, $P5009
  if1019_end2595:
    unless_null $P5010, vivi_10202597
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_10202597:
    set $S5003, $P5010
    isle $I5002, $S5003, "Z"
    $P5012 = $P5001."new"("cclass" :named("rxtype"), $S5001 :named("name"), $I5002 :named("negate"), __lowered_lex_347 :named("node"))
    $P5013 = __lowered_lex_347."make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<b>" :subid("cuid_185_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 814
    .param pmc __lowered_lex_348 
    .param pmc __lowered_lex_349 
    .local pmc __lowered_lex_350 
    .local pmc fb_tmp_168 
.annotate 'line', 815
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_349, fallback2600
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_349, $P5002
  fallback2600:
    set fb_tmp_168, __lowered_lex_349
    repr_defined $I5002, fb_tmp_168
    unless $I5002 goto if1021_else2598 
    set $P5003, fb_tmp_168["sym"]
    set $P5005, $P5003
    goto if1021_end2599
  if1021_else2598:
    null $P5004
    set $P5005, $P5004
  if1021_end2599:
    unless_null $P5005, vivi_10222601
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10222601:
    set $S5001, $P5005
    iseq $I5001, $S5001, "B"
    $P5007 = $P5001."new"("\b", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_349 :named("node"))
    set __lowered_lex_350, $P5007
.annotate 'line', 817
    $P5008 = __lowered_lex_349."make"(__lowered_lex_350)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<e>" :subid("cuid_186_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 820
    .param pmc __lowered_lex_351 
    .param pmc __lowered_lex_352 
    .local pmc __lowered_lex_353 
    .local pmc fb_tmp_169 
.annotate 'line', 821
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_352, fallback2604
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_352, $P5002
  fallback2604:
    set fb_tmp_169, __lowered_lex_352
    repr_defined $I5002, fb_tmp_169
    unless $I5002 goto if1023_else2602 
    set $P5003, fb_tmp_169["sym"]
    set $P5005, $P5003
    goto if1023_end2603
  if1023_else2602:
    null $P5004
    set $P5005, $P5004
  if1023_end2603:
    unless_null $P5005, vivi_10242605
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10242605:
    set $S5001, $P5005
    iseq $I5001, $S5001, "E"
    $P5007 = $P5001."new"("\e", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_352 :named("node"))
    set __lowered_lex_353, $P5007
.annotate 'line', 823
    $P5008 = __lowered_lex_352."make"(__lowered_lex_353)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<f>" :subid("cuid_187_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 826
    .param pmc __lowered_lex_354 
    .param pmc __lowered_lex_355 
    .local pmc __lowered_lex_356 
    .local pmc fb_tmp_170 
.annotate 'line', 827
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_355, fallback2608
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_355, $P5002
  fallback2608:
    set fb_tmp_170, __lowered_lex_355
    repr_defined $I5002, fb_tmp_170
    unless $I5002 goto if1025_else2606 
    set $P5003, fb_tmp_170["sym"]
    set $P5005, $P5003
    goto if1025_end2607
  if1025_else2606:
    null $P5004
    set $P5005, $P5004
  if1025_end2607:
    unless_null $P5005, vivi_10262609
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10262609:
    set $S5001, $P5005
    iseq $I5001, $S5001, "F"
    $P5007 = $P5001."new"("\f", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_355 :named("node"))
    set __lowered_lex_356, $P5007
.annotate 'line', 829
    $P5008 = __lowered_lex_355."make"(__lowered_lex_356)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<h>" :subid("cuid_188_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 832
    .param pmc __lowered_lex_357 
    .param pmc __lowered_lex_358 
    .local pmc __lowered_lex_359 
    .local pmc fb_tmp_171 
.annotate 'line', 833
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_358, fallback2612
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_358, $P5002
  fallback2612:
    set fb_tmp_171, __lowered_lex_358
    repr_defined $I5002, fb_tmp_171
    unless $I5002 goto if1027_else2610 
    set $P5003, fb_tmp_171["sym"]
    set $P5005, $P5003
    goto if1027_end2611
  if1027_else2610:
    null $P5004
    set $P5005, $P5004
  if1027_end2611:
    unless_null $P5005, vivi_10282613
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10282613:
    set $S5001, $P5005
    iseq $I5001, $S5001, "H"
    $P5007 = $P5001."new"(utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_358 :named("node"))
    set __lowered_lex_359, $P5007
.annotate 'line', 835
    $P5008 = __lowered_lex_358."make"(__lowered_lex_359)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<r>" :subid("cuid_189_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 838
    .param pmc __lowered_lex_360 
    .param pmc __lowered_lex_361 
    .local pmc __lowered_lex_362 
    .local pmc fb_tmp_172 
.annotate 'line', 839
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_361, fallback2616
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_361, $P5002
  fallback2616:
    set fb_tmp_172, __lowered_lex_361
    repr_defined $I5002, fb_tmp_172
    unless $I5002 goto if1029_else2614 
    set $P5003, fb_tmp_172["sym"]
    set $P5005, $P5003
    goto if1029_end2615
  if1029_else2614:
    null $P5004
    set $P5005, $P5004
  if1029_end2615:
    unless_null $P5005, vivi_10302617
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10302617:
    set $S5001, $P5005
    iseq $I5001, $S5001, "R"
    $P5007 = $P5001."new"("\r", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_361 :named("node"))
    set __lowered_lex_362, $P5007
.annotate 'line', 841
    $P5008 = __lowered_lex_361."make"(__lowered_lex_362)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<t>" :subid("cuid_190_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 844
    .param pmc __lowered_lex_363 
    .param pmc __lowered_lex_364 
    .local pmc __lowered_lex_365 
    .local pmc fb_tmp_173 
.annotate 'line', 845
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_364, fallback2620
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_364, $P5002
  fallback2620:
    set fb_tmp_173, __lowered_lex_364
    repr_defined $I5002, fb_tmp_173
    unless $I5002 goto if1031_else2618 
    set $P5003, fb_tmp_173["sym"]
    set $P5005, $P5003
    goto if1031_end2619
  if1031_else2618:
    null $P5004
    set $P5005, $P5004
  if1031_end2619:
    unless_null $P5005, vivi_10322621
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10322621:
    set $S5001, $P5005
    iseq $I5001, $S5001, "T"
    $P5007 = $P5001."new"("\t", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_364 :named("node"))
    set __lowered_lex_365, $P5007
.annotate 'line', 847
    $P5008 = __lowered_lex_364."make"(__lowered_lex_365)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<v>" :subid("cuid_191_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 850
    .param pmc __lowered_lex_366 
    .param pmc __lowered_lex_367 
    .local pmc __lowered_lex_368 
    .local pmc fb_tmp_174 
.annotate 'line', 851
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_367, fallback2624
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_367, $P5002
  fallback2624:
    set fb_tmp_174, __lowered_lex_367
    repr_defined $I5002, fb_tmp_174
    unless $I5002 goto if1033_else2622 
    set $P5003, fb_tmp_174["sym"]
    set $P5005, $P5003
    goto if1033_end2623
  if1033_else2622:
    null $P5004
    set $P5005, $P5004
  if1033_end2623:
    unless_null $P5005, vivi_10342625
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10342625:
    set $S5001, $P5005
    iseq $I5001, $S5001, "V"
    $P5007 = $P5001."new"(utf8:"\n\x{b}\f\r\x{85}\u2028\u2029", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_367 :named("node"))
    set __lowered_lex_368, $P5007
.annotate 'line', 854
    $P5008 = __lowered_lex_367."make"(__lowered_lex_368)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<o>" :subid("cuid_192_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 857
    .param pmc __lowered_lex_369 
    .param pmc __lowered_lex_370 
    .local pmc __lowered_lex_371 
    .local pmc fb_tmp_175 
    .local pmc fb_tmp_176 
    .local pmc fb_tmp_177 
    .local pmc fb_tmp_178 
.annotate 'line', 859
    nqp_get_sc_object $P5001, "D699855F0B99D418906D23C314640A779281D00E-1431289891.9493", 92
    unless_null __lowered_lex_370, fallback2630
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_370, $P5002
  fallback2630:
    set fb_tmp_175, __lowered_lex_370
    repr_defined $I5001, fb_tmp_175
    unless $I5001 goto if1036_else2628 
    set $P5003, fb_tmp_175["octint"]
    set $P5005, $P5003
    goto if1036_end2629
  if1036_else2628:
    null $P5004
    set $P5005, $P5004
  if1036_end2629:
    unless_null $P5005, vivi_10372631
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10372631:
    set $P5016, $P5005
    if $P5005 goto unless1035_end2627 
    unless_null __lowered_lex_370, fallback2636
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_370, $P5007
  fallback2636:
    set fb_tmp_177, __lowered_lex_370
    repr_defined $I5003, fb_tmp_177
    unless $I5003 goto if1039_else2634 
    set $P5008, fb_tmp_177["octints"]
    set $P5010, $P5008
    goto if1039_end2635
  if1039_else2634:
    null $P5009
    set $P5010, $P5009
  if1039_end2635:
    unless_null $P5010, vivi_10402637
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_10402637:
    set fb_tmp_176, $P5010
    repr_defined $I5002, fb_tmp_176
    unless $I5002 goto if1038_else2632 
    set $P5012, fb_tmp_176["octint"]
    set $P5014, $P5012
    goto if1038_end2633
  if1038_else2632:
    null $P5013
    set $P5014, $P5013
  if1038_end2633:
    unless_null $P5014, vivi_10412638
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_10412638:
    set $P5016, $P5014
  unless1035_end2627:
    $P5017 = $P5001."ints_to_string"($P5016)
    set __lowered_lex_371, $P5017
.annotate 'line', 860
    unless_null __lowered_lex_370, fallback2643
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_370, $P5018
  fallback2643:
    set fb_tmp_178, __lowered_lex_370
    repr_defined $I5005, fb_tmp_178
    unless $I5005 goto if1043_else2641 
    set $P5019, fb_tmp_178["sym"]
    set $P5021, $P5019
    goto if1043_end2642
  if1043_else2641:
    null $P5020
    set $P5021, $P5020
  if1043_end2642:
    unless_null $P5021, vivi_10442644
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_10442644:
    set $S5001, $P5021
    iseq $I5004, $S5001, "O"
    unless $I5004 goto if1042_else2639 
.annotate 'line', 861
    nqp_get_sc_object $P5023, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5024 = $P5023."new"(__lowered_lex_371, "enumcharlist" :named("rxtype"), 1 :named("negate"), __lowered_lex_370 :named("node"))
    set $P5027, $P5024
    goto if1042_end2640
  if1042_else2639:
.annotate 'line', 863
    nqp_get_sc_object $P5025, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5026 = $P5025."new"(__lowered_lex_371, "literal" :named("rxtype"), __lowered_lex_370 :named("node"))
    set $P5027, $P5026
  if1042_end2640:
    $P5028 = __lowered_lex_370."make"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<x>" :subid("cuid_193_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 866
    .param pmc __lowered_lex_372 
    .param pmc __lowered_lex_373 
    .local pmc __lowered_lex_374 
    .local pmc fb_tmp_179 
    .local pmc fb_tmp_180 
    .local pmc fb_tmp_181 
    .local pmc fb_tmp_182 
.annotate 'line', 868
    nqp_get_sc_object $P5001, "D699855F0B99D418906D23C314640A779281D00E-1431289891.9493", 92
    unless_null __lowered_lex_373, fallback2649
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_373, $P5002
  fallback2649:
    set fb_tmp_179, __lowered_lex_373
    repr_defined $I5001, fb_tmp_179
    unless $I5001 goto if1046_else2647 
    set $P5003, fb_tmp_179["hexint"]
    set $P5005, $P5003
    goto if1046_end2648
  if1046_else2647:
    null $P5004
    set $P5005, $P5004
  if1046_end2648:
    unless_null $P5005, vivi_10472650
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10472650:
    set $P5016, $P5005
    if $P5005 goto unless1045_end2646 
    unless_null __lowered_lex_373, fallback2655
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_373, $P5007
  fallback2655:
    set fb_tmp_181, __lowered_lex_373
    repr_defined $I5003, fb_tmp_181
    unless $I5003 goto if1049_else2653 
    set $P5008, fb_tmp_181["hexints"]
    set $P5010, $P5008
    goto if1049_end2654
  if1049_else2653:
    null $P5009
    set $P5010, $P5009
  if1049_end2654:
    unless_null $P5010, vivi_10502656
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_10502656:
    set fb_tmp_180, $P5010
    repr_defined $I5002, fb_tmp_180
    unless $I5002 goto if1048_else2651 
    set $P5012, fb_tmp_180["hexint"]
    set $P5014, $P5012
    goto if1048_end2652
  if1048_else2651:
    null $P5013
    set $P5014, $P5013
  if1048_end2652:
    unless_null $P5014, vivi_10512657
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_10512657:
    set $P5016, $P5014
  unless1045_end2646:
    $P5017 = $P5001."ints_to_string"($P5016)
    set __lowered_lex_374, $P5017
.annotate 'line', 869
    unless_null __lowered_lex_373, fallback2662
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_373, $P5018
  fallback2662:
    set fb_tmp_182, __lowered_lex_373
    repr_defined $I5005, fb_tmp_182
    unless $I5005 goto if1053_else2660 
    set $P5019, fb_tmp_182["sym"]
    set $P5021, $P5019
    goto if1053_end2661
  if1053_else2660:
    null $P5020
    set $P5021, $P5020
  if1053_end2661:
    unless_null $P5021, vivi_10542663
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_10542663:
    set $S5001, $P5021
    iseq $I5004, $S5001, "X"
    unless $I5004 goto if1052_else2658 
.annotate 'line', 870
    nqp_get_sc_object $P5023, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5024 = $P5023."new"(__lowered_lex_374, "enumcharlist" :named("rxtype"), 1 :named("negate"), __lowered_lex_373 :named("node"))
    set $P5027, $P5024
    goto if1052_end2659
  if1052_else2658:
.annotate 'line', 872
    nqp_get_sc_object $P5025, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5026 = $P5025."new"(__lowered_lex_374, "literal" :named("rxtype"), __lowered_lex_373 :named("node"))
    set $P5027, $P5026
  if1052_end2659:
    $P5028 = __lowered_lex_373."make"($P5027)
    .return ($P5028) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<c>" :subid("cuid_194_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 875
    .param pmc __lowered_lex_375 
    .param pmc __lowered_lex_376 
    .local pmc fb_tmp_183 
    .local pmc fb_tmp_184 
    .local pmc fb_tmp_185 
.annotate 'line', 876
    unless_null __lowered_lex_376, fallback2668
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_376, $P5001
  fallback2668:
    set fb_tmp_183, __lowered_lex_376
    repr_defined $I5002, fb_tmp_183
    unless $I5002 goto if1056_else2666 
    set $P5002, fb_tmp_183["sym"]
    set $P5004, $P5002
    goto if1056_end2667
  if1056_else2666:
    null $P5003
    set $P5004, $P5003
  if1056_end2667:
    unless_null $P5004, vivi_10572669
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_10572669:
    set $S5001, $P5004
    iseq $I5001, $S5001, "C"
    unless $I5001 goto if1055_else2664 
.annotate 'line', 877
    nqp_get_sc_object $P5006, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_376, fallback2672
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_376, $P5007
  fallback2672:
    set fb_tmp_184, __lowered_lex_376
    repr_defined $I5003, fb_tmp_184
    unless $I5003 goto if1058_else2670 
    set $P5008, fb_tmp_184["charspec"]
    set $P5010, $P5008
    goto if1058_end2671
  if1058_else2670:
    null $P5009
    set $P5010, $P5009
  if1058_end2671:
    unless_null $P5010, vivi_10592673
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_10592673:
    $P5012 = $P5010."ast"()
    $P5013 = $P5006."new"($P5012, "enumcharlist" :named("rxtype"), 1 :named("negate"), __lowered_lex_376 :named("node"))
    set $P5022, $P5013
    goto if1055_end2665
  if1055_else2664:
.annotate 'line', 878
    nqp_get_sc_object $P5014, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_376, fallback2676
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_376, $P5015
  fallback2676:
    set fb_tmp_185, __lowered_lex_376
    repr_defined $I5004, fb_tmp_185
    unless $I5004 goto if1060_else2674 
    set $P5016, fb_tmp_185["charspec"]
    set $P5018, $P5016
    goto if1060_end2675
  if1060_else2674:
    null $P5017
    set $P5018, $P5017
  if1060_end2675:
    unless_null $P5018, vivi_10612677
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5018, $P5019
  vivi_10612677:
    $P5020 = $P5018."ast"()
    $P5021 = $P5014."new"($P5020, "literal" :named("rxtype"), __lowered_lex_376 :named("node"))
    set $P5022, $P5021
  if1055_end2665:
    $P5023 = __lowered_lex_376."make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<0>" :subid("cuid_195_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 881
    .param pmc __lowered_lex_377 
    .param pmc __lowered_lex_378 
.annotate 'line', 882
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5002 = $P5001."new"(utf8:"\x{0}", "literal" :named("rxtype"), __lowered_lex_378 :named("node"))
    $P5003 = __lowered_lex_378."make"($P5002)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "backslash:sym<misc>" :subid("cuid_196_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 885
    .param pmc __lowered_lex_379 
    .param pmc __lowered_lex_380 
    .local pmc __lowered_lex_381 
.annotate 'line', 886
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    set $S5001, __lowered_lex_380
    $P5002 = $P5001."new"($S5001, "enumcharlist" :named("rxtype"), __lowered_lex_380 :named("node"))
    set __lowered_lex_381, $P5002
.annotate 'line', 887
    $P5003 = __lowered_lex_380."make"(__lowered_lex_381)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<s>" :subid("cuid_197_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 890
    .param pmc __lowered_lex_382 
    .param pmc __lowered_lex_383 
    .local pmc fb_tmp_186 
    .local pmc fb_tmp_187 
.annotate 'line', 891
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_383, fallback2680
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_383, $P5002
  fallback2680:
    set fb_tmp_186, __lowered_lex_383
    repr_defined $I5001, fb_tmp_186
    unless $I5001 goto if1062_else2678 
    set $P5003, fb_tmp_186["sym"]
    set $P5005, $P5003
    goto if1062_end2679
  if1062_else2678:
    null $P5004
    set $P5005, $P5004
  if1062_end2679:
    unless_null $P5005, vivi_10632681
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10632681:
    set $S5002, $P5005
    downcase $S5001, $S5002
    unless_null __lowered_lex_383, fallback2684
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_383, $P5007
  fallback2684:
    set fb_tmp_187, __lowered_lex_383
    repr_defined $I5003, fb_tmp_187
    unless $I5003 goto if1064_else2682 
    set $P5008, fb_tmp_187["sym"]
    set $P5010, $P5008
    goto if1064_end2683
  if1064_else2682:
    null $P5009
    set $P5010, $P5009
  if1064_end2683:
    unless_null $P5010, vivi_10652685
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_10652685:
    set $S5003, $P5010
    isle $I5002, $S5003, "Z"
    $P5012 = $P5001."new"("cclass" :named("rxtype"), $S5001 :named("name"), $I5002 :named("negate"), __lowered_lex_383 :named("node"))
    $P5013 = __lowered_lex_383."make"($P5012)
    .return ($P5013) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<b>" :subid("cuid_198_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 895
    .param pmc __lowered_lex_384 
    .param pmc __lowered_lex_385 
    .local pmc __lowered_lex_386 
    .local pmc fb_tmp_188 
.annotate 'line', 896
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_385, fallback2688
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_385, $P5002
  fallback2688:
    set fb_tmp_188, __lowered_lex_385
    repr_defined $I5002, fb_tmp_188
    unless $I5002 goto if1066_else2686 
    set $P5003, fb_tmp_188["sym"]
    set $P5005, $P5003
    goto if1066_end2687
  if1066_else2686:
    null $P5004
    set $P5005, $P5004
  if1066_end2687:
    unless_null $P5005, vivi_10672689
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10672689:
    set $S5001, $P5005
    iseq $I5001, $S5001, "B"
    $P5007 = $P5001."new"("\b", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_385 :named("node"))
    set __lowered_lex_386, $P5007
.annotate 'line', 898
    $P5008 = __lowered_lex_385."make"(__lowered_lex_386)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<e>" :subid("cuid_199_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 901
    .param pmc __lowered_lex_387 
    .param pmc __lowered_lex_388 
    .local pmc __lowered_lex_389 
    .local pmc fb_tmp_189 
.annotate 'line', 902
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_388, fallback2692
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_388, $P5002
  fallback2692:
    set fb_tmp_189, __lowered_lex_388
    repr_defined $I5002, fb_tmp_189
    unless $I5002 goto if1068_else2690 
    set $P5003, fb_tmp_189["sym"]
    set $P5005, $P5003
    goto if1068_end2691
  if1068_else2690:
    null $P5004
    set $P5005, $P5004
  if1068_end2691:
    unless_null $P5005, vivi_10692693
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10692693:
    set $S5001, $P5005
    iseq $I5001, $S5001, "E"
    $P5007 = $P5001."new"("\e", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_388 :named("node"))
    set __lowered_lex_389, $P5007
.annotate 'line', 904
    $P5008 = __lowered_lex_388."make"(__lowered_lex_389)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<f>" :subid("cuid_200_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 907
    .param pmc __lowered_lex_390 
    .param pmc __lowered_lex_391 
    .local pmc __lowered_lex_392 
    .local pmc fb_tmp_190 
.annotate 'line', 908
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_391, fallback2696
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_391, $P5002
  fallback2696:
    set fb_tmp_190, __lowered_lex_391
    repr_defined $I5002, fb_tmp_190
    unless $I5002 goto if1070_else2694 
    set $P5003, fb_tmp_190["sym"]
    set $P5005, $P5003
    goto if1070_end2695
  if1070_else2694:
    null $P5004
    set $P5005, $P5004
  if1070_end2695:
    unless_null $P5005, vivi_10712697
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10712697:
    set $S5001, $P5005
    iseq $I5001, $S5001, "F"
    $P5007 = $P5001."new"("\f", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_391 :named("node"))
    set __lowered_lex_392, $P5007
.annotate 'line', 910
    $P5008 = __lowered_lex_391."make"(__lowered_lex_392)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<h>" :subid("cuid_201_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 913
    .param pmc __lowered_lex_393 
    .param pmc __lowered_lex_394 
    .local pmc __lowered_lex_395 
    .local pmc fb_tmp_191 
.annotate 'line', 914
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_394, fallback2700
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_394, $P5002
  fallback2700:
    set fb_tmp_191, __lowered_lex_394
    repr_defined $I5002, fb_tmp_191
    unless $I5002 goto if1072_else2698 
    set $P5003, fb_tmp_191["sym"]
    set $P5005, $P5003
    goto if1072_end2699
  if1072_else2698:
    null $P5004
    set $P5005, $P5004
  if1072_end2699:
    unless_null $P5005, vivi_10732701
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10732701:
    set $S5001, $P5005
    iseq $I5001, $S5001, "H"
    $P5007 = $P5001."new"(utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_394 :named("node"))
    set __lowered_lex_395, $P5007
.annotate 'line', 916
    $P5008 = __lowered_lex_394."make"(__lowered_lex_395)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<n>" :subid("cuid_202_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 919
    .param pmc __lowered_lex_396 
    .param pmc __lowered_lex_397 
    .local pmc __lowered_lex_398 
    .local pmc fb_tmp_192 
.annotate 'line', 920
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_397, fallback2704
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_397, $P5002
  fallback2704:
    set fb_tmp_192, __lowered_lex_397
    repr_defined $I5002, fb_tmp_192
    unless $I5002 goto if1074_else2702 
    set $P5003, fb_tmp_192["sym"]
    set $P5005, $P5003
    goto if1074_end2703
  if1074_else2702:
    null $P5004
    set $P5005, $P5004
  if1074_end2703:
    unless_null $P5005, vivi_10752705
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10752705:
    set $S5001, $P5005
    iseq $I5001, $S5001, "N"
    $P5007 = $P5001."new"("\n", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_397 :named("node"))
    set __lowered_lex_398, $P5007
.annotate 'line', 922
    $P5008 = __lowered_lex_397."make"(__lowered_lex_398)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<r>" :subid("cuid_203_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 925
    .param pmc __lowered_lex_399 
    .param pmc __lowered_lex_400 
    .local pmc __lowered_lex_401 
    .local pmc fb_tmp_193 
.annotate 'line', 926
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_400, fallback2708
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_400, $P5002
  fallback2708:
    set fb_tmp_193, __lowered_lex_400
    repr_defined $I5002, fb_tmp_193
    unless $I5002 goto if1076_else2706 
    set $P5003, fb_tmp_193["sym"]
    set $P5005, $P5003
    goto if1076_end2707
  if1076_else2706:
    null $P5004
    set $P5005, $P5004
  if1076_end2707:
    unless_null $P5005, vivi_10772709
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10772709:
    set $S5001, $P5005
    iseq $I5001, $S5001, "R"
    $P5007 = $P5001."new"("\r", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_400 :named("node"))
    set __lowered_lex_401, $P5007
.annotate 'line', 928
    $P5008 = __lowered_lex_400."make"(__lowered_lex_401)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<t>" :subid("cuid_204_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 931
    .param pmc __lowered_lex_402 
    .param pmc __lowered_lex_403 
    .local pmc __lowered_lex_404 
    .local pmc fb_tmp_194 
.annotate 'line', 932
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_403, fallback2712
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_403, $P5002
  fallback2712:
    set fb_tmp_194, __lowered_lex_403
    repr_defined $I5002, fb_tmp_194
    unless $I5002 goto if1078_else2710 
    set $P5003, fb_tmp_194["sym"]
    set $P5005, $P5003
    goto if1078_end2711
  if1078_else2710:
    null $P5004
    set $P5005, $P5004
  if1078_end2711:
    unless_null $P5005, vivi_10792713
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10792713:
    set $S5001, $P5005
    iseq $I5001, $S5001, "T"
    $P5007 = $P5001."new"("\t", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_403 :named("node"))
    set __lowered_lex_404, $P5007
.annotate 'line', 934
    $P5008 = __lowered_lex_403."make"(__lowered_lex_404)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<v>" :subid("cuid_205_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 937
    .param pmc __lowered_lex_405 
    .param pmc __lowered_lex_406 
    .local pmc __lowered_lex_407 
    .local pmc fb_tmp_195 
.annotate 'line', 938
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_406, fallback2716
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_406, $P5002
  fallback2716:
    set fb_tmp_195, __lowered_lex_406
    repr_defined $I5002, fb_tmp_195
    unless $I5002 goto if1080_else2714 
    set $P5003, fb_tmp_195["sym"]
    set $P5005, $P5003
    goto if1080_end2715
  if1080_else2714:
    null $P5004
    set $P5005, $P5004
  if1080_end2715:
    unless_null $P5005, vivi_10812717
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10812717:
    set $S5001, $P5005
    iseq $I5001, $S5001, "V"
    $P5007 = $P5001."new"(utf8:"\n\x{b}\f\r\x{85}\u2028\u2029", "enumcharlist" :named("rxtype"), $I5001 :named("negate"), __lowered_lex_406 :named("node"))
    set __lowered_lex_407, $P5007
.annotate 'line', 941
    $P5008 = __lowered_lex_406."make"(__lowered_lex_407)
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<o>" :subid("cuid_206_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 944
    .param pmc __lowered_lex_408 
    .param pmc __lowered_lex_409 
    .local pmc __lowered_lex_410 
    .local pmc __lowered_lex_411 
    .local pmc fb_tmp_196 
    .local pmc fb_tmp_197 
    .local pmc fb_tmp_198 
    .local pmc fb_tmp_199 
    .local pmc fb_tmp_200 
    .local pmc fb_tmp_201 
    .local pmc fb_tmp_202 
    .local pmc fb_tmp_203 
    .local pmc fb_tmp_204 
.annotate 'line', 946
    nqp_get_sc_object $P5001, "D699855F0B99D418906D23C314640A779281D00E-1431289891.9493", 92
    unless_null __lowered_lex_409, fallback2722
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_409, $P5002
  fallback2722:
    set fb_tmp_196, __lowered_lex_409
    repr_defined $I5001, fb_tmp_196
    unless $I5001 goto if1083_else2720 
    set $P5003, fb_tmp_196["octint"]
    set $P5005, $P5003
    goto if1083_end2721
  if1083_else2720:
    null $P5004
    set $P5005, $P5004
  if1083_end2721:
    unless_null $P5005, vivi_10842723
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_10842723:
    set $P5016, $P5005
    if $P5005 goto unless1082_end2719 
    unless_null __lowered_lex_409, fallback2728
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_409, $P5007
  fallback2728:
    set fb_tmp_198, __lowered_lex_409
    repr_defined $I5003, fb_tmp_198
    unless $I5003 goto if1086_else2726 
    set $P5008, fb_tmp_198["octints"]
    set $P5010, $P5008
    goto if1086_end2727
  if1086_else2726:
    null $P5009
    set $P5010, $P5009
  if1086_end2727:
    unless_null $P5010, vivi_10872729
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_10872729:
    set fb_tmp_197, $P5010
    repr_defined $I5002, fb_tmp_197
    unless $I5002 goto if1085_else2724 
    set $P5012, fb_tmp_197["octint"]
    set $P5014, $P5012
    goto if1085_end2725
  if1085_else2724:
    null $P5013
    set $P5014, $P5013
  if1085_end2725:
    unless_null $P5014, vivi_10882730
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_10882730:
    set $P5016, $P5014
  unless1082_end2719:
    $P5017 = $P5001."ints_to_string"($P5016)
    set __lowered_lex_410, $P5017
    unless_null __lowered_lex_409, fallback2735
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_409, $P5018
  fallback2735:
    set fb_tmp_199, __lowered_lex_409
    repr_defined $I5005, fb_tmp_199
    unless $I5005 goto if1090_else2733 
    set $P5019, fb_tmp_199["sym"]
    set $P5021, $P5019
    goto if1090_end2734
  if1090_else2733:
    null $P5020
    set $P5021, $P5020
  if1090_end2734:
    unless_null $P5021, vivi_10912736
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_10912736:
    set $S5001, $P5021
    iseq $I5004, $S5001, "O"
    unless $I5004 goto if1089_else2731 
.annotate 'line', 948
    nqp_get_sc_object $P5023, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5024 = $P5023."new"(__lowered_lex_410, "enumcharlist" :named("rxtype"), 1 :named("negate"), __lowered_lex_409 :named("node"))
    set $P5027, $P5024
    goto if1089_end2732
  if1089_else2731:
.annotate 'line', 950
    nqp_get_sc_object $P5025, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5026 = $P5025."new"(__lowered_lex_410, "literal" :named("rxtype"), __lowered_lex_409 :named("node"))
    set $P5027, $P5026
  if1089_end2732:
    set __lowered_lex_411, $P5027
.annotate 'line', 951
    unless_null __lowered_lex_409, fallback2741
    nqp_get_sc_object $P5028, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_409, $P5028
  fallback2741:
    set fb_tmp_200, __lowered_lex_409
    repr_defined $I5006, fb_tmp_200
    unless $I5006 goto if1093_else2739 
    set $P5029, fb_tmp_200["octint"]
    set $P5031, $P5029
    goto if1093_end2740
  if1093_else2739:
    null $P5030
    set $P5031, $P5030
  if1093_end2740:
    unless_null $P5031, vivi_10942742
    nqp_get_sc_object $P5032, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5031, $P5032
  vivi_10942742:
    unless $P5031 goto if1092_else2737 
    unless_null __lowered_lex_409, fallback2745
    nqp_get_sc_object $P5033, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_409, $P5033
  fallback2745:
    set fb_tmp_201, __lowered_lex_409
    repr_defined $I5007, fb_tmp_201
    unless $I5007 goto if1095_else2743 
    set $P5034, fb_tmp_201["octint"]
    set $P5036, $P5034
    goto if1095_end2744
  if1095_else2743:
    null $P5035
    set $P5036, $P5035
  if1095_end2744:
    unless_null $P5036, vivi_10962746
    nqp_get_sc_object $P5037, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5036, $P5037
  vivi_10962746:
    $P5038 = $P5036."ast"()
    set $P5053, $P5038
    goto if1092_end2738
  if1092_else2737:
    unless_null __lowered_lex_409, fallback2753
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_409, $P5039
  fallback2753:
    set fb_tmp_204, __lowered_lex_409
    repr_defined $I5010, fb_tmp_204
    unless $I5010 goto if1099_else2751 
    set $P5040, fb_tmp_204["octints"]
    set $P5042, $P5040
    goto if1099_end2752
  if1099_else2751:
    null $P5041
    set $P5042, $P5041
  if1099_end2752:
    unless_null $P5042, vivi_11002754
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5042, $P5043
  vivi_11002754:
    set fb_tmp_203, $P5042
    repr_defined $I5009, fb_tmp_203
    unless $I5009 goto if1098_else2749 
    set $P5044, fb_tmp_203["octint"]
    set $P5046, $P5044
    goto if1098_end2750
  if1098_else2749:
    null $P5045
    set $P5046, $P5045
  if1098_end2750:
    unless_null $P5046, vivi_11012755
    nqp_get_sc_object $P5047, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5046, $P5047
  vivi_11012755:
    set fb_tmp_202, $P5046
    repr_defined $I5008, fb_tmp_202
    unless $I5008 goto if1097_else2747 
    set $P5048, fb_tmp_202[0]
    set $P5050, $P5048
    goto if1097_end2748
  if1097_else2747:
    null $P5049
    set $P5050, $P5049
  if1097_end2748:
    unless_null $P5050, vivi_11022756
    nqp_get_sc_object $P5051, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5050, $P5051
  vivi_11022756:
    $P5052 = $P5050."ast"()
    set $P5053, $P5052
  if1092_end2738:
    __lowered_lex_411."annotate"("codepoint", $P5053)
.annotate 'line', 952
    $P5054 = __lowered_lex_409."make"(__lowered_lex_411)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<x>" :subid("cuid_207_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 955
    .param pmc __lowered_lex_412 
    .param pmc __lowered_lex_413 
    .local pmc __lowered_lex_414 
    .local pmc __lowered_lex_415 
    .local pmc fb_tmp_205 
    .local pmc fb_tmp_206 
    .local pmc fb_tmp_207 
    .local pmc fb_tmp_208 
    .local pmc fb_tmp_209 
    .local pmc fb_tmp_210 
    .local pmc fb_tmp_211 
    .local pmc fb_tmp_212 
    .local pmc fb_tmp_213 
.annotate 'line', 957
    nqp_get_sc_object $P5001, "D699855F0B99D418906D23C314640A779281D00E-1431289891.9493", 92
    unless_null __lowered_lex_413, fallback2761
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_413, $P5002
  fallback2761:
    set fb_tmp_205, __lowered_lex_413
    repr_defined $I5001, fb_tmp_205
    unless $I5001 goto if1104_else2759 
    set $P5003, fb_tmp_205["hexint"]
    set $P5005, $P5003
    goto if1104_end2760
  if1104_else2759:
    null $P5004
    set $P5005, $P5004
  if1104_end2760:
    unless_null $P5005, vivi_11052762
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_11052762:
    set $P5016, $P5005
    if $P5005 goto unless1103_end2758 
    unless_null __lowered_lex_413, fallback2767
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_413, $P5007
  fallback2767:
    set fb_tmp_207, __lowered_lex_413
    repr_defined $I5003, fb_tmp_207
    unless $I5003 goto if1107_else2765 
    set $P5008, fb_tmp_207["hexints"]
    set $P5010, $P5008
    goto if1107_end2766
  if1107_else2765:
    null $P5009
    set $P5010, $P5009
  if1107_end2766:
    unless_null $P5010, vivi_11082768
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_11082768:
    set fb_tmp_206, $P5010
    repr_defined $I5002, fb_tmp_206
    unless $I5002 goto if1106_else2763 
    set $P5012, fb_tmp_206["hexint"]
    set $P5014, $P5012
    goto if1106_end2764
  if1106_else2763:
    null $P5013
    set $P5014, $P5013
  if1106_end2764:
    unless_null $P5014, vivi_11092769
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_11092769:
    set $P5016, $P5014
  unless1103_end2758:
    $P5017 = $P5001."ints_to_string"($P5016)
    set __lowered_lex_414, $P5017
    unless_null __lowered_lex_413, fallback2774
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_413, $P5018
  fallback2774:
    set fb_tmp_208, __lowered_lex_413
    repr_defined $I5005, fb_tmp_208
    unless $I5005 goto if1111_else2772 
    set $P5019, fb_tmp_208["sym"]
    set $P5021, $P5019
    goto if1111_end2773
  if1111_else2772:
    null $P5020
    set $P5021, $P5020
  if1111_end2773:
    unless_null $P5021, vivi_11122775
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_11122775:
    set $S5001, $P5021
    iseq $I5004, $S5001, "X"
    unless $I5004 goto if1110_else2770 
.annotate 'line', 959
    nqp_get_sc_object $P5023, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5024 = $P5023."new"(__lowered_lex_414, "enumcharlist" :named("rxtype"), 1 :named("negate"), __lowered_lex_413 :named("node"))
    set $P5027, $P5024
    goto if1110_end2771
  if1110_else2770:
.annotate 'line', 961
    nqp_get_sc_object $P5025, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5026 = $P5025."new"(__lowered_lex_414, "literal" :named("rxtype"), __lowered_lex_413 :named("node"))
    set $P5027, $P5026
  if1110_end2771:
    set __lowered_lex_415, $P5027
.annotate 'line', 962
    unless_null __lowered_lex_413, fallback2780
    nqp_get_sc_object $P5028, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_413, $P5028
  fallback2780:
    set fb_tmp_209, __lowered_lex_413
    repr_defined $I5006, fb_tmp_209
    unless $I5006 goto if1114_else2778 
    set $P5029, fb_tmp_209["hexint"]
    set $P5031, $P5029
    goto if1114_end2779
  if1114_else2778:
    null $P5030
    set $P5031, $P5030
  if1114_end2779:
    unless_null $P5031, vivi_11152781
    nqp_get_sc_object $P5032, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5031, $P5032
  vivi_11152781:
    unless $P5031 goto if1113_else2776 
    unless_null __lowered_lex_413, fallback2784
    nqp_get_sc_object $P5033, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_413, $P5033
  fallback2784:
    set fb_tmp_210, __lowered_lex_413
    repr_defined $I5007, fb_tmp_210
    unless $I5007 goto if1116_else2782 
    set $P5034, fb_tmp_210["hexint"]
    set $P5036, $P5034
    goto if1116_end2783
  if1116_else2782:
    null $P5035
    set $P5036, $P5035
  if1116_end2783:
    unless_null $P5036, vivi_11172785
    nqp_get_sc_object $P5037, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5036, $P5037
  vivi_11172785:
    $P5038 = $P5036."ast"()
    set $P5053, $P5038
    goto if1113_end2777
  if1113_else2776:
    unless_null __lowered_lex_413, fallback2792
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_413, $P5039
  fallback2792:
    set fb_tmp_213, __lowered_lex_413
    repr_defined $I5010, fb_tmp_213
    unless $I5010 goto if1120_else2790 
    set $P5040, fb_tmp_213["hexints"]
    set $P5042, $P5040
    goto if1120_end2791
  if1120_else2790:
    null $P5041
    set $P5042, $P5041
  if1120_end2791:
    unless_null $P5042, vivi_11212793
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5042, $P5043
  vivi_11212793:
    set fb_tmp_212, $P5042
    repr_defined $I5009, fb_tmp_212
    unless $I5009 goto if1119_else2788 
    set $P5044, fb_tmp_212["hexint"]
    set $P5046, $P5044
    goto if1119_end2789
  if1119_else2788:
    null $P5045
    set $P5046, $P5045
  if1119_end2789:
    unless_null $P5046, vivi_11222794
    nqp_get_sc_object $P5047, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5046, $P5047
  vivi_11222794:
    set fb_tmp_211, $P5046
    repr_defined $I5008, fb_tmp_211
    unless $I5008 goto if1118_else2786 
    set $P5048, fb_tmp_211[0]
    set $P5050, $P5048
    goto if1118_end2787
  if1118_else2786:
    null $P5049
    set $P5050, $P5049
  if1118_end2787:
    unless_null $P5050, vivi_11232795
    nqp_get_sc_object $P5051, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5050, $P5051
  vivi_11232795:
    $P5052 = $P5050."ast"()
    set $P5053, $P5052
  if1113_end2777:
    __lowered_lex_415."annotate"("codepoint", $P5053)
.annotate 'line', 963
    $P5054 = __lowered_lex_413."make"(__lowered_lex_415)
    .return ($P5054) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<c>" :subid("cuid_208_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 966
    .param pmc __lowered_lex_416 
    .param pmc __lowered_lex_417 
    .local pmc fb_tmp_214 
    .local pmc fb_tmp_215 
    .local pmc fb_tmp_216 
.annotate 'line', 967
    unless_null __lowered_lex_417, fallback2800
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_417, $P5001
  fallback2800:
    set fb_tmp_214, __lowered_lex_417
    repr_defined $I5002, fb_tmp_214
    unless $I5002 goto if1125_else2798 
    set $P5002, fb_tmp_214["sym"]
    set $P5004, $P5002
    goto if1125_end2799
  if1125_else2798:
    null $P5003
    set $P5004, $P5003
  if1125_end2799:
    unless_null $P5004, vivi_11262801
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_11262801:
    set $S5001, $P5004
    iseq $I5001, $S5001, "C"
    unless $I5001 goto if1124_else2796 
.annotate 'line', 968
    nqp_get_sc_object $P5006, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_417, fallback2804
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_417, $P5007
  fallback2804:
    set fb_tmp_215, __lowered_lex_417
    repr_defined $I5003, fb_tmp_215
    unless $I5003 goto if1127_else2802 
    set $P5008, fb_tmp_215["charspec"]
    set $P5010, $P5008
    goto if1127_end2803
  if1127_else2802:
    null $P5009
    set $P5010, $P5009
  if1127_end2803:
    unless_null $P5010, vivi_11282805
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_11282805:
    $P5012 = $P5010."ast"()
    $P5013 = $P5006."new"($P5012, "enumcharlist" :named("rxtype"), 1 :named("negate"), __lowered_lex_417 :named("node"))
    set $P5022, $P5013
    goto if1124_end2797
  if1124_else2796:
.annotate 'line', 969
    nqp_get_sc_object $P5014, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_417, fallback2808
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_417, $P5015
  fallback2808:
    set fb_tmp_216, __lowered_lex_417
    repr_defined $I5004, fb_tmp_216
    unless $I5004 goto if1129_else2806 
    set $P5016, fb_tmp_216["charspec"]
    set $P5018, $P5016
    goto if1129_end2807
  if1129_else2806:
    null $P5017
    set $P5018, $P5017
  if1129_end2807:
    unless_null $P5018, vivi_11302809
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5018, $P5019
  vivi_11302809:
    $P5020 = $P5018."ast"()
    $P5021 = $P5014."new"($P5020, "literal" :named("rxtype"), __lowered_lex_417 :named("node"))
    set $P5022, $P5021
  if1124_end2797:
    $P5023 = __lowered_lex_417."make"($P5022)
    .return ($P5023) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_backslash:sym<any>" :subid("cuid_209_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 972
    .param pmc __lowered_lex_418 
    .param pmc __lowered_lex_419 
    .local pmc __lowered_lex_420 
.annotate 'line', 973
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    set $S5001, __lowered_lex_419
    $P5002 = $P5001."new"($S5001, "literal" :named("rxtype"), __lowered_lex_419 :named("node"))
    set __lowered_lex_420, $P5002
.annotate 'line', 974
    $P5003 = __lowered_lex_419."make"(__lowered_lex_420)
    .return ($P5003) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<?>" :subid("cuid_210_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 977
    .param pmc __lowered_lex_421 
    .param pmc __lowered_lex_422 
    .local pmc __lowered_lex_423 
    .local pmc fb_tmp_217 
    .local pmc fb_tmp_218 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_423, $P5001
    unless_null __lowered_lex_422, fallback2814
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_422, $P5002
  fallback2814:
    set fb_tmp_217, __lowered_lex_422
    repr_defined $I5001, fb_tmp_217
    unless $I5001 goto if1132_else2812 
    set $P5003, fb_tmp_217["assertion"]
    set $P5005, $P5003
    goto if1132_end2813
  if1132_else2812:
    null $P5004
    set $P5005, $P5004
  if1132_end2813:
    unless_null $P5005, vivi_11332815
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_11332815:
    unless $P5005 goto if1131_else2810 
.annotate 'line', 979
.annotate 'line', 980
    unless_null __lowered_lex_422, fallback2818
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_422, $P5007
  fallback2818:
    set fb_tmp_218, __lowered_lex_422
    repr_defined $I5002, fb_tmp_218
    unless $I5002 goto if1134_else2816 
    set $P5008, fb_tmp_218["assertion"]
    set $P5010, $P5008
    goto if1134_end2817
  if1134_else2816:
    null $P5009
    set $P5010, $P5009
  if1134_end2817:
    unless_null $P5010, vivi_11352819
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_11352819:
    $P5012 = $P5010."ast"()
    set __lowered_lex_423, $P5012
.annotate 'line', 981
    $P5013 = __lowered_lex_423."subtype"("zerowidth")
    goto if1131_end2811
  if1131_else2810:
.annotate 'line', 983
.annotate 'line', 984
    nqp_get_sc_object $P5014, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5015 = $P5014."new"("anchor" :named("rxtype"), "pass" :named("subtype"), __lowered_lex_422 :named("node"))
    set __lowered_lex_423, $P5015
  if1131_end2811:
.annotate 'line', 986
    $P5016 = __lowered_lex_422."make"(__lowered_lex_423)
    .return ($P5016) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<!>" :subid("cuid_211_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 989
    .param pmc __lowered_lex_424 
    .param pmc __lowered_lex_425 
    .local pmc __lowered_lex_426 
    .local pmc fb_tmp_219 
    .local pmc fb_tmp_220 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_426, $P5001
    unless_null __lowered_lex_425, fallback2824
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_425, $P5002
  fallback2824:
    set fb_tmp_219, __lowered_lex_425
    repr_defined $I5001, fb_tmp_219
    unless $I5001 goto if1137_else2822 
    set $P5003, fb_tmp_219["assertion"]
    set $P5005, $P5003
    goto if1137_end2823
  if1137_else2822:
    null $P5004
    set $P5005, $P5004
  if1137_end2823:
    unless_null $P5005, vivi_11382825
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_11382825:
    unless $P5005 goto if1136_else2820 
.annotate 'line', 991
.annotate 'line', 992
    unless_null __lowered_lex_425, fallback2828
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_425, $P5007
  fallback2828:
    set fb_tmp_220, __lowered_lex_425
    repr_defined $I5002, fb_tmp_220
    unless $I5002 goto if1139_else2826 
    set $P5008, fb_tmp_220["assertion"]
    set $P5010, $P5008
    goto if1139_end2827
  if1139_else2826:
    null $P5009
    set $P5010, $P5009
  if1139_end2827:
    unless_null $P5010, vivi_11402829
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_11402829:
    $P5012 = $P5010."ast"()
    set __lowered_lex_426, $P5012
.annotate 'line', 993
    $P5013 = __lowered_lex_426."negate"()
    isfalse $I5003, $P5013
    __lowered_lex_426."negate"($I5003)
.annotate 'line', 994
    $P5014 = __lowered_lex_426."subtype"("zerowidth")
    goto if1136_end2821
  if1136_else2820:
.annotate 'line', 996
.annotate 'line', 997
    nqp_get_sc_object $P5015, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5016 = $P5015."new"("anchor" :named("rxtype"), "fail" :named("subtype"), __lowered_lex_425 :named("node"))
    set __lowered_lex_426, $P5016
  if1136_end2821:
.annotate 'line', 999
    $P5017 = __lowered_lex_425."make"(__lowered_lex_426)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<|>" :subid("cuid_212_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1002
    .param pmc __lowered_lex_427 
    .param pmc __lowered_lex_428 
    .local pmc __lowered_lex_429 
    .local pmc __lowered_lex_430 
    .local pmc fb_tmp_221 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_429, $P5001
    unless_null __lowered_lex_428, fallback2832
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_428, $P5002
  fallback2832:
    set fb_tmp_221, __lowered_lex_428
    repr_defined $I5001, fb_tmp_221
    unless $I5001 goto if1141_else2830 
    set $P5003, fb_tmp_221["identifier"]
    set $P5005, $P5003
    goto if1141_end2831
  if1141_else2830:
    null $P5004
    set $P5005, $P5004
  if1141_end2831:
    unless_null $P5005, vivi_11422833
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_11422833:
    set $S5001, $P5005
    box $P5007, $S5001
    set __lowered_lex_430, $P5007
    set $S5002, __lowered_lex_430
    iseq $I5002, $S5002, "c"
    unless $I5002 goto if1143_else2834 
.annotate 'line', 1005
    box $P5008, 0
    set __lowered_lex_429, $P5008
    goto if1143_end2835
  if1143_else2834:
    set $S5003, __lowered_lex_430
    iseq $I5003, $S5003, "w"
    box $P5016, $I5003
    set $P5015, $P5016
    unless $I5003 goto if1144_end2837 
.annotate 'line', 1010
.annotate 'line', 1011
    nqp_get_sc_object $P5009, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1013
    nqp_get_sc_object $P5010, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
    nqp_get_sc_object $P5011, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5012 = $P5011."new"("wb" :named("value"))
    $P5013 = $P5010."new"($P5012)
    $P5014 = $P5009."new"($P5013, "subrule" :named("rxtype"), "method" :named("subtype"), __lowered_lex_428 :named("node"), "" :named("name"))
    set __lowered_lex_429, $P5014
    set $P5015, __lowered_lex_429
  if1144_end2837:
  if1143_end2835:
.annotate 'line', 1015
    $P5017 = __lowered_lex_428."make"(__lowered_lex_429)
    .return ($P5017) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<method>" :subid("cuid_213_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1018
    .param pmc __lowered_lex_431 
    .param pmc __lowered_lex_432 
    .local pmc __lowered_lex_433 
    .local pmc fb_tmp_222 
.annotate 'line', 1019
    unless_null __lowered_lex_432, fallback2840
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_432, $P5001
  fallback2840:
    set fb_tmp_222, __lowered_lex_432
    repr_defined $I5001, fb_tmp_222
    unless $I5001 goto if1145_else2838 
    set $P5002, fb_tmp_222["assertion"]
    set $P5004, $P5002
    goto if1145_end2839
  if1145_else2838:
    null $P5003
    set $P5004, $P5003
  if1145_end2839:
    unless_null $P5004, vivi_11462841
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_11462841:
    $P5006 = $P5004."ast"()
    set __lowered_lex_433, $P5006
.annotate 'line', 1020
    __lowered_lex_433."subtype"("method")
.annotate 'line', 1021
    __lowered_lex_433."name"("")
.annotate 'line', 1022
    $P5007 = __lowered_lex_432."make"(__lowered_lex_433)
    .return ($P5007) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<name>" :subid("cuid_214_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1025
    .param pmc __lowered_lex_439 
    .param pmc __lowered_lex_440 
    .local pmc __lowered_lex_441 
    .local pmc __lowered_lex_442 
    .local pmc fb_tmp_223 
    .local pmc fb_tmp_224 
    .local pmc fb_tmp_225 
    .local pmc __lowered_lex_435 
    .local pmc __lowered_lex_436 
    .local pmc fb_tmp_226 
    .local pmc fb_tmp_227 
    .local pmc pkg_viv_tmp_21 
    .local pmc fb_tmp_228 
    .local pmc fb_tmp_229 
    .local pmc pkg_viv_tmp_22 
    .local pmc __lowered_lex_434 
    .local pmc fb_tmp_230 
    .local pmc fb_tmp_231 
    .local pmc pkg_viv_tmp_23 
    .local pmc fb_tmp_232 
    .local pmc fb_tmp_233 
    .local pmc pkg_viv_tmp_24 
    .local pmc fb_tmp_234 
    .local pmc fb_tmp_235 
    .local pmc pkg_viv_tmp_25 
    .local pmc fb_tmp_236 
    .local pmc lowered_for_it__18 
    .local pmc fb_tmp_237 
    .local pmc __lowered_lex_437 
    .local pmc fb_tmp_238 
    .local pmc fb_tmp_239 
    .local int __lowered_lex_438 
    .local pmc fb_tmp_240 
    .local pmc fb_tmp_241 
    .local pmc fb_tmp_242 
    .local pmc fb_tmp_243 
    .local pmc fb_tmp_244 
    .local pmc fb_tmp_245 
    .local pmc fb_tmp_246 
    .local pmc fb_tmp_247 
    .local pmc fb_tmp_248 
    .local pmc fb_tmp_249 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_442, $P5001
    unless_null __lowered_lex_440, fallback2844
    nqp_get_sc_object $P5002, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5002
  fallback2844:
    set fb_tmp_223, __lowered_lex_440
    repr_defined $I5001, fb_tmp_223
    unless $I5001 goto if1147_else2842 
    set $P5003, fb_tmp_223["longname"]
    set $P5005, $P5003
    goto if1147_end2843
  if1147_else2842:
    null $P5004
    set $P5005, $P5004
  if1147_end2843:
    unless_null $P5005, vivi_11482845
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_11482845:
    set $S5001, $P5005
    box $P5007, $S5001
    set __lowered_lex_441, $P5007
    unless_null __lowered_lex_440, fallback2850
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5008
  fallback2850:
    set fb_tmp_224, __lowered_lex_440
    repr_defined $I5002, fb_tmp_224
    unless $I5002 goto if1150_else2848 
    set $P5009, fb_tmp_224["assertion"]
    set $P5011, $P5009
    goto if1150_end2849
  if1150_else2848:
    null $P5010
    set $P5011, $P5010
  if1150_end2849:
    unless_null $P5011, vivi_11512851
    nqp_get_sc_object $P5012, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5011, $P5012
  vivi_11512851:
    unless $P5011 goto if1149_else2846 
.annotate 'line', 1028
.annotate 'line', 1029
    unless_null __lowered_lex_440, fallback2854
    nqp_get_sc_object $P5013, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5013
  fallback2854:
    set fb_tmp_225, __lowered_lex_440
    repr_defined $I5003, fb_tmp_225
    unless $I5003 goto if1152_else2852 
    set $P5014, fb_tmp_225["assertion"]
    set $P5016, $P5014
    goto if1152_end2853
  if1152_else2852:
    null $P5015
    set $P5016, $P5015
  if1152_end2853:
    unless_null $P5016, vivi_11532855
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_11532855:
    $P5018 = $P5016."ast"()
    set __lowered_lex_442, $P5018
.annotate 'line', 1030
    $P5019 = __lowered_lex_442."rxtype"()
    set $S5002, $P5019
    iseq $I5004, $S5002, "subrule"
    unless $I5004 goto if1154_else2856 
.annotate 'line', 1031
    nqp_decontainerize $P5020, __lowered_lex_439
    $P5021 = $P5020."subrule_alias"(__lowered_lex_442, __lowered_lex_441)
    set $P5024, $P5021
    goto if1154_end2857
  if1154_else2856:
.annotate 'line', 1033
.annotate 'line', 1034
    nqp_get_sc_object $P5022, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5023 = $P5022."new"(__lowered_lex_442, __lowered_lex_441 :named("name"), "subcapture" :named("rxtype"), __lowered_lex_440 :named("node"))
    set __lowered_lex_442, $P5023
    set $P5024, __lowered_lex_442
  if1154_end2857:
    goto if1149_end2847
  if1149_else2846:
    set $S5003, __lowered_lex_441
    iseq $I5005, $S5003, "sym"
    unless $I5005 goto if1155_else2858 
.annotate 'line', 1038
    box $P5025, ""
    set __lowered_lex_435, $P5025
    find_dynamic_lex $P5026, "%*RX"
    unless_null $P5026, fallback2862
    nqp_get_sc_object $P5028, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5027, $P5028
    set pkg_viv_tmp_21, $P5027
    set fb_tmp_227, pkg_viv_tmp_21
    repr_defined $I5008, fb_tmp_227
    unless $I5008 goto if1157_else2863 
    set $P5029, fb_tmp_227["%RX"]
    set $P5031, $P5029
    goto if1157_end2864
  if1157_else2863:
    null $P5030
    set $P5031, $P5030
  if1157_end2864:
    unless_null $P5031, vivi_11582865
    new $P5032, 'Hash'
    set pkg_viv_tmp_21["%RX"], $P5032
    set $P5031, $P5032
  vivi_11582865:
    unless_null $P5031, vivi_11592866
    die "Contextual %*RX not found"
    box $P5033, "Contextual %*RX not found"
    set $P5031, $P5033
  vivi_11592866:
    set $P5026, $P5031
  fallback2862:
    set fb_tmp_226, $P5026
    repr_defined $I5007, fb_tmp_226
    unless $I5007 goto if1156_else2860 
    set $P5034, fb_tmp_226["name"]
    set $P5036, $P5034
    goto if1156_end2861
  if1156_else2860:
    null $P5035
    set $P5036, $P5035
  if1156_end2861:
    unless_null $P5036, vivi_11602867
    nqp_get_sc_object $P5037, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5036, $P5037
  vivi_11602867:
    set $S5004, $P5036
    index $I5006, $S5004, ":sym<", 0
    box $P5038, $I5006
    set __lowered_lex_436, $P5038
    set $N5001, __lowered_lex_436
    set $N5002, 0
    isge $I5009, $N5001, $N5002
    unless $I5009 goto if1161_else2868 
.annotate 'line', 1041
    find_dynamic_lex $P5039, "%*RX"
    unless_null $P5039, fallback2872
    nqp_get_sc_object $P5041, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5040, $P5041
    set pkg_viv_tmp_22, $P5040
    set fb_tmp_229, pkg_viv_tmp_22
    repr_defined $I5011, fb_tmp_229
    unless $I5011 goto if1163_else2873 
    set $P5042, fb_tmp_229["%RX"]
    set $P5044, $P5042
    goto if1163_end2874
  if1163_else2873:
    null $P5043
    set $P5044, $P5043
  if1163_end2874:
    unless_null $P5044, vivi_11642875
    new $P5045, 'Hash'
    set pkg_viv_tmp_22["%RX"], $P5045
    set $P5044, $P5045
  vivi_11642875:
    unless_null $P5044, vivi_11652876
    die "Contextual %*RX not found"
    box $P5046, "Contextual %*RX not found"
    set $P5044, $P5046
  vivi_11652876:
    set $P5039, $P5044
  fallback2872:
    set fb_tmp_228, $P5039
    repr_defined $I5010, fb_tmp_228
    unless $I5010 goto if1162_else2870 
    set $P5047, fb_tmp_228["name"]
    set $P5049, $P5047
    goto if1162_end2871
  if1162_else2870:
    null $P5048
    set $P5049, $P5048
  if1162_end2871:
    unless_null $P5049, vivi_11662877
    nqp_get_sc_object $P5050, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5049, $P5050
  vivi_11662877:
    set $S5006, $P5049
    set $N5004, __lowered_lex_436
    set $N5005, 5
    add $N5003, $N5004, $N5005
    set $I5012, $N5003
    substr $S5005, $S5006, $I5012
    box $P5051, $S5005
    set __lowered_lex_435, $P5051
    set $S5008, __lowered_lex_435
    set $S5009, __lowered_lex_435
    length $I5014, $S5009
    sub $I5013, $I5014, 1
    substr $S5007, $S5008, 0, $I5013
    box $P5052, $S5007
    set __lowered_lex_435, $P5052
    goto if1161_end2869
  if1161_else2868:
.annotate 'line', 1045
    find_dynamic_lex $P5053, "%*RX"
    unless_null $P5053, fallback2880
    nqp_get_sc_object $P5055, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5054, $P5055
    set pkg_viv_tmp_23, $P5054
    set fb_tmp_231, pkg_viv_tmp_23
    repr_defined $I5017, fb_tmp_231
    unless $I5017 goto if1168_else2881 
    set $P5056, fb_tmp_231["%RX"]
    set $P5058, $P5056
    goto if1168_end2882
  if1168_else2881:
    null $P5057
    set $P5058, $P5057
  if1168_end2882:
    unless_null $P5058, vivi_11692883
    new $P5059, 'Hash'
    set pkg_viv_tmp_23["%RX"], $P5059
    set $P5058, $P5059
  vivi_11692883:
    unless_null $P5058, vivi_11702884
    die "Contextual %*RX not found"
    box $P5060, "Contextual %*RX not found"
    set $P5058, $P5060
  vivi_11702884:
    set $P5053, $P5058
  fallback2880:
    set fb_tmp_230, $P5053
    repr_defined $I5016, fb_tmp_230
    unless $I5016 goto if1167_else2878 
    set $P5061, fb_tmp_230["name"]
    set $P5063, $P5061
    goto if1167_end2879
  if1167_else2878:
    null $P5062
    set $P5063, $P5062
  if1167_end2879:
    unless_null $P5063, vivi_11712885
    nqp_get_sc_object $P5064, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5063, $P5064
  vivi_11712885:
    set $S5010, $P5063
    index $I5015, $S5010, ":", 0
    box $P5065, $I5015
    set __lowered_lex_436, $P5065
    find_dynamic_lex $P5066, "%*RX"
    unless_null $P5066, fallback2888
    nqp_get_sc_object $P5068, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5067, $P5068
    set pkg_viv_tmp_24, $P5067
    set fb_tmp_233, pkg_viv_tmp_24
    repr_defined $I5020, fb_tmp_233
    unless $I5020 goto if1173_else2889 
    set $P5069, fb_tmp_233["%RX"]
    set $P5071, $P5069
    goto if1173_end2890
  if1173_else2889:
    null $P5070
    set $P5071, $P5070
  if1173_end2890:
    unless_null $P5071, vivi_11742891
    new $P5072, 'Hash'
    set pkg_viv_tmp_24["%RX"], $P5072
    set $P5071, $P5072
  vivi_11742891:
    unless_null $P5071, vivi_11752892
    die "Contextual %*RX not found"
    box $P5073, "Contextual %*RX not found"
    set $P5071, $P5073
  vivi_11752892:
    set $P5066, $P5071
  fallback2888:
    set fb_tmp_232, $P5066
    repr_defined $I5019, fb_tmp_232
    unless $I5019 goto if1172_else2886 
    set $P5074, fb_tmp_232["name"]
    set $P5076, $P5074
    goto if1172_end2887
  if1172_else2886:
    null $P5075
    set $P5076, $P5075
  if1172_end2887:
    unless_null $P5076, vivi_11762893
    nqp_get_sc_object $P5077, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5076, $P5077
  vivi_11762893:
    set $S5011, $P5076
    set $I5021, __lowered_lex_436
    index $I5018, $S5011, "<", $I5021
    box $P5078, $I5018
    set __lowered_lex_434, $P5078
    set $N5006, __lowered_lex_436
    set $N5007, 0
    islt $I5022, $N5006, $N5007
    box $P5093, $I5022
    set $P5092, $P5093
    if $I5022 goto unless1177_end2895 
    find_dynamic_lex $P5079, "%*RX"
    unless_null $P5079, fallback2898
    nqp_get_sc_object $P5081, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5080, $P5081
    set pkg_viv_tmp_25, $P5080
    set fb_tmp_235, pkg_viv_tmp_25
    repr_defined $I5024, fb_tmp_235
    unless $I5024 goto if1179_else2899 
    set $P5082, fb_tmp_235["%RX"]
    set $P5084, $P5082
    goto if1179_end2900
  if1179_else2899:
    null $P5083
    set $P5084, $P5083
  if1179_end2900:
    unless_null $P5084, vivi_11802901
    new $P5085, 'Hash'
    set pkg_viv_tmp_25["%RX"], $P5085
    set $P5084, $P5085
  vivi_11802901:
    unless_null $P5084, vivi_11812902
    die "Contextual %*RX not found"
    box $P5086, "Contextual %*RX not found"
    set $P5084, $P5086
  vivi_11812902:
    set $P5079, $P5084
  fallback2898:
    set fb_tmp_234, $P5079
    repr_defined $I5023, fb_tmp_234
    unless $I5023 goto if1178_else2896 
    set $P5087, fb_tmp_234["name"]
    set $P5089, $P5087
    goto if1178_end2897
  if1178_else2896:
    null $P5088
    set $P5089, $P5088
  if1178_end2897:
    unless_null $P5089, vivi_11822903
    nqp_get_sc_object $P5090, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5089, $P5090
  vivi_11822903:
    set $S5013, $P5089
    set $N5009, __lowered_lex_436
    set $N5010, 1
    add $N5008, $N5009, $N5010
    set $I5025, $N5008
    set $N5013, __lowered_lex_434
    set $N5014, __lowered_lex_436
    sub $N5012, $N5013, $N5014
    set $N5015, 1
    sub $N5011, $N5012, $N5015
    set $I5026, $N5011
    substr $S5012, $S5013, $I5025, $I5026
    box $P5091, $S5012
    set __lowered_lex_435, $P5091
    set $P5092, __lowered_lex_435
  unless1177_end2895:
  if1161_end2869:
    set $N5016, __lowered_lex_436
    set $N5017, 0
    isge $I5027, $N5016, $N5017
    unless $I5027 goto if1183_else2904 
.annotate 'line', 1050
.annotate 'line', 1051
    nqp_get_sc_object $P5094, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1052
    nqp_get_sc_object $P5095, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5096 = $P5095."new"(__lowered_lex_435, "literal" :named("rxtype"), __lowered_lex_440 :named("node"))
    $P5097 = $P5094."new"($P5096, "sym" :named("name"), "subcapture" :named("rxtype"), __lowered_lex_440 :named("node"))
    set __lowered_lex_442, $P5097
    set $P5100, __lowered_lex_442
    goto if1183_end2905
  if1183_else2904:
.annotate 'line', 1054
.annotate 'line', 1055
    nqp_decontainerize $P5098, __lowered_lex_439
    $P5099 = $P5098."panic"("<sym> is only valid in multiregexes")
    set $P5100, $P5099
  if1183_end2905:
    set $P5201, $P5100
    goto if1155_end2859
  if1155_else2858:
.annotate 'line', 1058
.annotate 'line', 1059
    nqp_get_sc_object $P5101, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1061
    nqp_get_sc_object $P5102, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
    nqp_get_sc_object $P5103, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5104 = $P5103."new"(__lowered_lex_441 :named("value"))
    $P5105 = $P5102."new"($P5104)
    $P5106 = $P5101."new"($P5105, "subrule" :named("rxtype"), "capture" :named("subtype"), __lowered_lex_440 :named("node"), __lowered_lex_441 :named("name"))
    set __lowered_lex_442, $P5106
    unless_null __lowered_lex_440, fallback2910
    nqp_get_sc_object $P5107, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5107
  fallback2910:
    set fb_tmp_236, __lowered_lex_440
    repr_defined $I5028, fb_tmp_236
    unless $I5028 goto if1185_else2908 
    set $P5108, fb_tmp_236["arglist"]
    set $P5110, $P5108
    goto if1185_end2909
  if1185_else2908:
    null $P5109
    set $P5110, $P5109
  if1185_end2909:
    unless_null $P5110, vivi_11862911
    nqp_get_sc_object $P5111, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5110, $P5111
  vivi_11862911:
    unless $P5110 goto if1184_else2906 
.annotate 'line', 1062
.annotate 'line', 1063
    unless_null __lowered_lex_440, fallback2914
    nqp_get_sc_object $P5113, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5113
  fallback2914:
    set fb_tmp_237, __lowered_lex_440
    repr_defined $I5029, fb_tmp_237
    unless $I5029 goto if1187_else2912 
    set $P5114, fb_tmp_237["arglist"]
    set $P5116, $P5114
    goto if1187_end2913
  if1187_else2912:
    null $P5115
    set $P5116, $P5115
  if1187_end2913:
    unless_null $P5116, vivi_11882915
    nqp_get_sc_object $P5117, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5116, $P5117
  vivi_11882915:
    $P5118 = $P5116."ast"()
    $P5119 = $P5118."list"()
    iter $P5112, $P5119
    set lowered_for_it__18, $P5112
    new $P5127, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5127, while1189_handlers2919
    push_eh $P5127
  while1189_test2916:
    set $P5126, lowered_for_it__18
    unless lowered_for_it__18 goto while1189_done2920 
  while1189_redo2918:
    shift $P5120, lowered_for_it__18
    set __lowered_lex_437, $P5120
    set fb_tmp_238, __lowered_lex_442
    repr_defined $I5030, fb_tmp_238
    unless $I5030 goto if1190_else2921 
    set $P5121, fb_tmp_238[0]
    set $P5123, $P5121
    goto if1190_end2922
  if1190_else2921:
    null $P5122
    set $P5123, $P5122
  if1190_end2922:
    unless_null $P5123, vivi_11912923
    nqp_get_sc_object $P5124, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5123, $P5124
  vivi_11912923:
    $P5125 = $P5123."push"(__lowered_lex_437)
    set $P5126, $P5125
    goto while1189_test2916 
  while1189_handlers2919:
    .get_results ($P5127)
    pop_upto_eh $P5127
    getattribute $P5128, $P5127, 'type'
    eq $P5128, .CONTROL_LOOP_NEXT, while1189_test2916
    eq $P5128, .CONTROL_LOOP_REDO, while1189_redo2918
  while1189_done2920:
    pop_eh 
    set $P5200, $P5126
    goto if1184_end2907
  if1184_else2906:
    unless_null __lowered_lex_440, fallback2928
    nqp_get_sc_object $P5129, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5129
  fallback2928:
    set fb_tmp_239, __lowered_lex_440
    repr_defined $I5031, fb_tmp_239
    unless $I5031 goto if1193_else2926 
    set $P5130, fb_tmp_239["nibbler"]
    set $P5132, $P5130
    goto if1193_end2927
  if1193_else2926:
    null $P5131
    set $P5132, $P5131
  if1193_end2927:
    unless_null $P5132, vivi_11942929
    nqp_get_sc_object $P5133, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5132, $P5133
  vivi_11942929:
    set $P5199, $P5132
    unless $P5132 goto if1192_end2925 
.annotate 'line', 1065
    set $S5014, __lowered_lex_441
    iseq $I5032, $S5014, "after"
    unless $I5032 goto if1195_else2930 
.annotate 'line', 1066
.annotate 'line', 1067
    nqp_decontainerize $P5134, __lowered_lex_439
    unless_null __lowered_lex_440, fallback2934
    nqp_get_sc_object $P5135, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5135
  fallback2934:
    set fb_tmp_240, __lowered_lex_440
    repr_defined $I5033, fb_tmp_240
    unless $I5033 goto if1196_else2932 
    set $P5136, fb_tmp_240["nibbler"]
    set $P5138, $P5136
    goto if1196_end2933
  if1196_else2932:
    null $P5137
    set $P5138, $P5137
  if1196_end2933:
    unless_null $P5138, vivi_11972935
    nqp_get_sc_object $P5139, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5138, $P5139
  vivi_11972935:
    $P5140 = $P5138."ast"()
    $P5141 = $P5134."offset_ast"($P5140)
    set $I5034, $P5141
    set __lowered_lex_438, $I5034
    isge $I5035, __lowered_lex_438, 0
    unless $I5035 goto if1198_else2936 
.annotate 'line', 1068
.annotate 'line', 1069
    set fb_tmp_242, __lowered_lex_442
    repr_defined $I5037, fb_tmp_242
    unless $I5037 goto if1200_else2940 
    set $P5142, fb_tmp_242[0]
    set $P5144, $P5142
    goto if1200_end2941
  if1200_else2940:
    null $P5143
    set $P5144, $P5143
  if1200_end2941:
    unless_null $P5144, vivi_12012942
    nqp_get_sc_object $P5145, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5144, $P5145
  vivi_12012942:
    set fb_tmp_241, $P5144
    repr_defined $I5036, fb_tmp_241
    unless $I5036 goto if1199_else2938 
    set $P5146, fb_tmp_241[0]
    set $P5148, $P5146
    goto if1199_end2939
  if1199_else2938:
    null $P5147
    set $P5148, $P5147
  if1199_end2939:
    unless_null $P5148, vivi_12022943
    nqp_get_sc_object $P5149, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5148, $P5149
  vivi_12022943:
    $P5148."value"("before")
.annotate 'line', 1070
    set fb_tmp_243, __lowered_lex_442
    repr_defined $I5038, fb_tmp_243
    unless $I5038 goto if1203_else2944 
    set $P5150, fb_tmp_243[0]
    set $P5152, $P5150
    goto if1203_end2945
  if1203_else2944:
    null $P5151
    set $P5152, $P5151
  if1203_end2945:
    unless_null $P5152, vivi_12042946
    nqp_get_sc_object $P5153, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5152, $P5153
  vivi_12042946:
    nqp_decontainerize $P5154, __lowered_lex_439
    unless_null __lowered_lex_440, fallback2949
    nqp_get_sc_object $P5155, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5155
  fallback2949:
    set fb_tmp_244, __lowered_lex_440
    repr_defined $I5039, fb_tmp_244
    unless $I5039 goto if1205_else2947 
    set $P5156, fb_tmp_244["nibbler"]
    set $P5158, $P5156
    goto if1205_end2948
  if1205_else2947:
    null $P5157
    set $P5158, $P5157
  if1205_end2948:
    unless_null $P5158, vivi_12062950
    nqp_get_sc_object $P5159, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5158, $P5159
  vivi_12062950:
    $P5160 = $P5158."ast"()
    $P5161 = $P5154."qbuildsub"($P5160, 1 :named("anon"), 1 :named("addself"))
    $P5152."push"($P5161)
.annotate 'line', 1071
    set fb_tmp_245, __lowered_lex_442
    repr_defined $I5040, fb_tmp_245
    unless $I5040 goto if1207_else2951 
    set $P5162, fb_tmp_245[0]
    set $P5164, $P5162
    goto if1207_end2952
  if1207_else2951:
    null $P5163
    set $P5164, $P5163
  if1207_end2952:
    unless_null $P5164, vivi_12082953
    nqp_get_sc_object $P5165, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5164, $P5165
  vivi_12082953:
    nqp_get_sc_object $P5166, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 63
    $P5167 = $P5166."new"(__lowered_lex_438 :named("value"))
    $P5168 = $P5164."push"($P5167)
    set $P5184, $P5168
    goto if1198_end2937
  if1198_else2936:
.annotate 'line', 1073
.annotate 'line', 1074
    set fb_tmp_246, __lowered_lex_442
    repr_defined $I5041, fb_tmp_246
    unless $I5041 goto if1209_else2954 
    set $P5169, fb_tmp_246[0]
    set $P5171, $P5169
    goto if1209_end2955
  if1209_else2954:
    null $P5170
    set $P5171, $P5170
  if1209_end2955:
    unless_null $P5171, vivi_12102956
    nqp_get_sc_object $P5172, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5171, $P5172
  vivi_12102956:
    nqp_decontainerize $P5173, __lowered_lex_439
    nqp_decontainerize $P5174, __lowered_lex_439
    unless_null __lowered_lex_440, fallback2959
    nqp_get_sc_object $P5175, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5175
  fallback2959:
    set fb_tmp_247, __lowered_lex_440
    repr_defined $I5042, fb_tmp_247
    unless $I5042 goto if1211_else2957 
    set $P5176, fb_tmp_247["nibbler"]
    set $P5178, $P5176
    goto if1211_end2958
  if1211_else2957:
    null $P5177
    set $P5178, $P5177
  if1211_end2958:
    unless_null $P5178, vivi_12122960
    nqp_get_sc_object $P5179, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5178, $P5179
  vivi_12122960:
    $P5180 = $P5178."ast"()
    $P5181 = $P5174."flip_ast"($P5180)
    $P5182 = $P5173."qbuildsub"($P5181, 1 :named("anon"), 1 :named("addself"))
    $P5183 = $P5171."push"($P5182)
    set $P5184, $P5183
  if1198_end2937:
    set $P5198, $P5184
    goto if1195_end2931
  if1195_else2930:
.annotate 'line', 1077
.annotate 'line', 1078
    set fb_tmp_248, __lowered_lex_442
    repr_defined $I5043, fb_tmp_248
    unless $I5043 goto if1213_else2961 
    set $P5185, fb_tmp_248[0]
    set $P5187, $P5185
    goto if1213_end2962
  if1213_else2961:
    null $P5186
    set $P5187, $P5186
  if1213_end2962:
    unless_null $P5187, vivi_12142963
    nqp_get_sc_object $P5188, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5187, $P5188
  vivi_12142963:
    nqp_decontainerize $P5189, __lowered_lex_439
    unless_null __lowered_lex_440, fallback2966
    nqp_get_sc_object $P5190, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_440, $P5190
  fallback2966:
    set fb_tmp_249, __lowered_lex_440
    repr_defined $I5044, fb_tmp_249
    unless $I5044 goto if1215_else2964 
    set $P5191, fb_tmp_249["nibbler"]
    set $P5193, $P5191
    goto if1215_end2965
  if1215_else2964:
    null $P5192
    set $P5193, $P5192
  if1215_end2965:
    unless_null $P5193, vivi_12162967
    nqp_get_sc_object $P5194, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5193, $P5194
  vivi_12162967:
    $P5195 = $P5193."ast"()
    $P5196 = $P5189."qbuildsub"($P5195, 1 :named("anon"), 1 :named("addself"))
    $P5197 = $P5187."push"($P5196)
    set $P5198, $P5197
  if1195_end2931:
    set $P5199, $P5198
  if1192_end2925:
    set $P5200, $P5199
  if1184_end2907:
    set $P5201, $P5200
  if1155_end2859:
  if1149_end2847:
.annotate 'line', 1082
    $P5202 = __lowered_lex_440."make"(__lowered_lex_442)
    .return ($P5202) 
.end
.HLL "nqp"
.namespace []
.sub "assertion:sym<[>" :subid("cuid_215_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1085
    .param pmc __lowered_lex_444 
    .param pmc __lowered_lex_445 
    .local pmc __lowered_lex_446 
    .local pmc __lowered_lex_447 
    .local int __lowered_lex_448 
    .local int __lowered_lex_449 
    .local pmc fb_tmp_250 
    .local pmc fb_tmp_251 
    .local pmc __lowered_lex_443 
    .local pmc fb_tmp_252 
    .local int tmp_2 
    unless_null __lowered_lex_445, fallback2970
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_445, $P5001
  fallback2970:
    set fb_tmp_250, __lowered_lex_445
    repr_defined $I5001, fb_tmp_250
    unless $I5001 goto if1217_else2968 
    set $P5002, fb_tmp_250["cclass_elem"]
    set $P5004, $P5002
    goto if1217_end2969
  if1217_else2968:
    null $P5003
    set $P5004, $P5003
  if1217_end2969:
    unless_null $P5004, vivi_12182971
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_12182971:
    set __lowered_lex_446, $P5004
.annotate 'line', 1087
    set fb_tmp_251, __lowered_lex_446
    repr_defined $I5002, fb_tmp_251
    unless $I5002 goto if1219_else2972 
    set $P5006, fb_tmp_251[0]
    set $P5008, $P5006
    goto if1219_end2973
  if1219_else2972:
    null $P5007
    set $P5008, $P5007
  if1219_end2973:
    unless_null $P5008, vivi_12202974
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_12202974:
    $P5010 = $P5008."ast"()
    set __lowered_lex_447, $P5010
.annotate 'line', 1088
    $P5011 = __lowered_lex_447."negate"()
    set $P5013, $P5011
    unless $P5011 goto if1222_end2978 
    $P5012 = __lowered_lex_447."rxtype"()
    set $S5001, $P5012
    iseq $I5003, $S5001, "subrule"
    box $P5014, $I5003
    set $P5013, $P5014
  if1222_end2978:
    unless $P5013 goto if1221_end2976 
.annotate 'line', 1089
    __lowered_lex_447."subtype"("zerowidth")
.annotate 'line', 1090
    nqp_get_sc_object $P5015, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1092
    nqp_get_sc_object $P5016, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5017 = $P5016."new"("cclass" :named("rxtype"), "." :named("name"))
    $P5018 = $P5015."new"(__lowered_lex_447, $P5017, "concat" :named("rxtype"), __lowered_lex_445 :named("node"))
    set __lowered_lex_447, $P5018
  if1221_end2976:
    set __lowered_lex_448, 1
    elements $I5004, __lowered_lex_446
    set __lowered_lex_449, $I5004
  while1223_test2979:
    islt $I5005, __lowered_lex_448, __lowered_lex_449
    box $P5036, $I5005
    set $P5035, $P5036
    unless $I5005 goto while1223_done2983 
  while1223_redo2981:
.annotate 'line', 1097
.annotate 'line', 1098
    set fb_tmp_252, __lowered_lex_446
    repr_defined $I5006, fb_tmp_252
    unless $I5006 goto if1224_else2984 
    set $P5019, fb_tmp_252[__lowered_lex_448]
    set $P5021, $P5019
    goto if1224_end2985
  if1224_else2984:
    null $P5020
    set $P5021, $P5020
  if1224_end2985:
    unless_null $P5021, vivi_12252986
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_12252986:
    $P5023 = $P5021."ast"()
    set __lowered_lex_443, $P5023
.annotate 'line', 1099
    $P5024 = __lowered_lex_443."negate"()
    set $P5027, $P5024
    if $P5024 goto unless1227_end2990 
    $P5025 = __lowered_lex_443."rxtype"()
    set $S5002, $P5025
    iseq $I5007, $S5002, "cclass"
    set $I5009, $I5007
    unless $I5007 goto if1228_end2992 
    $P5026 = __lowered_lex_443."node"()
    set $S5003, $P5026
    isle $I5008, $S5003, "Z"
    set $I5009, $I5008
  if1228_end2992:
    box $P5028, $I5009
    set $P5027, $P5028
  unless1227_end2990:
    unless $P5027 goto if1226_else2987 
.annotate 'line', 1100
    __lowered_lex_443."subtype"("zerowidth")
.annotate 'line', 1101
    nqp_get_sc_object $P5029, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1102
    nqp_get_sc_object $P5030, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5031 = $P5030."new"(__lowered_lex_443, "conj" :named("rxtype"), "zerowidth" :named("subtype"))
    $P5032 = $P5029."new"($P5031, __lowered_lex_447, "concat" :named("rxtype"), __lowered_lex_445 :named("node"), "zerowidth" :named("subtype"), 1 :named("negate"))
    set __lowered_lex_447, $P5032
    goto if1226_end2988
  if1226_else2987:
.annotate 'line', 1105
.annotate 'line', 1106
    nqp_get_sc_object $P5033, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5034 = $P5033."new"(__lowered_lex_447, __lowered_lex_443, "alt" :named("rxtype"), __lowered_lex_445 :named("node"))
    set __lowered_lex_447, $P5034
  if1226_end2988:
    set tmp_2, __lowered_lex_448
    add $I5010, tmp_2, 1
    set __lowered_lex_448, $I5010
    box $P5037, tmp_2
    set $P5035, $P5037
    goto while1223_test2979 
  while1223_done2983:
.annotate 'line', 1110
    $P5038 = __lowered_lex_445."make"(__lowered_lex_447)
    .return ($P5038) 
.end
.HLL "nqp"
.namespace []
.sub "arg" :subid("cuid_216_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1113
    .param pmc __lowered_lex_450 
    .param pmc __lowered_lex_451 
    .local pmc fb_tmp_253 
    .local pmc fb_tmp_254 
    .local pmc fb_tmp_255 
.annotate 'line', 1114
    unless_null __lowered_lex_451, fallback2997
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_451, $P5001
  fallback2997:
    set fb_tmp_253, __lowered_lex_451
    repr_defined $I5001, fb_tmp_253
    unless $I5001 goto if1230_else2995 
    set $P5002, fb_tmp_253["quote_EXPR"]
    set $P5004, $P5002
    goto if1230_end2996
  if1230_else2995:
    null $P5003
    set $P5004, $P5003
  if1230_end2996:
    unless_null $P5004, vivi_12312998
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_12312998:
    unless $P5004 goto if1229_else2993 
.annotate 'line', 1115
    unless_null __lowered_lex_451, fallback3001
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_451, $P5006
  fallback3001:
    set fb_tmp_254, __lowered_lex_451
    repr_defined $I5002, fb_tmp_254
    unless $I5002 goto if1232_else2999 
    set $P5007, fb_tmp_254["quote_EXPR"]
    set $P5009, $P5007
    goto if1232_end3000
  if1232_else2999:
    null $P5008
    set $P5009, $P5008
  if1232_end3000:
    unless_null $P5009, vivi_12333002
    nqp_get_sc_object $P5010, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5009, $P5010
  vivi_12333002:
    $P5011 = $P5009."ast"()
    set $P5019, $P5011
    goto if1229_end2994
  if1229_else2993:
.annotate 'line', 1116
    nqp_get_sc_object $P5012, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 70
    unless_null __lowered_lex_451, fallback3005
    nqp_get_sc_object $P5013, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_451, $P5013
  fallback3005:
    set fb_tmp_255, __lowered_lex_451
    repr_defined $I5003, fb_tmp_255
    unless $I5003 goto if1234_else3003 
    set $P5014, fb_tmp_255["val"]
    set $P5016, $P5014
    goto if1234_end3004
  if1234_else3003:
    null $P5015
    set $P5016, $P5015
  if1234_end3004:
    unless_null $P5016, vivi_12353006
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_12353006:
    set $N5001, $P5016
    $P5018 = $P5012."new"($N5001 :named("value"))
    set $P5019, $P5018
  if1229_end2994:
    $P5020 = __lowered_lex_451."make"($P5019)
    .return ($P5020) 
.end
.HLL "nqp"
.namespace []
.sub "arglist" :subid("cuid_217_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1119
    .param pmc __lowered_lex_453 
    .param pmc __lowered_lex_454 
    .local pmc __lowered_lex_455 
    .local pmc lowered_for_it__19 
    .local pmc fb_tmp_256 
    .local pmc __lowered_lex_452 
.annotate 'line', 1120
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
    $P5002 = $P5001."new"("list" :named("op"))
    set __lowered_lex_455, $P5002
    unless_null __lowered_lex_454, fallback3009
    nqp_get_sc_object $P5004, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_454, $P5004
  fallback3009:
    set fb_tmp_256, __lowered_lex_454
    repr_defined $I5001, fb_tmp_256
    unless $I5001 goto if1236_else3007 
    set $P5005, fb_tmp_256["arg"]
    set $P5007, $P5005
    goto if1236_end3008
  if1236_else3007:
    null $P5006
    set $P5007, $P5006
  if1236_end3008:
    unless_null $P5007, vivi_12373010
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5007, $P5008
  vivi_12373010:
    iter $P5003, $P5007
    set lowered_for_it__19, $P5003
    new $P5013, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5013, while1238_handlers3014
    push_eh $P5013
  while1238_test3011:
    set $P5012, lowered_for_it__19
    unless lowered_for_it__19 goto while1238_done3015 
  while1238_redo3013:
    shift $P5009, lowered_for_it__19
    set __lowered_lex_452, $P5009
.annotate 'line', 1121
    $P5010 = __lowered_lex_452."ast"()
    $P5011 = __lowered_lex_455."push"($P5010)
    set $P5012, $P5011
    goto while1238_test3011 
  while1238_handlers3014:
    .get_results ($P5013)
    pop_upto_eh $P5013
    getattribute $P5014, $P5013, 'type'
    eq $P5014, .CONTROL_LOOP_NEXT, while1238_test3011
    eq $P5014, .CONTROL_LOOP_REDO, while1238_redo3013
  while1238_done3015:
    pop_eh 
.annotate 'line', 1122
    $P5015 = __lowered_lex_454."make"(__lowered_lex_455)
    .return ($P5015) 
.end
.HLL "nqp"
.namespace []
.sub "cclass_elem" :subid("cuid_218_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1125
    .param pmc __lowered_lex_468 
    .param pmc __lowered_lex_469 
    .local pmc __lowered_lex_470 
    .local pmc __lowered_lex_471 
    .local pmc fb_tmp_257 
    .local pmc __lowered_lex_456 
    .local pmc fb_tmp_258 
    .local pmc fb_tmp_259 
    .local pmc fb_tmp_260 
    .local pmc fb_tmp_261 
    .local pmc fb_tmp_262 
    .local pmc fb_tmp_263 
    .local pmc fb_tmp_264 
    .local pmc fb_tmp_265 
    .local pmc fb_tmp_266 
    .local pmc fb_tmp_267 
    .local pmc __lowered_lex_464 
    .local pmc __lowered_lex_465 
    .local pmc __lowered_lex_466 
    .local pmc __lowered_lex_467 
    .local pmc fb_tmp_268 
    .local pmc fb_tmp_269 
    .local pmc pkg_viv_tmp_26 
    .local pmc fb_tmp_270 
    .local pmc fb_tmp_271 
    .local pmc pkg_viv_tmp_27 
    .local pmc lowered_for_it__20 
    .local pmc fb_tmp_272 
    .local pmc __lowered_lex_463 
    .local pmc fb_tmp_273 
    .local pmc __lowered_lex_457 
    .local pmc __lowered_lex_458 
    .local pmc __lowered_lex_459 
    .local pmc fb_tmp_274 
    .local pmc fb_tmp_275 
    .local pmc fb_tmp_276 
    .local pmc fb_tmp_277 
    .local pmc fb_tmp_278 
    .local pmc fb_tmp_279 
    .local pmc fb_tmp_280 
    .local pmc fb_tmp_281 
    .local pmc fb_tmp_282 
    .local pmc fb_tmp_283 
    .local pmc fb_tmp_284 
    .local pmc fb_tmp_285 
    .local pmc fb_tmp_286 
    .local pmc fb_tmp_287 
    .local pmc fb_tmp_288 
    .local pmc fb_tmp_289 
    .local pmc fb_tmp_290 
    .local pmc fb_tmp_291 
    .local pmc fb_tmp_292 
    .local pmc fb_tmp_293 
    .local pmc fb_tmp_294 
    .local pmc fb_tmp_295 
    .local pmc fb_tmp_296 
    .local pmc fb_tmp_297 
    .local pmc fb_tmp_298 
    .local pmc fb_tmp_299 
    .local pmc fb_tmp_300 
    .local pmc __lowered_lex_460 
    .local pmc fb_tmp_301 
    .local pmc fb_tmp_302 
    .local pmc fb_tmp_303 
    .local pmc fb_tmp_304 
    .local pmc __lowered_lex_461 
    .local pmc fb_tmp_305 
    .local pmc __lowered_lex_462 
    .local pmc fb_tmp_306 
    .local pmc fb_tmp_307 
    .local pmc fb_tmp_308 
    .local pmc fb_tmp_309 
    .local pmc fb_tmp_310 
    .local pmc fb_tmp_311 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_471, $P5001
    box $P5002, ""
    set __lowered_lex_470, $P5002
    unless_null __lowered_lex_469, fallback3020
    nqp_get_sc_object $P5003, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5003
  fallback3020:
    set fb_tmp_257, __lowered_lex_469
    repr_defined $I5001, fb_tmp_257
    unless $I5001 goto if1240_else3018 
    set $P5004, fb_tmp_257["name"]
    set $P5006, $P5004
    goto if1240_end3019
  if1240_else3018:
    null $P5005
    set $P5006, $P5005
  if1240_end3019:
    unless_null $P5006, vivi_12413021
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_12413021:
    unless $P5006 goto if1239_else3016 
.annotate 'line', 1128
    unless_null __lowered_lex_469, fallback3024
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5008
  fallback3024:
    set fb_tmp_258, __lowered_lex_469
    repr_defined $I5002, fb_tmp_258
    unless $I5002 goto if1242_else3022 
    set $P5009, fb_tmp_258["name"]
    set $P5011, $P5009
    goto if1242_end3023
  if1242_else3022:
    null $P5010
    set $P5011, $P5010
  if1242_end3023:
    unless_null $P5011, vivi_12433025
    nqp_get_sc_object $P5012, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5011, $P5012
  vivi_12433025:
    set $S5001, $P5011
    box $P5013, $S5001
    set __lowered_lex_456, $P5013
.annotate 'line', 1130
    nqp_get_sc_object $P5014, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_469, fallback3028
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5015
  fallback3028:
    set fb_tmp_259, __lowered_lex_469
    repr_defined $I5004, fb_tmp_259
    unless $I5004 goto if1244_else3026 
    set $P5016, fb_tmp_259["sign"]
    set $P5018, $P5016
    goto if1244_end3027
  if1244_else3026:
    null $P5017
    set $P5018, $P5017
  if1244_end3027:
    unless_null $P5018, vivi_12453029
    nqp_get_sc_object $P5019, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5018, $P5019
  vivi_12453029:
    set $S5002, $P5018
    iseq $I5003, $S5002, "-"
.annotate 'line', 1132
    nqp_get_sc_object $P5020, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 45
    nqp_get_sc_object $P5021, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5022 = $P5021."new"(__lowered_lex_456 :named("value"))
    $P5023 = $P5020."new"($P5022)
    $P5024 = $P5014."new"($P5023, "subrule" :named("rxtype"), "method" :named("subtype"), $I5003 :named("negate"), __lowered_lex_469 :named("node"))
    set __lowered_lex_471, $P5024
    goto if1239_end3017
  if1239_else3016:
    unless_null __lowered_lex_469, fallback3034
    nqp_get_sc_object $P5025, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5025
  fallback3034:
    set fb_tmp_260, __lowered_lex_469
    repr_defined $I5005, fb_tmp_260
    unless $I5005 goto if1247_else3032 
    set $P5026, fb_tmp_260["identifier"]
    set $P5028, $P5026
    goto if1247_end3033
  if1247_else3032:
    null $P5027
    set $P5028, $P5027
  if1247_end3033:
    unless_null $P5028, vivi_12483035
    nqp_get_sc_object $P5029, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5028, $P5029
  vivi_12483035:
    unless $P5028 goto if1246_else3030 
.annotate 'line', 1135
.annotate 'line', 1136
    nqp_get_sc_object $P5030, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    find_dynamic_lex $P5031, "$*key"
    unless_null $P5031, fallback3036
    nqp_get_sc_object $P5033, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5032, $P5033
    set fb_tmp_261, $P5032
    repr_defined $I5006, fb_tmp_261
    unless $I5006 goto if1249_else3037 
    set $P5034, fb_tmp_261["$key"]
    set $P5036, $P5034
    goto if1249_end3038
  if1249_else3037:
    null $P5035
    set $P5036, $P5035
  if1249_end3038:
    unless_null $P5036, vivi_12503039
    nqp_get_sc_object $P5037, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5036, $P5037
  vivi_12503039:
    unless_null $P5036, vivi_12513040
    die "Contextual $*key not found"
    box $P5038, "Contextual $*key not found"
    set $P5036, $P5038
  vivi_12513040:
    set $P5031, $P5036
  fallback3036:
    unless_null __lowered_lex_469, fallback3047
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5039
  fallback3047:
    set fb_tmp_262, __lowered_lex_469
    repr_defined $I5008, fb_tmp_262
    unless $I5008 goto if1254_else3045 
    set $P5040, fb_tmp_262["sign"]
    set $P5042, $P5040
    goto if1254_end3046
  if1254_else3045:
    null $P5041
    set $P5042, $P5041
  if1254_end3046:
    unless_null $P5042, vivi_12553048
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5042, $P5043
  vivi_12553048:
    set $S5003, $P5042
    iseq $I5007, $S5003, "-"
    set $I5011, $I5007
    unless $I5007 goto if1253_end3044 
    unless_null __lowered_lex_469, fallback3051
    nqp_get_sc_object $P5044, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5044
  fallback3051:
    set fb_tmp_263, __lowered_lex_469
    repr_defined $I5010, fb_tmp_263
    unless $I5010 goto if1256_else3049 
    set $P5045, fb_tmp_263["invert"]
    set $P5047, $P5045
    goto if1256_end3050
  if1256_else3049:
    null $P5046
    set $P5047, $P5046
  if1256_end3050:
    unless_null $P5047, vivi_12573052
    nqp_get_sc_object $P5048, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5047, $P5048
  vivi_12573052:
    set $S5004, $P5047
    isne $I5009, $S5004, "!"
    set $I5011, $I5009
  if1253_end3044:
    set $I5017, $I5011
    if $I5011 goto unless1252_end3042 
    unless_null __lowered_lex_469, fallback3057
    nqp_get_sc_object $P5049, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5049
  fallback3057:
    set fb_tmp_264, __lowered_lex_469
    repr_defined $I5013, fb_tmp_264
    unless $I5013 goto if1259_else3055 
    set $P5050, fb_tmp_264["sign"]
    set $P5052, $P5050
    goto if1259_end3056
  if1259_else3055:
    null $P5051
    set $P5052, $P5051
  if1259_end3056:
    unless_null $P5052, vivi_12603058
    nqp_get_sc_object $P5053, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5052, $P5053
  vivi_12603058:
    set $S5005, $P5052
    isne $I5012, $S5005, "-"
    set $I5016, $I5012
    unless $I5012 goto if1258_end3054 
    unless_null __lowered_lex_469, fallback3061
    nqp_get_sc_object $P5054, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5054
  fallback3061:
    set fb_tmp_265, __lowered_lex_469
    repr_defined $I5015, fb_tmp_265
    unless $I5015 goto if1261_else3059 
    set $P5055, fb_tmp_265["invert"]
    set $P5057, $P5055
    goto if1261_end3060
  if1261_else3059:
    null $P5056
    set $P5057, $P5056
  if1261_end3060:
    unless_null $P5057, vivi_12623062
    nqp_get_sc_object $P5058, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5057, $P5058
  vivi_12623062:
    set $S5006, $P5057
    iseq $I5014, $S5006, "!"
    set $I5016, $I5014
  if1258_end3054:
    set $I5017, $I5016
  unless1252_end3042:
    $P5059 = $P5030."new"($P5031, "uniprop" :named("rxtype"), $I5017 :named("negate"), __lowered_lex_469 :named("node"))
    set __lowered_lex_471, $P5059
    unless_null __lowered_lex_469, fallback3067
    nqp_get_sc_object $P5060, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5060
  fallback3067:
    set fb_tmp_266, __lowered_lex_469
    repr_defined $I5018, fb_tmp_266
    unless $I5018 goto if1264_else3065 
    set $P5061, fb_tmp_266["coloncircumfix"]
    set $P5063, $P5061
    goto if1264_end3066
  if1264_else3065:
    null $P5062
    set $P5063, $P5062
  if1264_end3066:
    unless_null $P5063, vivi_12653068
    nqp_get_sc_object $P5064, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5063, $P5064
  vivi_12653068:
    set $P5072, $P5063
    unless $P5063 goto if1263_end3064 
.annotate 'line', 1141
    unless_null __lowered_lex_469, fallback3071
    nqp_get_sc_object $P5065, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5065
  fallback3071:
    set fb_tmp_267, __lowered_lex_469
    repr_defined $I5019, fb_tmp_267
    unless $I5019 goto if1266_else3069 
    set $P5066, fb_tmp_267["coloncircumfix"]
    set $P5068, $P5066
    goto if1266_end3070
  if1266_else3069:
    null $P5067
    set $P5068, $P5067
  if1266_end3070:
    unless_null $P5068, vivi_12673072
    nqp_get_sc_object $P5069, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5068, $P5069
  vivi_12673072:
    $P5070 = $P5068."ast"()
    $P5071 = __lowered_lex_471."push"($P5070)
    set $P5072, $P5071
  if1263_end3064:
    set $P5346, $P5072
    goto if1246_end3031
  if1246_else3030:
    new $P5073, 'QRPA'
    set __lowered_lex_464, $P5073
.annotate 'line', 1143
    find_dynamic_lex $P5074, "%*RX"
    unless_null $P5074, fallback3075
    nqp_get_sc_object $P5076, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5075, $P5076
    set pkg_viv_tmp_26, $P5075
    set fb_tmp_269, pkg_viv_tmp_26
    repr_defined $I5021, fb_tmp_269
    unless $I5021 goto if1269_else3076 
    set $P5077, fb_tmp_269["%RX"]
    set $P5079, $P5077
    goto if1269_end3077
  if1269_else3076:
    null $P5078
    set $P5079, $P5078
  if1269_end3077:
    unless_null $P5079, vivi_12703078
    new $P5080, 'Hash'
    set pkg_viv_tmp_26["%RX"], $P5080
    set $P5079, $P5080
  vivi_12703078:
    unless_null $P5079, vivi_12713079
    die "Contextual %*RX not found"
    box $P5081, "Contextual %*RX not found"
    set $P5079, $P5081
  vivi_12713079:
    set $P5074, $P5079
  fallback3075:
    set fb_tmp_268, $P5074
    repr_defined $I5020, fb_tmp_268
    unless $I5020 goto if1268_else3073 
    set $P5082, fb_tmp_268["i"]
    set $P5084, $P5082
    goto if1268_end3074
  if1268_else3073:
    null $P5083
    set $P5084, $P5083
  if1268_end3074:
    unless_null $P5084, vivi_12723080
    nqp_get_sc_object $P5085, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5084, $P5085
  vivi_12723080:
    set __lowered_lex_465, $P5084
    find_dynamic_lex $P5086, "%*RX"
    unless_null $P5086, fallback3083
    nqp_get_sc_object $P5088, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5087, $P5088
    set pkg_viv_tmp_27, $P5087
    set fb_tmp_271, pkg_viv_tmp_27
    repr_defined $I5023, fb_tmp_271
    unless $I5023 goto if1274_else3084 
    set $P5089, fb_tmp_271["%RX"]
    set $P5091, $P5089
    goto if1274_end3085
  if1274_else3084:
    null $P5090
    set $P5091, $P5090
  if1274_end3085:
    unless_null $P5091, vivi_12753086
    new $P5092, 'Hash'
    set pkg_viv_tmp_27["%RX"], $P5092
    set $P5091, $P5092
  vivi_12753086:
    unless_null $P5091, vivi_12763087
    die "Contextual %*RX not found"
    box $P5093, "Contextual %*RX not found"
    set $P5091, $P5093
  vivi_12763087:
    set $P5086, $P5091
  fallback3083:
    set fb_tmp_270, $P5086
    repr_defined $I5022, fb_tmp_270
    unless $I5022 goto if1273_else3081 
    set $P5094, fb_tmp_270["m"]
    set $P5096, $P5094
    goto if1273_end3082
  if1273_else3081:
    null $P5095
    set $P5096, $P5095
  if1273_end3082:
    unless_null $P5096, vivi_12773088
    nqp_get_sc_object $P5097, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5096, $P5097
  vivi_12773088:
    set __lowered_lex_466, $P5096
    set $P5098, __lowered_lex_465
    unless __lowered_lex_465 goto if1278_end3090 
    set $P5098, __lowered_lex_466
  if1278_end3090:
    set __lowered_lex_467, $P5098
    unless_null __lowered_lex_469, fallback3093
    nqp_get_sc_object $P5100, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5100
  fallback3093:
    set fb_tmp_272, __lowered_lex_469
    repr_defined $I5024, fb_tmp_272
    unless $I5024 goto if1279_else3091 
    set $P5101, fb_tmp_272["charspec"]
    set $P5103, $P5101
    goto if1279_end3092
  if1279_else3091:
    null $P5102
    set $P5103, $P5102
  if1279_end3092:
    unless_null $P5103, vivi_12803094
    nqp_get_sc_object $P5104, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5103, $P5104
  vivi_12803094:
    iter $P5099, $P5103
    set lowered_for_it__20, $P5099
    new $P5317, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5317, while1281_handlers3098
    push_eh $P5317
  while1281_test3095:
    set $P5316, lowered_for_it__20
    unless lowered_for_it__20 goto while1281_done3099 
  while1281_redo3097:
    shift $P5105, lowered_for_it__20
    set __lowered_lex_463, $P5105
.annotate 'line', 1148
    set fb_tmp_273, __lowered_lex_463
    repr_defined $I5025, fb_tmp_273
    unless $I5025 goto if1283_else3102 
    set $P5106, fb_tmp_273[1]
    set $P5108, $P5106
    goto if1283_end3103
  if1283_else3102:
    null $P5107
    set $P5108, $P5107
  if1283_end3103:
    unless_null $P5108, vivi_12843104
    nqp_get_sc_object $P5109, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5108, $P5109
  vivi_12843104:
    unless $P5108 goto if1282_else3100 
    nqp_get_sc_object $P5110, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_457, $P5110
    nqp_get_sc_object $P5111, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_458, $P5111
    nqp_get_sc_object $P5112, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_459, $P5112
.annotate 'line', 1149
    set fb_tmp_275, __lowered_lex_463
    repr_defined $I5027, fb_tmp_275
    unless $I5027 goto if1287_else3109 
    set $P5113, fb_tmp_275[0]
    set $P5115, $P5113
    goto if1287_end3110
  if1287_else3109:
    null $P5114
    set $P5115, $P5114
  if1287_end3110:
    unless_null $P5115, vivi_12883111
    nqp_get_sc_object $P5116, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5115, $P5116
  vivi_12883111:
    set fb_tmp_274, $P5115
    repr_defined $I5026, fb_tmp_274
    unless $I5026 goto if1286_else3107 
    set $P5117, fb_tmp_274["cclass_backslash"]
    set $P5119, $P5117
    goto if1286_end3108
  if1286_else3107:
    null $P5118
    set $P5119, $P5118
  if1286_end3108:
    unless_null $P5119, vivi_12893112
    nqp_get_sc_object $P5120, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5119, $P5120
  vivi_12893112:
    unless $P5119 goto if1285_else3105 
.annotate 'line', 1153
.annotate 'line', 1154
    set fb_tmp_277, __lowered_lex_463
    repr_defined $I5029, fb_tmp_277
    unless $I5029 goto if1291_else3115 
    set $P5121, fb_tmp_277[0]
    set $P5123, $P5121
    goto if1291_end3116
  if1291_else3115:
    null $P5122
    set $P5123, $P5122
  if1291_end3116:
    unless_null $P5123, vivi_12923117
    nqp_get_sc_object $P5124, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5123, $P5124
  vivi_12923117:
    set fb_tmp_276, $P5123
    repr_defined $I5028, fb_tmp_276
    unless $I5028 goto if1290_else3113 
    set $P5125, fb_tmp_276["cclass_backslash"]
    set $P5127, $P5125
    goto if1290_end3114
  if1290_else3113:
    null $P5126
    set $P5127, $P5126
  if1290_end3114:
    unless_null $P5127, vivi_12933118
    nqp_get_sc_object $P5128, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5127, $P5128
  vivi_12933118:
    $P5129 = $P5127."ast"()
    set __lowered_lex_457, $P5129
.annotate 'line', 1156
    $P5130 = __lowered_lex_457."rxtype"()
    set $S5007, $P5130
    isne $I5030, $S5007, "literal"
    set $I5032, $I5030
    unless $I5030 goto if1297_end3126 
    $P5131 = __lowered_lex_457."rxtype"()
    set $S5008, $P5131
    isne $I5031, $S5008, "enumcharlist"
    set $I5032, $I5031
  if1297_end3126:
    box $P5134, $I5032
    set $P5133, $P5134
    if $I5032 goto unless1296_end3124 
.annotate 'line', 1157
    $P5132 = __lowered_lex_457."negate"()
    set $P5133, $P5132
  unless1296_end3124:
    set $P5139, $P5133
    if $P5133 goto unless1295_end3122 
    set fb_tmp_278, __lowered_lex_457
    repr_defined $I5035, fb_tmp_278
    unless $I5035 goto if1298_else3127 
    set $P5135, fb_tmp_278[0]
    set $P5137, $P5135
    goto if1298_end3128
  if1298_else3127:
    null $P5136
    set $P5137, $P5136
  if1298_end3128:
    unless_null $P5137, vivi_12993129
    nqp_get_sc_object $P5138, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5137, $P5138
  vivi_12993129:
    set $S5009, $P5137
    length $I5034, $S5009
    isne $I5033, $I5034, 1
    box $P5140, $I5033
    set $P5139, $P5140
  unless1295_end3122:
    unless $P5139 goto if1294_end3120 
.annotate 'line', 1155
    $P5141 = __lowered_lex_469."CURSOR"()
    set $S5011, __lowered_lex_463
    concat $S5010, "Illegal range endpoint in regex: ", $S5011
    $P5142 = $P5141."panic"($S5010)
  if1294_end3120:
.annotate 'line', 1158
    $P5144 = __lowered_lex_457."ann"("codepoint")
    set $P5143, $P5144
    defined $I5036, $P5143
    if $I5036, defor3130
    set fb_tmp_279, __lowered_lex_457
    repr_defined $I5038, fb_tmp_279
    unless $I5038 goto if1300_else3131 
    set $P5145, fb_tmp_279[0]
    set $P5147, $P5145
    goto if1300_end3132
  if1300_else3131:
    null $P5146
    set $P5147, $P5146
  if1300_end3132:
    unless_null $P5147, vivi_13013133
    nqp_get_sc_object $P5148, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5147, $P5148
  vivi_13013133:
    set $S5012, $P5147
    ord $I5037, $S5012
    box $P5149, $I5037
    set $P5143, $P5149
  defor3130:
    set __lowered_lex_458, $P5143
    set $P5151, __lowered_lex_466
    unless __lowered_lex_466 goto if1302_end3135 
    set $I5040, __lowered_lex_458
    chr $S5013, $I5040
    nqp_string_ordbase_at $I5039, $S5013, 0
    box $P5150, $I5039
    set __lowered_lex_458, $P5150
    set $P5151, __lowered_lex_458
  if1302_end3135:
    goto if1285_end3106
  if1285_else3105:
.annotate 'line', 1161
    unless __lowered_lex_466 goto if1303_else3136 
    set fb_tmp_281, __lowered_lex_463
    repr_defined $I5043, fb_tmp_281
    unless $I5043 goto if1305_else3140 
    set $P5152, fb_tmp_281[0]
    set $P5154, $P5152
    goto if1305_end3141
  if1305_else3140:
    null $P5153
    set $P5154, $P5153
  if1305_end3141:
    unless_null $P5154, vivi_13063142
    nqp_get_sc_object $P5155, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5154, $P5155
  vivi_13063142:
    set fb_tmp_280, $P5154
    repr_defined $I5042, fb_tmp_280
    unless $I5042 goto if1304_else3138 
    set $P5156, fb_tmp_280[0]
    set $P5158, $P5156
    goto if1304_end3139
  if1304_else3138:
    null $P5157
    set $P5158, $P5157
  if1304_end3139:
    unless_null $P5158, vivi_13073143
    nqp_get_sc_object $P5159, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5158, $P5159
  vivi_13073143:
    set $S5014, $P5158
    nqp_string_ordbase_at $I5041, $S5014, 0
    set $I5047, $I5041
    goto if1303_end3137
  if1303_else3136:
    set fb_tmp_283, __lowered_lex_463
    repr_defined $I5046, fb_tmp_283
    unless $I5046 goto if1309_else3146 
    set $P5160, fb_tmp_283[0]
    set $P5162, $P5160
    goto if1309_end3147
  if1309_else3146:
    null $P5161
    set $P5162, $P5161
  if1309_end3147:
    unless_null $P5162, vivi_13103148
    nqp_get_sc_object $P5163, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5162, $P5163
  vivi_13103148:
    set fb_tmp_282, $P5162
    repr_defined $I5045, fb_tmp_282
    unless $I5045 goto if1308_else3144 
    set $P5164, fb_tmp_282[0]
    set $P5166, $P5164
    goto if1308_end3145
  if1308_else3144:
    null $P5165
    set $P5166, $P5165
  if1308_end3145:
    unless_null $P5166, vivi_13113149
    nqp_get_sc_object $P5167, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5166, $P5167
  vivi_13113149:
    set $S5015, $P5166
    ord $I5044, $S5015
    set $I5047, $I5044
  if1303_end3137:
    box $P5168, $I5047
    set __lowered_lex_458, $P5168
  if1285_end3106:
    set fb_tmp_286, __lowered_lex_463
    repr_defined $I5050, fb_tmp_286
    unless $I5050 goto if1315_else3156 
    set $P5169, fb_tmp_286[1]
    set $P5171, $P5169
    goto if1315_end3157
  if1315_else3156:
    null $P5170
    set $P5171, $P5170
  if1315_end3157:
    unless_null $P5171, vivi_13163158
    nqp_get_sc_object $P5172, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5171, $P5172
  vivi_13163158:
    set fb_tmp_285, $P5171
    repr_defined $I5049, fb_tmp_285
    unless $I5049 goto if1314_else3154 
    set $P5173, fb_tmp_285[0]
    set $P5175, $P5173
    goto if1314_end3155
  if1314_else3154:
    null $P5174
    set $P5175, $P5174
  if1314_end3155:
    unless_null $P5175, vivi_13173159
    nqp_get_sc_object $P5176, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5175, $P5176
  vivi_13173159:
    set fb_tmp_284, $P5175
    repr_defined $I5048, fb_tmp_284
    unless $I5048 goto if1313_else3152 
    set $P5177, fb_tmp_284["cclass_backslash"]
    set $P5179, $P5177
    goto if1313_end3153
  if1313_else3152:
    null $P5178
    set $P5179, $P5178
  if1313_end3153:
    unless_null $P5179, vivi_13183160
    nqp_get_sc_object $P5180, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5179, $P5180
  vivi_13183160:
    unless $P5179 goto if1312_else3150 
.annotate 'line', 1164
.annotate 'line', 1165
    set fb_tmp_289, __lowered_lex_463
    repr_defined $I5053, fb_tmp_289
    unless $I5053 goto if1321_else3165 
    set $P5181, fb_tmp_289[1]
    set $P5183, $P5181
    goto if1321_end3166
  if1321_else3165:
    null $P5182
    set $P5183, $P5182
  if1321_end3166:
    unless_null $P5183, vivi_13223167
    nqp_get_sc_object $P5184, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5183, $P5184
  vivi_13223167:
    set fb_tmp_288, $P5183
    repr_defined $I5052, fb_tmp_288
    unless $I5052 goto if1320_else3163 
    set $P5185, fb_tmp_288[0]
    set $P5187, $P5185
    goto if1320_end3164
  if1320_else3163:
    null $P5186
    set $P5187, $P5186
  if1320_end3164:
    unless_null $P5187, vivi_13233168
    nqp_get_sc_object $P5188, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5187, $P5188
  vivi_13233168:
    set fb_tmp_287, $P5187
    repr_defined $I5051, fb_tmp_287
    unless $I5051 goto if1319_else3161 
    set $P5189, fb_tmp_287["cclass_backslash"]
    set $P5191, $P5189
    goto if1319_end3162
  if1319_else3161:
    null $P5190
    set $P5191, $P5190
  if1319_end3162:
    unless_null $P5191, vivi_13243169
    nqp_get_sc_object $P5192, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5191, $P5192
  vivi_13243169:
    $P5193 = $P5191."ast"()
    set __lowered_lex_457, $P5193
.annotate 'line', 1167
    $P5194 = __lowered_lex_457."rxtype"()
    set $S5016, $P5194
    isne $I5054, $S5016, "literal"
    set $I5056, $I5054
    unless $I5054 goto if1328_end3177 
    $P5195 = __lowered_lex_457."rxtype"()
    set $S5017, $P5195
    isne $I5055, $S5017, "enumcharlist"
    set $I5056, $I5055
  if1328_end3177:
    box $P5198, $I5056
    set $P5197, $P5198
    if $I5056 goto unless1327_end3175 
.annotate 'line', 1168
    $P5196 = __lowered_lex_457."negate"()
    set $P5197, $P5196
  unless1327_end3175:
    set $P5203, $P5197
    if $P5197 goto unless1326_end3173 
    set fb_tmp_290, __lowered_lex_457
    repr_defined $I5059, fb_tmp_290
    unless $I5059 goto if1329_else3178 
    set $P5199, fb_tmp_290[0]
    set $P5201, $P5199
    goto if1329_end3179
  if1329_else3178:
    null $P5200
    set $P5201, $P5200
  if1329_end3179:
    unless_null $P5201, vivi_13303180
    nqp_get_sc_object $P5202, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5201, $P5202
  vivi_13303180:
    set $S5018, $P5201
    length $I5058, $S5018
    isne $I5057, $I5058, 1
    box $P5204, $I5057
    set $P5203, $P5204
  unless1326_end3173:
    unless $P5203 goto if1325_end3171 
.annotate 'line', 1166
    $P5205 = __lowered_lex_469."CURSOR"()
    set $S5020, __lowered_lex_463
    concat $S5019, "Illegal range endpoint in regex: ", $S5020
    $P5206 = $P5205."panic"($S5019)
  if1325_end3171:
.annotate 'line', 1169
    $P5208 = __lowered_lex_457."ann"("codepoint")
    set $P5207, $P5208
    defined $I5060, $P5207
    if $I5060, defor3181
    set fb_tmp_291, __lowered_lex_457
    repr_defined $I5062, fb_tmp_291
    unless $I5062 goto if1331_else3182 
    set $P5209, fb_tmp_291[0]
    set $P5211, $P5209
    goto if1331_end3183
  if1331_else3182:
    null $P5210
    set $P5211, $P5210
  if1331_end3183:
    unless_null $P5211, vivi_13323184
    nqp_get_sc_object $P5212, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5211, $P5212
  vivi_13323184:
    set $S5021, $P5211
    ord $I5061, $S5021
    box $P5213, $I5061
    set $P5207, $P5213
  defor3181:
    set __lowered_lex_459, $P5207
    set $P5215, __lowered_lex_466
    unless __lowered_lex_466 goto if1333_end3186 
    set $I5064, __lowered_lex_459
    chr $S5022, $I5064
    nqp_string_ordbase_at $I5063, $S5022, 0
    box $P5214, $I5063
    set __lowered_lex_459, $P5214
    set $P5215, __lowered_lex_459
  if1333_end3186:
    goto if1312_end3151
  if1312_else3150:
.annotate 'line', 1172
    unless __lowered_lex_466 goto if1334_else3187 
    set fb_tmp_294, __lowered_lex_463
    repr_defined $I5068, fb_tmp_294
    unless $I5068 goto if1337_else3193 
    set $P5216, fb_tmp_294[1]
    set $P5218, $P5216
    goto if1337_end3194
  if1337_else3193:
    null $P5217
    set $P5218, $P5217
  if1337_end3194:
    unless_null $P5218, vivi_13383195
    nqp_get_sc_object $P5219, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5218, $P5219
  vivi_13383195:
    set fb_tmp_293, $P5218
    repr_defined $I5067, fb_tmp_293
    unless $I5067 goto if1336_else3191 
    set $P5220, fb_tmp_293[0]
    set $P5222, $P5220
    goto if1336_end3192
  if1336_else3191:
    null $P5221
    set $P5222, $P5221
  if1336_end3192:
    unless_null $P5222, vivi_13393196
    nqp_get_sc_object $P5223, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5222, $P5223
  vivi_13393196:
    set fb_tmp_292, $P5222
    repr_defined $I5066, fb_tmp_292
    unless $I5066 goto if1335_else3189 
    set $P5224, fb_tmp_292[0]
    set $P5226, $P5224
    goto if1335_end3190
  if1335_else3189:
    null $P5225
    set $P5226, $P5225
  if1335_end3190:
    unless_null $P5226, vivi_13403197
    nqp_get_sc_object $P5227, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5226, $P5227
  vivi_13403197:
    set $S5023, $P5226
    nqp_string_ordbase_at $I5065, $S5023, 0
    set $I5073, $I5065
    goto if1334_end3188
  if1334_else3187:
    set fb_tmp_297, __lowered_lex_463
    repr_defined $I5072, fb_tmp_297
    unless $I5072 goto if1343_else3202 
    set $P5228, fb_tmp_297[1]
    set $P5230, $P5228
    goto if1343_end3203
  if1343_else3202:
    null $P5229
    set $P5230, $P5229
  if1343_end3203:
    unless_null $P5230, vivi_13443204
    nqp_get_sc_object $P5231, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5230, $P5231
  vivi_13443204:
    set fb_tmp_296, $P5230
    repr_defined $I5071, fb_tmp_296
    unless $I5071 goto if1342_else3200 
    set $P5232, fb_tmp_296[0]
    set $P5234, $P5232
    goto if1342_end3201
  if1342_else3200:
    null $P5233
    set $P5234, $P5233
  if1342_end3201:
    unless_null $P5234, vivi_13453205
    nqp_get_sc_object $P5235, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5234, $P5235
  vivi_13453205:
    set fb_tmp_295, $P5234
    repr_defined $I5070, fb_tmp_295
    unless $I5070 goto if1341_else3198 
    set $P5236, fb_tmp_295[0]
    set $P5238, $P5236
    goto if1341_end3199
  if1341_else3198:
    null $P5237
    set $P5238, $P5237
  if1341_end3199:
    unless_null $P5238, vivi_13463206
    nqp_get_sc_object $P5239, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5238, $P5239
  vivi_13463206:
    set $S5024, $P5238
    ord $I5069, $S5024
    set $I5073, $I5069
  if1334_end3188:
    box $P5240, $I5073
    set __lowered_lex_459, $P5240
  if1312_end3151:
    set $N5001, __lowered_lex_458
    set $N5002, __lowered_lex_459
    isgt $I5074, $N5001, $N5002
    unless $I5074 goto if1347_end3208 
.annotate 'line', 1175
    $P5241 = __lowered_lex_469."CURSOR"()
    set $S5026, __lowered_lex_463
    concat $S5025, "Illegal reversed character range in regex: ", $S5026
    $P5242 = $P5241."panic"($S5025)
  if1347_end3208:
.annotate 'line', 1177
    nqp_get_sc_object $P5243, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless __lowered_lex_467 goto if1348_else3209 
    set $S5029, "ignorecase+ignoremark"
    goto if1348_end3210
  if1348_else3209:
    unless __lowered_lex_465 goto if1349_else3211 
    set $S5028, "ignorecase"
    goto if1349_end3212
  if1349_else3211:
    unless __lowered_lex_466 goto if1350_else3213 
    set $S5027, "ignoremark"
    goto if1350_end3214
  if1350_else3213:
    set $S5027, ""
  if1350_end3214:
    set $S5028, $S5027
  if1349_end3212:
    set $S5029, $S5028
  if1348_end3210:
.annotate 'line', 1181
    nqp_get_sc_object $P5244, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 63
    $P5245 = $P5244."new"(__lowered_lex_458 :named("value"))
.annotate 'line', 1182
    nqp_get_sc_object $P5246, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 63
    $P5247 = $P5246."new"(__lowered_lex_459 :named("value"))
    unless_null __lowered_lex_469, fallback3217
    nqp_get_sc_object $P5248, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5248
  fallback3217:
    set fb_tmp_298, __lowered_lex_469
    repr_defined $I5076, fb_tmp_298
    unless $I5076 goto if1351_else3215 
    set $P5249, fb_tmp_298["sign"]
    set $P5251, $P5249
    goto if1351_end3216
  if1351_else3215:
    null $P5250
    set $P5251, $P5250
  if1351_end3216:
    unless_null $P5251, vivi_13523218
    nqp_get_sc_object $P5252, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5251, $P5252
  vivi_13523218:
    set $S5030, $P5251
    iseq $I5075, $S5030, "-"
    $P5253 = $P5243."new"($S5029, $P5245, $P5247, $I5075 :named("negate"), "charrange" :named("rxtype"), __lowered_lex_469 :named("node"))
    $P5254 = __lowered_lex_464."push"($P5253)
    set $P5315, $P5254
    goto if1282_end3101
  if1282_else3100:
    set fb_tmp_300, __lowered_lex_463
    repr_defined $I5078, fb_tmp_300
    unless $I5078 goto if1355_else3223 
    set $P5255, fb_tmp_300[0]
    set $P5257, $P5255
    goto if1355_end3224
  if1355_else3223:
    null $P5256
    set $P5257, $P5256
  if1355_end3224:
    unless_null $P5257, vivi_13563225
    nqp_get_sc_object $P5258, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5257, $P5258
  vivi_13563225:
    set fb_tmp_299, $P5257
    repr_defined $I5077, fb_tmp_299
    unless $I5077 goto if1354_else3221 
    set $P5259, fb_tmp_299["cclass_backslash"]
    set $P5261, $P5259
    goto if1354_end3222
  if1354_else3221:
    null $P5260
    set $P5261, $P5260
  if1354_end3222:
    unless_null $P5261, vivi_13573226
    nqp_get_sc_object $P5262, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5261, $P5262
  vivi_13573226:
    unless $P5261 goto if1353_else3219 
.annotate 'line', 1186
.annotate 'line', 1187
    set fb_tmp_302, __lowered_lex_463
    repr_defined $I5080, fb_tmp_302
    unless $I5080 goto if1359_else3229 
    set $P5263, fb_tmp_302[0]
    set $P5265, $P5263
    goto if1359_end3230
  if1359_else3229:
    null $P5264
    set $P5265, $P5264
  if1359_end3230:
    unless_null $P5265, vivi_13603231
    nqp_get_sc_object $P5266, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5265, $P5266
  vivi_13603231:
    set fb_tmp_301, $P5265
    repr_defined $I5079, fb_tmp_301
    unless $I5079 goto if1358_else3227 
    set $P5267, fb_tmp_301["cclass_backslash"]
    set $P5269, $P5267
    goto if1358_end3228
  if1358_else3227:
    null $P5268
    set $P5269, $P5268
  if1358_end3228:
    unless_null $P5269, vivi_13613232
    nqp_get_sc_object $P5270, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5269, $P5270
  vivi_13613232:
    $P5271 = $P5269."ast"()
    set __lowered_lex_460, $P5271
.annotate 'line', 1188
    $P5272 = __lowered_lex_460."rxtype"()
    set $S5031, $P5272
    iseq $I5081, $S5031, "enumcharlist"
    set $I5083, $I5081
    unless $I5081 goto if1364_end3238 
    $P5273 = __lowered_lex_460."negate"()
    isfalse $I5082, $P5273
    set $I5083, $I5082
  if1364_end3238:
    set $I5085, $I5083
    if $I5083 goto unless1363_end3236 
    $P5274 = __lowered_lex_460."rxtype"()
    set $S5032, $P5274
    iseq $I5084, $S5032, "literal"
    set $I5085, $I5084
  unless1363_end3236:
    unless $I5085 goto if1362_else3233 
    set $S5034, __lowered_lex_470
    set fb_tmp_303, __lowered_lex_460
    repr_defined $I5086, fb_tmp_303
    unless $I5086 goto if1365_else3239 
    set $P5275, fb_tmp_303[0]
    set $P5277, $P5275
    goto if1365_end3240
  if1365_else3239:
    null $P5276
    set $P5277, $P5276
  if1365_end3240:
    unless_null $P5277, vivi_13663241
    nqp_get_sc_object $P5278, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5277, $P5278
  vivi_13663241:
    set $S5035, $P5277
    concat $S5033, $S5034, $S5035
    box $P5279, $S5033
    set __lowered_lex_470, $P5279
    set $P5288, __lowered_lex_470
    goto if1362_end3234
  if1362_else3233:
.annotate 'line', 1191
    unless_null __lowered_lex_469, fallback3246
    nqp_get_sc_object $P5280, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5280
  fallback3246:
    set fb_tmp_304, __lowered_lex_469
    repr_defined $I5088, fb_tmp_304
    unless $I5088 goto if1368_else3244 
    set $P5281, fb_tmp_304["sign"]
    set $P5283, $P5281
    goto if1368_end3245
  if1368_else3244:
    null $P5282
    set $P5283, $P5282
  if1368_end3245:
    unless_null $P5283, vivi_13693247
    nqp_get_sc_object $P5284, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5283, $P5284
  vivi_13693247:
    set $S5036, $P5283
    iseq $I5087, $S5036, "-"
    unless $I5087 goto if1367_end3243 
.annotate 'line', 1192
    $P5285 = __lowered_lex_460."negate"()
    isfalse $I5089, $P5285
    $P5286 = __lowered_lex_460."negate"($I5089)
  if1367_end3243:
.annotate 'line', 1193
    $P5287 = __lowered_lex_464."push"(__lowered_lex_460)
    set $P5288, $P5287
  if1362_end3234:
    set $P5314, $P5288
    goto if1353_end3220
  if1353_else3219:
    unless __lowered_lex_467 goto if1370_else3248 
.annotate 'line', 1196
    set fb_tmp_305, __lowered_lex_463
    repr_defined $I5091, fb_tmp_305
    unless $I5091 goto if1371_else3250 
    set $P5289, fb_tmp_305[0]
    set $P5291, $P5289
    goto if1371_end3251
  if1371_else3250:
    null $P5290
    set $P5291, $P5290
  if1371_end3251:
    unless_null $P5291, vivi_13723252
    nqp_get_sc_object $P5292, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5291, $P5292
  vivi_13723252:
    set $S5038, $P5291
    nqp_string_ordbase_at $I5090, $S5038, 0
    chr $S5037, $I5090
    box $P5293, $S5037
    set __lowered_lex_461, $P5293
    set $S5041, __lowered_lex_470
    set $S5043, __lowered_lex_461
    downcase $S5042, $S5043
    concat $S5040, $S5041, $S5042
    set $S5045, __lowered_lex_461
    upcase $S5044, $S5045
    concat $S5039, $S5040, $S5044
    box $P5294, $S5039
    set __lowered_lex_470, $P5294
    set $P5313, __lowered_lex_470
    goto if1370_end3249
  if1370_else3248:
    unless __lowered_lex_465 goto if1373_else3253 
.annotate 'line', 1200
    set fb_tmp_306, __lowered_lex_463
    repr_defined $I5092, fb_tmp_306
    unless $I5092 goto if1374_else3255 
    set $P5295, fb_tmp_306[0]
    set $P5297, $P5295
    goto if1374_end3256
  if1374_else3255:
    null $P5296
    set $P5297, $P5296
  if1374_end3256:
    unless_null $P5297, vivi_13753257
    nqp_get_sc_object $P5298, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5297, $P5298
  vivi_13753257:
    set $S5046, $P5297
    box $P5299, $S5046
    set __lowered_lex_462, $P5299
    set $S5049, __lowered_lex_470
    set $S5051, __lowered_lex_462
    downcase $S5050, $S5051
    concat $S5048, $S5049, $S5050
    set $S5053, __lowered_lex_462
    upcase $S5052, $S5053
    concat $S5047, $S5048, $S5052
    box $P5300, $S5047
    set __lowered_lex_470, $P5300
    set $P5312, __lowered_lex_470
    goto if1373_end3254
  if1373_else3253:
    unless __lowered_lex_466 goto if1376_else3258 
.annotate 'line', 1204
    set $S5055, __lowered_lex_470
    set fb_tmp_307, __lowered_lex_463
    repr_defined $I5094, fb_tmp_307
    unless $I5094 goto if1377_else3260 
    set $P5301, fb_tmp_307[0]
    set $P5303, $P5301
    goto if1377_end3261
  if1377_else3260:
    null $P5302
    set $P5303, $P5302
  if1377_end3261:
    unless_null $P5303, vivi_13783262
    nqp_get_sc_object $P5304, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5303, $P5304
  vivi_13783262:
    set $S5057, $P5303
    nqp_string_ordbase_at $I5093, $S5057, 0
    chr $S5056, $I5093
    concat $S5054, $S5055, $S5056
    box $P5305, $S5054
    set __lowered_lex_470, $P5305
    set $P5311, __lowered_lex_470
    goto if1376_end3259
  if1376_else3258:
.annotate 'line', 1207
    set $S5059, __lowered_lex_470
    set fb_tmp_308, __lowered_lex_463
    repr_defined $I5095, fb_tmp_308
    unless $I5095 goto if1379_else3263 
    set $P5306, fb_tmp_308[0]
    set $P5308, $P5306
    goto if1379_end3264
  if1379_else3263:
    null $P5307
    set $P5308, $P5307
  if1379_end3264:
    unless_null $P5308, vivi_13803265
    nqp_get_sc_object $P5309, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5308, $P5309
  vivi_13803265:
    set $S5060, $P5308
    concat $S5058, $S5059, $S5060
    box $P5310, $S5058
    set __lowered_lex_470, $P5310
    set $P5311, __lowered_lex_470
  if1376_end3259:
    set $P5312, $P5311
  if1373_end3254:
    set $P5313, $P5312
  if1370_end3249:
    set $P5314, $P5313
  if1353_end3220:
    set $P5315, $P5314
  if1282_end3101:
    set $P5316, $P5315
    goto while1281_test3095 
  while1281_handlers3098:
    .get_results ($P5317)
    pop_upto_eh $P5317
    getattribute $P5318, $P5317, 'type'
    eq $P5318, .CONTROL_LOOP_NEXT, while1281_test3095
    eq $P5318, .CONTROL_LOOP_REDO, while1281_redo3097
  while1281_done3099:
    pop_eh 
    set $S5061, __lowered_lex_470
    length $I5096, $S5061
    unless $I5096 goto if1381_end3267 
.annotate 'line', 1211
    nqp_get_sc_object $P5319, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless_null __lowered_lex_469, fallback3270
    nqp_get_sc_object $P5320, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5320
  fallback3270:
    set fb_tmp_309, __lowered_lex_469
    repr_defined $I5098, fb_tmp_309
    unless $I5098 goto if1382_else3268 
    set $P5321, fb_tmp_309["sign"]
    set $P5323, $P5321
    goto if1382_end3269
  if1382_else3268:
    null $P5322
    set $P5323, $P5322
  if1382_end3269:
    unless_null $P5323, vivi_13833271
    nqp_get_sc_object $P5324, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5323, $P5324
  vivi_13833271:
    set $S5062, $P5323
    iseq $I5097, $S5062, "-"
    unless __lowered_lex_466 goto if1384_else3272 
    set $S5063, "ignoremark"
    goto if1384_end3273
  if1384_else3272:
    set $S5063, ""
  if1384_end3273:
    $P5325 = $P5319."new"(__lowered_lex_470, "enumcharlist" :named("rxtype"), __lowered_lex_469 :named("node"), $I5097 :named("negate"), $S5063 :named("subtype"))
    $P5326 = __lowered_lex_464."push"($P5325)
  if1381_end3267:
    set $N5003, __lowered_lex_464
    set $I5100, $N5003
    iseq $I5099, $I5100, 1
    unless $I5099 goto if1385_else3274 
    set fb_tmp_310, __lowered_lex_464
    repr_defined $I5101, fb_tmp_310
    unless $I5101 goto if1386_else3276 
    set $P5327, fb_tmp_310[0]
    set $P5329, $P5327
    goto if1386_end3277
  if1386_else3276:
    null $P5328
    set $P5329, $P5328
  if1386_end3277:
    unless_null $P5329, vivi_13873278
    nqp_get_sc_object $P5330, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5329, $P5330
  vivi_13873278:
    set $P5345, $P5329
    goto if1385_end3275
  if1385_else3274:
    unless_null __lowered_lex_469, fallback3283
    nqp_get_sc_object $P5331, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_469, $P5331
  fallback3283:
    set fb_tmp_311, __lowered_lex_469
    repr_defined $I5103, fb_tmp_311
    unless $I5103 goto if1389_else3281 
    set $P5332, fb_tmp_311["sign"]
    set $P5334, $P5332
    goto if1389_end3282
  if1389_else3281:
    null $P5333
    set $P5334, $P5333
  if1389_end3282:
    unless_null $P5334, vivi_13903284
    nqp_get_sc_object $P5335, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5334, $P5335
  vivi_13903284:
    set $S5064, $P5334
    iseq $I5102, $S5064, "-"
    unless $I5102 goto if1388_else3279 
.annotate 'line', 1216
    nqp_get_sc_object $P5336, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1217
    nqp_get_sc_object $P5337, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5338 = $P5337."new"(__lowered_lex_464 :flat, "conj" :named("rxtype"), "zerowidth" :named("subtype"))
.annotate 'line', 1218
    nqp_get_sc_object $P5339, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5340 = $P5339."new"("cclass" :named("rxtype"), "." :named("name"))
    $P5341 = $P5336."new"($P5338, $P5340, "concat" :named("rxtype"), __lowered_lex_469 :named("node"), 1 :named("negate"))
    set $P5344, $P5341
    goto if1388_end3280
  if1388_else3279:
.annotate 'line', 1219
    nqp_get_sc_object $P5342, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5343 = $P5342."new"(__lowered_lex_464 :flat, "alt" :named("rxtype"))
    set $P5344, $P5343
  if1388_end3280:
    set $P5345, $P5344
  if1385_end3275:
    set __lowered_lex_471, $P5345
    set $P5346, __lowered_lex_471
  if1246_end3031:
  if1239_end3017:
.annotate 'line', 1221
    $P5347 = __lowered_lex_469."make"(__lowered_lex_471)
    .return ($P5347) 
.end
.HLL "nqp"
.namespace []
.sub "mod_internal" :subid("cuid_219_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1224
    .param pmc __lowered_lex_474 
    .param pmc __lowered_lex_475 
    .local pmc fb_tmp_312 
    .local pmc fb_tmp_313 
    .local pmc fb_tmp_314 
    .local pmc __lowered_lex_472 
    .local pmc __lowered_lex_473 
    .local pmc fb_tmp_315 
    .local pmc fb_tmp_316 
    .local pmc fb_tmp_317 
    .local pmc fb_tmp_318 
    .local pmc fb_tmp_319 
    .local pmc pkg_viv_tmp_28 
    unless_null __lowered_lex_475, fallback3289
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_475, $P5001
  fallback3289:
    set fb_tmp_312, __lowered_lex_475
    repr_defined $I5001, fb_tmp_312
    unless $I5001 goto if1392_else3287 
    set $P5002, fb_tmp_312["quote_EXPR"]
    set $P5004, $P5002
    goto if1392_end3288
  if1392_else3287:
    null $P5003
    set $P5004, $P5003
  if1392_end3288:
    unless_null $P5004, vivi_13933290
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_13933290:
    set $P5055, $P5004
    unless $P5004 goto if1391_end3286 
.annotate 'line', 1225
.annotate 'line', 1226
    nqp_get_sc_object $P5006, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    unless_null __lowered_lex_475, fallback3297
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_475, $P5007
  fallback3297:
    set fb_tmp_314, __lowered_lex_475
    repr_defined $I5003, fb_tmp_314
    unless $I5003 goto if1396_else3295 
    set $P5008, fb_tmp_314["quote_EXPR"]
    set $P5010, $P5008
    goto if1396_end3296
  if1396_else3295:
    null $P5009
    set $P5010, $P5009
  if1396_end3296:
    unless_null $P5010, vivi_13973298
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_13973298:
    set fb_tmp_313, $P5010
    repr_defined $I5002, fb_tmp_313
    unless $I5002 goto if1395_else3293 
    set $P5012, fb_tmp_313[0]
    set $P5014, $P5012
    goto if1395_end3294
  if1395_else3293:
    null $P5013
    set $P5014, $P5013
  if1395_end3294:
    unless_null $P5014, vivi_13983299
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_13983299:
    $P5016 = $P5014."ast"()
    $P5017 = $P5006."ACCEPTS"($P5016)
    unless $P5017 goto if1394_else3291 
    unless_null __lowered_lex_475, fallback3304
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_475, $P5018
  fallback3304:
    set fb_tmp_316, __lowered_lex_475
    repr_defined $I5005, fb_tmp_316
    unless $I5005 goto if1400_else3302 
    set $P5019, fb_tmp_316["mod_ident"]
    set $P5021, $P5019
    goto if1400_end3303
  if1400_else3302:
    null $P5020
    set $P5021, $P5020
  if1400_end3303:
    unless_null $P5021, vivi_14013305
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_14013305:
    set fb_tmp_315, $P5021
    repr_defined $I5004, fb_tmp_315
    unless $I5004 goto if1399_else3300 
    set $P5023, fb_tmp_315["sym"]
    set $P5025, $P5023
    goto if1399_end3301
  if1399_else3300:
    null $P5024
    set $P5025, $P5024
  if1399_end3301:
    unless_null $P5025, vivi_14023306
    nqp_get_sc_object $P5026, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5025, $P5026
  vivi_14023306:
    set $S5001, $P5025
    box $P5027, $S5001
    set __lowered_lex_472, $P5027
.annotate 'line', 1228
    unless_null __lowered_lex_475, fallback3311
    nqp_get_sc_object $P5028, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_475, $P5028
  fallback3311:
    set fb_tmp_318, __lowered_lex_475
    repr_defined $I5007, fb_tmp_318
    unless $I5007 goto if1404_else3309 
    set $P5029, fb_tmp_318["quote_EXPR"]
    set $P5031, $P5029
    goto if1404_end3310
  if1404_else3309:
    null $P5030
    set $P5031, $P5030
  if1404_end3310:
    unless_null $P5031, vivi_14053312
    nqp_get_sc_object $P5032, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5031, $P5032
  vivi_14053312:
    set fb_tmp_317, $P5031
    repr_defined $I5006, fb_tmp_317
    unless $I5006 goto if1403_else3307 
    set $P5033, fb_tmp_317[0]
    set $P5035, $P5033
    goto if1403_end3308
  if1403_else3307:
    null $P5034
    set $P5035, $P5034
  if1403_end3308:
    unless_null $P5035, vivi_14063313
    nqp_get_sc_object $P5036, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5035, $P5036
  vivi_14063313:
    $P5037 = $P5035."ast"()
    $P5038 = $P5037."value"()
    set __lowered_lex_473, $P5038
    find_dynamic_lex $P5039, "%*RX"
    unless_null $P5039, fallback3314
    nqp_get_sc_object $P5041, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5040, $P5041
    set pkg_viv_tmp_28, $P5040
    set fb_tmp_319, pkg_viv_tmp_28
    repr_defined $I5008, fb_tmp_319
    unless $I5008 goto if1407_else3315 
    set $P5042, fb_tmp_319["%RX"]
    set $P5044, $P5042
    goto if1407_end3316
  if1407_else3315:
    null $P5043
    set $P5044, $P5043
  if1407_end3316:
    unless_null $P5044, vivi_14083317
    new $P5045, 'Hash'
    set pkg_viv_tmp_28["%RX"], $P5045
    set $P5044, $P5045
  vivi_14083317:
    unless_null $P5044, vivi_14093318
    die "Contextual %*RX not found"
    box $P5046, "Contextual %*RX not found"
    set $P5044, $P5046
  vivi_14093318:
    set $P5039, $P5044
  fallback3314:
    set $S5002, __lowered_lex_472
    set $P5039[$S5002], __lowered_lex_473
.annotate 'line', 1230
    set $S5003, __lowered_lex_472
    iseq $I5009, $S5003, "dba"
    unless $I5009 goto if1410_else3319 
.annotate 'line', 1231
    nqp_get_sc_object $P5047, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5048 = $P5047."new"("dba" :named("rxtype"), __lowered_lex_473 :named("name"))
    set $P5049, $P5048
    goto if1410_end3320
  if1410_else3319:
    box $P5050, 0
    set $P5049, $P5050
  if1410_end3320:
    $P5051 = __lowered_lex_475."make"($P5049)
    set $P5054, $P5051
    goto if1394_end3292
  if1394_else3291:
.annotate 'line', 1234
.annotate 'line', 1235
    $P5052 = __lowered_lex_475."CURSOR"()
    $P5053 = $P5052."panic"("Internal modifier strings must be literals")
    set $P5054, $P5053
  if1394_end3292:
    set $P5055, $P5054
  if1391_end3286:
    .return ($P5055) 
.end
.HLL "nqp"
.namespace []
.sub "qbuildsub" :subid("cuid_220_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1247
    .param pmc __lowered_lex_477 
    .param pmc __lowered_lex_478 
    .param pmc __lowered_lex_479 :optional 
    .param int haz_param_2 :opt_flag 
    .param pmc __lowered_lex_480 :named("anon") :optional 
    .param int haz_param_3 :opt_flag 
    .param pmc __lowered_lex_481 :named("addself") :optional 
    .param int haz_param_4 :opt_flag 
    .param pmc __lowered_lex_482 :slurpy :named 
    .local pmc __lowered_lex_483 
    .local pmc __lowered_lex_484 
    .local pmc fb_tmp_320 
    .local pmc __lowered_lex_476 
    .local pmc fb_tmp_321 
    .local pmc fb_tmp_322 
    .local pmc fb_tmp_323 
    .local pmc fb_tmp_324 
    .local pmc fb_tmp_325 
    .local pmc pkg_viv_tmp_29 
    .local pmc fb_tmp_326 
    .local pmc fb_tmp_327 
    .local pmc pkg_viv_tmp_30 
    .local pmc fb_tmp_328 
    .local pmc fb_tmp_329 
    .local pmc pkg_viv_tmp_31 
    .local pmc fb_tmp_330 
    .local pmc fb_tmp_331 
    .local pmc pkg_viv_tmp_32 
    .local pmc fb_tmp_332 
    .local pmc fb_tmp_333 
    if haz_param_2, default3391
    nqp_get_sc_object $P5112, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 148
    $P5113 = $P5112."new"()
    set __lowered_lex_479, $P5113
  default3391:
    if haz_param_3, default3392
    nqp_get_sc_object $P5114, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_480, $P5114
  default3392:
    if haz_param_4, default3393
    nqp_get_sc_object $P5115, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_481, $P5115
  default3393:
    exists $I5001, __lowered_lex_482["code_obj"]
    unless $I5001 goto if1411_else3321 
    set fb_tmp_320, __lowered_lex_482
    repr_defined $I5002, fb_tmp_320
    unless $I5002 goto if1412_else3323 
    set $P5001, fb_tmp_320["code_obj"]
    set $P5003, $P5001
    goto if1412_end3324
  if1412_else3323:
    null $P5002
    set $P5003, $P5002
  if1412_end3324:
    unless_null $P5003, vivi_14133325
    nqp_get_sc_object $P5004, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5003, $P5004
  vivi_14133325:
    set $P5007, $P5003
    goto if1411_end3322
  if1411_else3321:
.annotate 'line', 1250
    nqp_decontainerize $P5005, __lowered_lex_477
    $P5006 = $P5005."create_regex_code_object"(__lowered_lex_479)
    set $P5007, $P5006
  if1411_end3322:
    set __lowered_lex_483, $P5007
    unless __lowered_lex_481 goto if1414_end3327 
.annotate 'line', 1252
.annotate 'line', 1253
    nqp_get_sc_object $P5008, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 103
    $P5009 = $P5008."new"("self" :named("name"), "local" :named("scope"), "param" :named("decl"))
    $P5010 = __lowered_lex_479."push"($P5009)
  if1414_end3327:
.annotate 'line', 1255
    $P5011 = __lowered_lex_479."symbol"(utf8:"$\x{a2}")
    if $P5011 goto unless1415_end3329 
.annotate 'line', 1256
    nqp_get_sc_object $P5012, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 103
    $P5013 = $P5012."new"(utf8:"$\x{a2}" :named("name"), "lexical" :named("scope"), "var" :named("decl"))
    __lowered_lex_479."push"($P5013)
.annotate 'line', 1257
    $P5014 = __lowered_lex_479."symbol"(utf8:"$\x{a2}", "lexical" :named("scope"))
  unless1415_end3329:
.annotate 'line', 1260
    nqp_decontainerize $P5015, __lowered_lex_477
    $P5016 = "&capnames"(__lowered_lex_478, 0)
    $P5015."store_regex_caps"(__lowered_lex_483, __lowered_lex_479, $P5016)
.annotate 'line', 1261
    nqp_decontainerize $P5017, __lowered_lex_477
    nqp_get_sc_object $P5018, "04F6DF32596F46780CCB691981DC37EC9DB1CC6C-1431289885.6999", 3
    $P5019 = $P5018."new"()
    $P5020 = $P5019."addnode"(__lowered_lex_478)
    $P5017."store_regex_nfa"(__lowered_lex_483, __lowered_lex_479, $P5020)
.annotate 'line', 1262
    nqp_decontainerize $P5021, __lowered_lex_477
    $P5021."alt_nfas"(__lowered_lex_483, __lowered_lex_479, __lowered_lex_478)
.annotate 'line', 1264
    nqp_get_sc_object $P5022, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5023 = $P5022."new"("scan" :named("rxtype"))
    set __lowered_lex_484, $P5023
.annotate 'line', 1265
    set __lowered_lex_476, __lowered_lex_478
.annotate 'line', 1267
    $P5024 = __lowered_lex_476."rxtype"()
    set $S5001, $P5024
    iseq $I5003, $S5001, "concat"
    box $P5030, $I5003
    set $P5029, $P5030
    unless $I5003 goto if1417_end3333 
    set fb_tmp_321, __lowered_lex_476
    repr_defined $I5004, fb_tmp_321
    unless $I5004 goto if1418_else3334 
    set $P5025, fb_tmp_321[0]
    set $P5027, $P5025
    goto if1418_end3335
  if1418_else3334:
    null $P5026
    set $P5027, $P5026
  if1418_end3335:
    unless_null $P5027, vivi_14193336
    nqp_get_sc_object $P5028, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5027, $P5028
  vivi_14193336:
    set $P5029, $P5027
  if1417_end3333:
    unless $P5029 goto if1416_end3331 
    set fb_tmp_322, __lowered_lex_476
    repr_defined $I5005, fb_tmp_322
    unless $I5005 goto if1420_else3337 
    set $P5031, fb_tmp_322[0]
    set $P5033, $P5031
    goto if1420_end3338
  if1420_else3337:
    null $P5032
    set $P5033, $P5032
  if1420_end3338:
    unless_null $P5033, vivi_14213339
    nqp_get_sc_object $P5034, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5033, $P5034
  vivi_14213339:
    set __lowered_lex_476, $P5033
  if1416_end3331:
.annotate 'line', 1270
    $P5035 = __lowered_lex_476."rxtype"()
    set $S5002, $P5035
    iseq $I5006, $S5002, "literal"
    unless $I5006 goto if1422_end3341 
    set fb_tmp_323, __lowered_lex_476
    repr_defined $I5007, fb_tmp_323
    unless $I5007 goto if1423_else3342 
    set $P5036, fb_tmp_323[0]
    set $P5038, $P5036
    goto if1423_end3343
  if1423_else3342:
    null $P5037
    set $P5038, $P5037
  if1423_end3343:
    unless_null $P5038, vivi_14243344
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5038, $P5039
  vivi_14243344:
    push __lowered_lex_484, $P5038
.annotate 'line', 1272
    $P5040 = __lowered_lex_476."subtype"()
    $P5041 = __lowered_lex_484."subtype"($P5040)
  if1422_end3341:
.annotate 'line', 1276
    __lowered_lex_479."annotate"("orig_qast", __lowered_lex_478)
.annotate 'line', 1277
    nqp_get_sc_object $P5042, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    unless __lowered_lex_480 goto if1425_else3345 
.annotate 'line', 1281
    nqp_get_sc_object $P5043, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5044 = $P5043."new"("pass" :named("rxtype"))
    set $P5088, $P5044
    goto if1425_end3346
  if1425_else3345:
    find_dynamic_lex $P5045, "%*RX"
    unless_null $P5045, fallback3351
    nqp_get_sc_object $P5047, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5046, $P5047
    set pkg_viv_tmp_29, $P5046
    set fb_tmp_325, pkg_viv_tmp_29
    repr_defined $I5010, fb_tmp_325
    unless $I5010 goto if1428_else3352 
    set $P5048, fb_tmp_325["%RX"]
    set $P5050, $P5048
    goto if1428_end3353
  if1428_else3352:
    null $P5049
    set $P5050, $P5049
  if1428_end3353:
    unless_null $P5050, vivi_14293354
    new $P5051, 'Hash'
    set pkg_viv_tmp_29["%RX"], $P5051
    set $P5050, $P5051
  vivi_14293354:
    unless_null $P5050, vivi_14303355
    die "Contextual %*RX not found"
    box $P5052, "Contextual %*RX not found"
    set $P5050, $P5052
  vivi_14303355:
    set $P5045, $P5050
  fallback3351:
    set fb_tmp_324, $P5045
    repr_defined $I5009, fb_tmp_324
    unless $I5009 goto if1427_else3349 
    set $P5053, fb_tmp_324["name"]
    set $P5055, $P5053
    goto if1427_end3350
  if1427_else3349:
    null $P5054
    set $P5055, $P5054
  if1427_end3350:
    unless_null $P5055, vivi_14313356
    nqp_get_sc_object $P5056, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5055, $P5056
  vivi_14313356:
    set $S5004, $P5055
    substr $S5003, $S5004, 0, 12
    isne $I5008, $S5003, "!!LATENAME!!"
    unless $I5008 goto if1426_else3347 
.annotate 'line', 1283
    nqp_get_sc_object $P5057, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    find_dynamic_lex $P5058, "%*RX"
    unless_null $P5058, fallback3359
    nqp_get_sc_object $P5060, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5059, $P5060
    set pkg_viv_tmp_30, $P5059
    set fb_tmp_327, pkg_viv_tmp_30
    repr_defined $I5012, fb_tmp_327
    unless $I5012 goto if1433_else3360 
    set $P5061, fb_tmp_327["%RX"]
    set $P5063, $P5061
    goto if1433_end3361
  if1433_else3360:
    null $P5062
    set $P5063, $P5062
  if1433_end3361:
    unless_null $P5063, vivi_14343362
    new $P5064, 'Hash'
    set pkg_viv_tmp_30["%RX"], $P5064
    set $P5063, $P5064
  vivi_14343362:
    unless_null $P5063, vivi_14353363
    die "Contextual %*RX not found"
    box $P5065, "Contextual %*RX not found"
    set $P5063, $P5065
  vivi_14353363:
    set $P5058, $P5063
  fallback3359:
    set fb_tmp_326, $P5058
    repr_defined $I5011, fb_tmp_326
    unless $I5011 goto if1432_else3357 
    set $P5066, fb_tmp_326["name"]
    set $P5068, $P5066
    goto if1432_end3358
  if1432_else3357:
    null $P5067
    set $P5068, $P5067
  if1432_end3358:
    unless_null $P5068, vivi_14363364
    nqp_get_sc_object $P5069, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5068, $P5069
  vivi_14363364:
    $P5070 = $P5057."new"("pass" :named("rxtype"), $P5068 :named("name"))
    set $P5087, $P5070
    goto if1426_end3348
  if1426_else3347:
.annotate 'line', 1284
    nqp_get_sc_object $P5071, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
.annotate 'line', 1285
    nqp_get_sc_object $P5072, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 103
    find_dynamic_lex $P5073, "%*RX"
    unless_null $P5073, fallback3367
    nqp_get_sc_object $P5075, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5074, $P5075
    set pkg_viv_tmp_31, $P5074
    set fb_tmp_329, pkg_viv_tmp_31
    repr_defined $I5014, fb_tmp_329
    unless $I5014 goto if1438_else3368 
    set $P5076, fb_tmp_329["%RX"]
    set $P5078, $P5076
    goto if1438_end3369
  if1438_else3368:
    null $P5077
    set $P5078, $P5077
  if1438_end3369:
    unless_null $P5078, vivi_14393370
    new $P5079, 'Hash'
    set pkg_viv_tmp_31["%RX"], $P5079
    set $P5078, $P5079
  vivi_14393370:
    unless_null $P5078, vivi_14403371
    die "Contextual %*RX not found"
    box $P5080, "Contextual %*RX not found"
    set $P5078, $P5080
  vivi_14403371:
    set $P5073, $P5078
  fallback3367:
    set fb_tmp_328, $P5073
    repr_defined $I5013, fb_tmp_328
    unless $I5013 goto if1437_else3365 
    set $P5081, fb_tmp_328["name"]
    set $P5083, $P5081
    goto if1437_end3366
  if1437_else3365:
    null $P5082
    set $P5083, $P5082
  if1437_end3366:
    unless_null $P5083, vivi_14413372
    nqp_get_sc_object $P5084, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5083, $P5084
  vivi_14413372:
    set $S5006, $P5083
    substr $S5005, $S5006, 12
    $P5085 = $P5072."new"($S5005 :named("name"), "lexical" :named("scope"))
    $P5086 = $P5071."new"($P5085, "pass" :named("rxtype"))
    set $P5087, $P5086
  if1426_end3348:
    set $P5088, $P5087
  if1425_end3346:
    $P5089 = $P5042."new"(__lowered_lex_484, __lowered_lex_478, $P5088, "concat" :named("rxtype"))
    set __lowered_lex_478, $P5089
    find_dynamic_lex $P5090, "%*RX"
    unless_null $P5090, fallback3377
    nqp_get_sc_object $P5092, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5091, $P5092
    set pkg_viv_tmp_32, $P5091
    set fb_tmp_331, pkg_viv_tmp_32
    repr_defined $I5016, fb_tmp_331
    unless $I5016 goto if1444_else3378 
    set $P5093, fb_tmp_331["%RX"]
    set $P5095, $P5093
    goto if1444_end3379
  if1444_else3378:
    null $P5094
    set $P5095, $P5094
  if1444_end3379:
    unless_null $P5095, vivi_14453380
    new $P5096, 'Hash'
    set pkg_viv_tmp_32["%RX"], $P5096
    set $P5095, $P5096
  vivi_14453380:
    unless_null $P5095, vivi_14463381
    die "Contextual %*RX not found"
    box $P5097, "Contextual %*RX not found"
    set $P5095, $P5097
  vivi_14463381:
    set $P5090, $P5095
  fallback3377:
    set fb_tmp_330, $P5090
    repr_defined $I5015, fb_tmp_330
    unless $I5015 goto if1443_else3375 
    set $P5098, fb_tmp_330["r"]
    set $P5100, $P5098
    goto if1443_end3376
  if1443_else3375:
    null $P5099
    set $P5100, $P5099
  if1443_end3376:
    unless_null $P5100, vivi_14473382
    nqp_get_sc_object $P5101, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5100, $P5101
  vivi_14473382:
    unless $P5100 goto if1442_end3374 
.annotate 'line', 1291
.annotate 'line', 1292
    set fb_tmp_332, __lowered_lex_478
    repr_defined $I5017, fb_tmp_332
    unless $I5017 goto if1448_else3383 
    set $P5102, fb_tmp_332[2]
    set $P5104, $P5102
    goto if1448_end3384
  if1448_else3383:
    null $P5103
    set $P5104, $P5103
  if1448_end3384:
    unless_null $P5104, vivi_14493385
    nqp_get_sc_object $P5105, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5104, $P5105
  vivi_14493385:
    $P5106 = $P5104."backtrack"("r")
  if1442_end3374:
.annotate 'line', 1294
    __lowered_lex_479."push"(__lowered_lex_478)
    exists $I5018, __lowered_lex_482["cursor_type"]
    unless $I5018 goto if1450_end3387 
.annotate 'line', 1296
.annotate 'line', 1297
    set fb_tmp_333, __lowered_lex_482
    repr_defined $I5019, fb_tmp_333
    unless $I5019 goto if1451_else3388 
    set $P5107, fb_tmp_333["cursor_type"]
    set $P5109, $P5107
    goto if1451_end3389
  if1451_else3388:
    null $P5108
    set $P5109, $P5108
  if1451_end3389:
    unless_null $P5109, vivi_14523390
    nqp_get_sc_object $P5110, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5109, $P5110
  vivi_14523390:
    $P5111 = __lowered_lex_478."cursor_type"($P5109)
  if1450_end3387:
    .return (__lowered_lex_479) 
.end
.HLL "nqp"
.namespace []
.sub "alt_nfas" :subid("cuid_221_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1358
    .param pmc __lowered_lex_488 
    .param pmc __lowered_lex_489 
    .param pmc __lowered_lex_490 
    .param pmc __lowered_lex_491 
    .local pmc __lowered_lex_492 
    .local pmc __lowered_lex_486 
    .local pmc lowered_for_it__21 
    .local pmc __lowered_lex_485 
    .local pmc fb_tmp_334 
    .local pmc lowered_for_it__22 
    .local pmc __lowered_lex_487 
.annotate 'line', 1359
    $P5001 = __lowered_lex_491."rxtype"()
    set __lowered_lex_492, $P5001
    set $S5001, __lowered_lex_492
    iseq $I5001, $S5001, "alt"
    unless $I5001 goto if1453_else3394 
    new $P5002, 'QRPA'
    set __lowered_lex_486, $P5002
.annotate 'line', 1360
.annotate 'line', 1362
    $P5004 = __lowered_lex_491."list"()
    iter $P5003, $P5004
    set lowered_for_it__21, $P5003
    new $P5011, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5011, while1454_handlers3399
    push_eh $P5011
  while1454_test3396:
    set $P5010, lowered_for_it__21
    unless lowered_for_it__21 goto while1454_done3400 
  while1454_redo3398:
    shift $P5005, lowered_for_it__21
    set __lowered_lex_485, $P5005
.annotate 'line', 1363
    nqp_decontainerize $P5006, __lowered_lex_488
    $P5006."alt_nfas"(__lowered_lex_489, __lowered_lex_490, __lowered_lex_485)
.annotate 'line', 1364
    nqp_get_sc_object $P5007, "04F6DF32596F46780CCB691981DC37EC9DB1CC6C-1431289885.6999", 3
    $P5008 = $P5007."new"()
    $P5009 = $P5008."addnode"(__lowered_lex_485)
    push __lowered_lex_486, $P5009
    set $P5010, __lowered_lex_486
    goto while1454_test3396 
  while1454_handlers3399:
    .get_results ($P5011)
    pop_upto_eh $P5011
    getattribute $P5012, $P5011, 'type'
    eq $P5012, .CONTROL_LOOP_NEXT, while1454_test3396
    eq $P5012, .CONTROL_LOOP_REDO, while1454_redo3398
  while1454_done3400:
    pop_eh 
.annotate 'line', 1366
    nqp_get_sc_object $P5013, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 23
    $P5014 = $P5013."unique"("alt_nfa_")
    set $S5004, $P5014
    concat $S5003, $S5004, "_"
    time $N5001
    set $S5005, $N5001
    concat $S5002, $S5003, $S5005
    __lowered_lex_491."name"($S5002)
.annotate 'line', 1367
    nqp_decontainerize $P5015, __lowered_lex_488
    $P5016 = __lowered_lex_491."name"()
    $P5017 = $P5015."store_regex_alt_nfa"(__lowered_lex_489, __lowered_lex_490, $P5016, __lowered_lex_486)
    set $P5035, $P5017
    goto if1453_end3395
  if1453_else3394:
    set $S5006, __lowered_lex_492
    iseq $I5002, $S5006, "subcapture"
    set $I5004, $I5002
    if $I5002 goto unless1456_end3404 
    set $S5007, __lowered_lex_492
    iseq $I5003, $S5007, "quant"
    set $I5004, $I5003
  unless1456_end3404:
    unless $I5004 goto if1455_else3401 
.annotate 'line', 1369
.annotate 'line', 1370
    nqp_decontainerize $P5018, __lowered_lex_488
    set fb_tmp_334, __lowered_lex_491
    repr_defined $I5005, fb_tmp_334
    unless $I5005 goto if1457_else3405 
    set $P5019, fb_tmp_334[0]
    set $P5021, $P5019
    goto if1457_end3406
  if1457_else3405:
    null $P5020
    set $P5021, $P5020
  if1457_end3406:
    unless_null $P5021, vivi_14583407
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_14583407:
    $P5023 = $P5018."alt_nfas"(__lowered_lex_489, __lowered_lex_490, $P5021)
    set $P5034, $P5023
    goto if1455_end3402
  if1455_else3401:
    set $S5008, __lowered_lex_492
    iseq $I5006, $S5008, "concat"
    set $I5008, $I5006
    if $I5006 goto unless1462_end3415 
    set $S5009, __lowered_lex_492
    iseq $I5007, $S5009, "altseq"
    set $I5008, $I5007
  unless1462_end3415:
    set $I5010, $I5008
    if $I5008 goto unless1461_end3413 
    set $S5010, __lowered_lex_492
    iseq $I5009, $S5010, "conj"
    set $I5010, $I5009
  unless1461_end3413:
    set $I5012, $I5010
    if $I5010 goto unless1460_end3411 
    set $S5011, __lowered_lex_492
    iseq $I5011, $S5011, "conjseq"
    set $I5012, $I5011
  unless1460_end3411:
    box $P5033, $I5012
    set $P5032, $P5033
    unless $I5012 goto if1459_end3409 
.annotate 'line', 1372
.annotate 'line', 1373
    $P5025 = __lowered_lex_491."list"()
    iter $P5024, $P5025
    set lowered_for_it__22, $P5024
    new $P5030, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5030, while1463_handlers3419
    push_eh $P5030
  while1463_test3416:
    set $P5029, lowered_for_it__22
    unless lowered_for_it__22 goto while1463_done3420 
  while1463_redo3418:
    shift $P5026, lowered_for_it__22
    set __lowered_lex_487, $P5026
    nqp_decontainerize $P5027, __lowered_lex_488
    $P5028 = $P5027."alt_nfas"(__lowered_lex_489, __lowered_lex_490, __lowered_lex_487)
    set $P5029, $P5028
    goto while1463_test3416 
  while1463_handlers3419:
    .get_results ($P5030)
    pop_upto_eh $P5030
    getattribute $P5031, $P5030, 'type'
    eq $P5031, .CONTROL_LOOP_NEXT, while1463_test3416
    eq $P5031, .CONTROL_LOOP_REDO, while1463_redo3418
  while1463_done3420:
    pop_eh 
    set $P5032, $P5029
  if1459_end3409:
    set $P5034, $P5032
  if1455_end3402:
    set $P5035, $P5034
  if1453_end3395:
    .return ($P5035) 
.end
.HLL "nqp"
.namespace []
.sub "subrule_alias" :subid("cuid_222_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1377
    .param pmc __lowered_lex_493 
    .param pmc __lowered_lex_494 
    .param pmc __lowered_lex_495 
.annotate 'line', 1378
    $P5001 = __lowered_lex_494."name"()
    set $S5001, $P5001
    isgt $I5001, $S5001, ""
    unless $I5001 goto if1464_else3421 
    set $S5004, __lowered_lex_495
    concat $S5003, $S5004, "="
    $P5002 = __lowered_lex_494."name"()
    set $S5005, $P5002
    concat $S5002, $S5003, $S5005
    $P5003 = __lowered_lex_494."name"($S5002)
    goto if1464_end3422
  if1464_else3421:
.annotate 'line', 1379
    $P5004 = __lowered_lex_494."name"(__lowered_lex_495)
  if1464_end3422:
.annotate 'line', 1380
    $P5005 = __lowered_lex_494."subtype"("capture")
    .return ($P5005) 
.end
.HLL "nqp"
.namespace []
.sub "offset_ast" :subid("cuid_223_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1383
    .param pmc __lowered_lex_499 
    .param pmc __lowered_lex_500 
    .local pmc fb_tmp_335 
    .local int __lowered_lex_498 
    .local pmc lowered_for_it__23 
    .local pmc __lowered_lex_497 
    .local int __lowered_lex_496 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_3423
    .lex "RETURN", $P101
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5001, __lowered_lex_500, $P5001
    if $I5001 goto unless1465_end3426 
    $P5002 = "RETURN"(-1)
  unless1465_end3426:
.annotate 'line', 1385
    $P5003 = __lowered_lex_500."rxtype"()
    set $S5001, $P5003
    iseq $I5002, $S5001, "literal"
    unless $I5002 goto if1466_else3427 
    set fb_tmp_335, __lowered_lex_500
    repr_defined $I5004, fb_tmp_335
    unless $I5004 goto if1467_else3429 
    set $P5004, fb_tmp_335[0]
    set $P5006, $P5004
    goto if1467_end3430
  if1467_else3429:
    null $P5005
    set $P5006, $P5005
  if1467_end3430:
    unless_null $P5006, vivi_14683431
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_14683431:
    set $S5002, $P5006
    length $I5003, $S5002
    $P5008 = "RETURN"($I5003)
    goto if1466_end3428
  if1466_else3427:
.annotate 'line', 1388
    $P5009 = __lowered_lex_500."rxtype"()
    set $S5003, $P5009
    iseq $I5005, $S5003, "cclass"
    unless $I5005 goto if1469_else3432 
    $P5010 = "RETURN"(1)
    set $P5028, $P5010
    goto if1469_end3433
  if1469_else3432:
.annotate 'line', 1391
    $P5011 = __lowered_lex_500."rxtype"()
    set $S5004, $P5011
    iseq $I5006, $S5004, "anchor"
    unless $I5006 goto if1470_else3434 
    $P5012 = "RETURN"(0)
    set $P5027, $P5012
    goto if1470_end3435
  if1470_else3434:
.annotate 'line', 1394
    $P5013 = __lowered_lex_500."rxtype"()
    set $S5005, $P5013
    iseq $I5007, $S5005, "concat"
    box $P5026, $I5007
    set $P5025, $P5026
    unless $I5007 goto if1471_end3437 
    set __lowered_lex_498, 0
    $P5015 = __lowered_lex_500."list"()
    iter $P5014, $P5015
    set lowered_for_it__23, $P5014
    new $P5021, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5021, while1472_handlers3441
    push_eh $P5021
  while1472_test3438:
    set $P5020, lowered_for_it__23
    unless lowered_for_it__23 goto while1472_done3442 
  while1472_redo3440:
    shift $P5016, lowered_for_it__23
    set __lowered_lex_497, $P5016
.annotate 'line', 1396
.annotate 'line', 1397
    nqp_decontainerize $P5017, __lowered_lex_499
    $P5018 = $P5017."offset_ast"(__lowered_lex_497)
    set $I5008, $P5018
    set __lowered_lex_496, $I5008
    islt $I5009, __lowered_lex_496, 0
    unless $I5009 goto if1473_end3444 
    $P5019 = "RETURN"(-1)
  if1473_end3444:
    add $I5010, __lowered_lex_498, __lowered_lex_496
    set __lowered_lex_498, $I5010
    box $P5022, __lowered_lex_498
    set $P5020, $P5022
    goto while1472_test3438 
  while1472_handlers3441:
    .get_results ($P5021)
    pop_upto_eh $P5021
    getattribute $P5023, $P5021, 'type'
    eq $P5023, .CONTROL_LOOP_NEXT, while1472_test3438
    eq $P5023, .CONTROL_LOOP_REDO, while1472_redo3440
  while1472_done3442:
    pop_eh 
    $P5024 = "RETURN"(__lowered_lex_498)
    set $P5025, $P5024
  if1471_end3437:
    set $P5027, $P5025
  if1470_end3435:
    set $P5028, $P5027
  if1469_end3433:
  if1466_end3428:
    $P5029 = "RETURN"(-1)
    goto lexotic_3424
  lexotic_3423:
    .get_results ($P5029)
  lexotic_3424:
    .return ($P5029) 
.end
.HLL "nqp"
.namespace []
.sub "flip_ast" :subid("cuid_224_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1406
    .param pmc __lowered_lex_503 
    .param pmc __lowered_lex_504 
    .local pmc fb_tmp_336 
    .local pmc __lowered_lex_501 
    .local pmc lowered_for_it__24 
    .local pmc __lowered_lex_502 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_3445
    .lex "RETURN", $P101
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5001, __lowered_lex_504, $P5001
    if $I5001 goto unless1474_end3448 
    $P5002 = "RETURN"(__lowered_lex_504)
  unless1474_end3448:
.annotate 'line', 1408
    $P5003 = __lowered_lex_504."rxtype"()
    set $S5001, $P5003
    iseq $I5002, $S5001, "literal"
    unless $I5002 goto if1475_else3449 
    set fb_tmp_336, __lowered_lex_504
    repr_defined $I5003, fb_tmp_336
    unless $I5003 goto if1476_else3451 
    set $P5005, fb_tmp_336[0]
    set $P5007, $P5005
    goto if1476_end3452
  if1476_else3451:
    null $P5006
    set $P5007, $P5006
  if1476_end3452:
    unless_null $P5007, vivi_14773453
    nqp_get_sc_object $P5008, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5007, $P5008
  vivi_14773453:
    set $S5003, $P5007
    box $P5004, $S5003
    $P5009 = $P5004."reverse"()
    set $S5002, $P5009
    box $P5010, $S5002
    set __lowered_lex_504[0], $P5010
    goto if1475_end3450
  if1475_else3449:
.annotate 'line', 1411
    $P5011 = __lowered_lex_504."rxtype"()
    set $S5004, $P5011
    iseq $I5004, $S5004, "concat"
    unless $I5004 goto if1478_else3454 
    new $P5012, 'QRPA'
    set __lowered_lex_501, $P5012
  while1479_test3456:
    $P5013 = __lowered_lex_504."list"()
    set $N5001, $P5013
    box $P5018, $N5001
    set $P5017, $P5018
    unless $N5001 goto while1479_done3460 
  while1479_redo3458:
.annotate 'line', 1413
    $P5014 = __lowered_lex_504."list"()
    $P5015 = $P5014."shift"()
    $P5016 = __lowered_lex_501."push"($P5015)
    set $P5017, $P5016
    goto while1479_test3456 
  while1479_done3460:
  while1480_test3461:
    set $P5024, __lowered_lex_501
    unless __lowered_lex_501 goto while1480_done3465 
  while1480_redo3463:
.annotate 'line', 1414
    $P5019 = __lowered_lex_504."list"()
    nqp_decontainerize $P5020, __lowered_lex_503
    $P5021 = __lowered_lex_501."pop"()
    $P5022 = $P5020."flip_ast"($P5021)
    $P5023 = $P5019."push"($P5022)
    set $P5024, $P5023
    goto while1480_test3461 
  while1480_done3465:
    set $P5033, $P5024
    goto if1478_end3455
  if1478_else3454:
.annotate 'line', 1416
    $P5026 = __lowered_lex_504."list"()
    iter $P5025, $P5026
    set lowered_for_it__24, $P5025
    new $P5031, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5031, while1481_handlers3469
    push_eh $P5031
  while1481_test3466:
    set $P5030, lowered_for_it__24
    unless lowered_for_it__24 goto while1481_done3470 
  while1481_redo3468:
    shift $P5027, lowered_for_it__24
    set __lowered_lex_502, $P5027
.annotate 'line', 1417
    nqp_decontainerize $P5028, __lowered_lex_503
    $P5029 = $P5028."flip_ast"(__lowered_lex_502)
    set $P5030, $P5029
    goto while1481_test3466 
  while1481_handlers3469:
    .get_results ($P5031)
    pop_upto_eh $P5031
    getattribute $P5032, $P5031, 'type'
    eq $P5032, .CONTROL_LOOP_NEXT, while1481_test3466
    eq $P5032, .CONTROL_LOOP_REDO, while1481_redo3468
  while1481_done3470:
    pop_eh 
    set $P5033, $P5030
  if1478_end3455:
  if1475_end3450:
    goto lexotic_3446
  lexotic_3445:
    .get_results (__lowered_lex_504)
  lexotic_3446:
    .return (__lowered_lex_504) 
.end
.HLL "nqp"
.namespace []
.sub "create_regex_code_object" :subid("cuid_225_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1424
    .param pmc __lowered_lex_505 
    .param pmc __lowered_lex_506 
    .local pmc fb_tmp_337 
.annotate 'line', 1425
    find_dynamic_lex $P5001, "$*W"
    unless_null $P5001, fallback3471
    nqp_get_sc_object $P5003, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    get_who $P5002, $P5003
    set fb_tmp_337, $P5002
    repr_defined $I5001, fb_tmp_337
    unless $I5001 goto if1482_else3472 
    set $P5004, fb_tmp_337["$W"]
    set $P5006, $P5004
    goto if1482_end3473
  if1482_else3472:
    null $P5005
    set $P5006, $P5005
  if1482_end3473:
    unless_null $P5006, vivi_14833474
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_14833474:
    unless_null $P5006, vivi_14843475
    die "Contextual $*W not found"
    box $P5008, "Contextual $*W not found"
    set $P5006, $P5008
  vivi_14843475:
    set $P5001, $P5006
  fallback3471:
    $P5009 = __lowered_lex_506."name"()
    $P5010 = $P5001."create_code"(__lowered_lex_506, $P5009)
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_caps" :subid("cuid_226_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1429
    .param pmc __lowered_lex_507 
    .param pmc __lowered_lex_508 
    .param pmc __lowered_lex_509 
    .param pmc __lowered_lex_510 
.annotate 'line', 1430
    $P5001 = __lowered_lex_508."SET_CAPS"(__lowered_lex_510)
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_nfa" :subid("cuid_227_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1434
    .param pmc __lowered_lex_511 
    .param pmc __lowered_lex_512 
    .param pmc __lowered_lex_513 
    .param pmc __lowered_lex_514 
.annotate 'line', 1435
    $P5001 = __lowered_lex_514."save"()
    $P5002 = __lowered_lex_512."SET_NFA"($P5001)
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "store_regex_alt_nfa" :subid("cuid_228_1431289913.64791") :anon :lex :outer("cuid_242_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1439
    .param pmc __lowered_lex_516 
    .param pmc __lowered_lex_517 
    .param pmc __lowered_lex_518 
    .param pmc __lowered_lex_519 
    .param pmc __lowered_lex_520 
    .local pmc __lowered_lex_521 
    .local pmc lowered_for_it__25 
    .local pmc __lowered_lex_515 
    new $P5001, 'QRPA'
    set __lowered_lex_521, $P5001
    iter $P5002, __lowered_lex_520
    set lowered_for_it__25, $P5002
    new $P5007, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5007, while1485_handlers3479
    push_eh $P5007
  while1485_test3476:
    set $P5006, lowered_for_it__25
    unless lowered_for_it__25 goto while1485_done3480 
  while1485_redo3478:
    shift $P5003, lowered_for_it__25
    set __lowered_lex_515, $P5003
.annotate 'line', 1441
.annotate 'line', 1442
    $P5004 = __lowered_lex_515."save"(1 :named("non_empty"))
    $P5005 = __lowered_lex_521."push"($P5004)
    set $P5006, $P5005
    goto while1485_test3476 
  while1485_handlers3479:
    .get_results ($P5007)
    pop_upto_eh $P5007
    getattribute $P5008, $P5007, 'type'
    eq $P5008, .CONTROL_LOOP_NEXT, while1485_test3476
    eq $P5008, .CONTROL_LOOP_REDO, while1485_redo3478
  while1485_done3480:
    pop_eh 
.annotate 'line', 1444
    $P5009 = __lowered_lex_517."SET_ALT_NFA"(__lowered_lex_519, __lowered_lex_521)
    .return ($P5009) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_245_1431289913.64791") :anon :lex :outer("cuid_237_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1449
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    nqp_get_sc_object $P5001, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_246_1431289913.64791") :anon :lex :outer("cuid_237_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1462
    .const 'Sub' $P5009 = 'cuid_229_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_230_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_231_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_232_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_233_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_234_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_235_1431289913.64791' 
    capture_lex $P5009 
    .const 'Sub' $P5009 = 'cuid_236_1431289913.64791' 
    capture_lex $P5009 
    .lex "$?PACKAGE", $P101 
    .lex "$?CLASS", $P102 
    .const 'Sub' $P5001 = 'cuid_229_1431289913.64791' 
    capture_lex $P5001
    .const 'Sub' $P5002 = 'cuid_230_1431289913.64791' 
    capture_lex $P5002
    .const 'Sub' $P5003 = 'cuid_231_1431289913.64791' 
    capture_lex $P5003
    .const 'Sub' $P5004 = 'cuid_232_1431289913.64791' 
    capture_lex $P5004
    .const 'Sub' $P5005 = 'cuid_233_1431289913.64791' 
    capture_lex $P5005
    .const 'Sub' $P5006 = 'cuid_234_1431289913.64791' 
    capture_lex $P5006
    .const 'Sub' $P5007 = 'cuid_235_1431289913.64791' 
    capture_lex $P5007
    .const 'Sub' $P5008 = 'cuid_236_1431289913.64791' 
    capture_lex $P5008
    .return ($P5008) 
.end
.HLL "nqp"
.namespace []
.sub "optimize" :subid("cuid_229_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1467
    .param pmc __lowered_lex_522 
    .param pmc __lowered_lex_523 
    .param pmc __lowered_lex_524 
    .param pmc __lowered_lex_525 :slurpy :named 
    .local pmc __lowered_lex_526 
    .local pmc fb_tmp_338 
    .local pmc fb_tmp_339 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_3481
    .lex "RETURN", $P101
    nqp_decontainerize $P5001, __lowered_lex_522
    nqp_get_sc_object $P5002, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    find_dynamic_lex $P5005, "$*LEVEL"
    set $P5004, $P5005
    defined $I5002, $P5004
    if $I5002, defor3484
    set fb_tmp_338, __lowered_lex_525
    repr_defined $I5003, fb_tmp_338
    unless $I5003 goto if1486_else3485 
    set $P5006, fb_tmp_338["optimize"]
    set $P5008, $P5006
    goto if1486_end3486
  if1486_else3485:
    null $P5007
    set $P5008, $P5007
  if1486_end3486:
    unless_null $P5008, vivi_14873487
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_14873487:
    set $P5004, $P5008
  defor3484:
    set $P5003, $P5004
    defined $I5001, $P5003
    if $I5001, defor3483
    box $P5010, 2
    set $P5003, $P5010
  defor3483:
    repr_bind_attr_obj $P5001, $P5002, "$!level", 1, $P5003
    nqp_decontainerize $P5011, __lowered_lex_522
    nqp_get_sc_object $P5012, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    set fb_tmp_339, __lowered_lex_525
    repr_defined $I5004, fb_tmp_339
    unless $I5004 goto if1488_else3488 
    set $P5013, fb_tmp_339["main_lang_optimizer"]
    set $P5015, $P5013
    goto if1488_end3489
  if1488_else3488:
    null $P5014
    set $P5015, $P5014
  if1488_end3489:
    unless_null $P5015, vivi_14893490
    nqp_get_sc_object $P5016, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5015, $P5016
  vivi_14893490:
    repr_bind_attr_obj $P5011, $P5012, "$!main_opt", 2, $P5015
    nqp_decontainerize $P5017, __lowered_lex_522
    nqp_get_sc_object $P5018, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    new $P5019, 'QRPA'
    push $P5019, __lowered_lex_524
    repr_bind_attr_obj $P5017, $P5018, "@!outer", 0, $P5019
.annotate 'line', 1471
    $P5020 = __lowered_lex_523."rxtype"()
    set __lowered_lex_526, $P5020
    set $S5001, __lowered_lex_526
    iseq $I5005, $S5001, "concat"
    unless $I5005 goto if1490_else3491 
.annotate 'line', 1472
.annotate 'line', 1473
    nqp_decontainerize $P5021, __lowered_lex_522
    $P5022 = $P5021."visit_concat"(__lowered_lex_523)
    $P5023 = "RETURN"($P5022)
    goto if1490_end3492
  if1490_else3491:
    set $S5002, __lowered_lex_526
    iseq $I5006, $S5002, "subrule"
    unless $I5006 goto if1491_else3493 
.annotate 'line', 1474
    nqp_decontainerize $P5024, __lowered_lex_522
    nqp_get_sc_object $P5025, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5026, $P5024, $P5025, "$!main_opt", 2
    unless $P5026 goto if1492_end3496 
.annotate 'line', 1475
    nqp_decontainerize $P5027, __lowered_lex_522
    nqp_get_sc_object $P5028, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5029, $P5027, $P5028, "$!main_opt", 2
    $P5030 = $P5029(__lowered_lex_523)
    set __lowered_lex_523, $P5030
  if1492_end3496:
.annotate 'line', 1476
    nqp_decontainerize $P5031, __lowered_lex_522
    $P5032 = $P5031."simplify_assertion"(__lowered_lex_523)
    $P5033 = "RETURN"($P5032)
    set $P5036, $P5033
    goto if1491_end3494
  if1491_else3493:
.annotate 'line', 1477
.annotate 'line', 1478
    nqp_decontainerize $P5034, __lowered_lex_522
    $P5035 = $P5034."visit_children"(__lowered_lex_523)
    set $P5036, $P5035
  if1491_end3494:
  if1490_end3492:
    goto lexotic_3482
  lexotic_3481:
    .get_results (__lowered_lex_523)
  lexotic_3482:
    .return (__lowered_lex_523) 
.end
.HLL "nqp"
.namespace []
.sub "all_subtypes" :subid("cuid_230_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1483
    .param pmc __lowered_lex_528 
    .param pmc __lowered_lex_529 
    .param pmc __lowered_lex_530 
    .local int __lowered_lex_531 
    .local pmc lowered_for_it__26 
    .local pmc __lowered_lex_527 
    .local int tmp_3 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_3497
    .lex "RETURN", $P101
    set __lowered_lex_531, 0
    iter $P5001, __lowered_lex_529
    set lowered_for_it__26, $P5001
    new $P5008, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5008, while1493_handlers3502
    push_eh $P5008
  while1493_test3499:
    set $P5007, lowered_for_it__26
    unless lowered_for_it__26 goto while1493_done3503 
  while1493_redo3501:
    shift $P5002, lowered_for_it__26
    set __lowered_lex_527, $P5002
.annotate 'line', 1485
.annotate 'line', 1486
    $P5003 = __lowered_lex_529."rxtype"()
    set $S5001, $P5003
    set $S5002, __lowered_lex_530
    iseq $I5001, $S5001, $S5002
    unless $I5001 goto if1494_else3504 
    set tmp_3, __lowered_lex_531
    add $I5002, tmp_3, 1
    set __lowered_lex_531, $I5002
    box $P5006, tmp_3
    set $P5005, $P5006
    goto if1494_end3505
  if1494_else3504:
.annotate 'line', 1488
    $P5004 = "RETURN"(-1)
    set $P5005, $P5004
  if1494_end3505:
    set $P5007, $P5005
    goto while1493_test3499 
  while1493_handlers3502:
    .get_results ($P5008)
    pop_upto_eh $P5008
    getattribute $P5009, $P5008, 'type'
    eq $P5009, .CONTROL_LOOP_NEXT, while1493_test3499
    eq $P5009, .CONTROL_LOOP_REDO, while1493_redo3501
  while1493_done3503:
    pop_eh 
    $P5010 = "RETURN"(__lowered_lex_531)
    goto lexotic_3498
  lexotic_3497:
    .get_results ($P5010)
  lexotic_3498:
    .return ($P5010) 
.end
.HLL "nqp"
.namespace []
.sub "first_non_concat_child" :subid("cuid_231_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1495
    .param pmc __lowered_lex_532 
    .param pmc __lowered_lex_533 
    .local pmc fb_tmp_340 
    .local pmc fb_tmp_341 
    .local pmc fb_tmp_342 
    .local pmc fb_tmp_343 
    new $P5028, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5028, while1495_handlers3509
    push_eh $P5028
  while1495_test3506:
    $P5001 = __lowered_lex_533."list"()
    set $N5001, $P5001
    set $N5002, 1
    isge $I5001, $N5001, $N5002
    box $P5029, $I5001
    set $P5027, $P5029
    unless $I5001 goto while1495_done3510 
  while1495_redo3508:
.annotate 'line', 1496
    nqp_get_sc_object $P5002, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5002, __lowered_lex_533, $P5002
    unless $I5002 goto if1496_else3511 
.annotate 'line', 1497
.annotate 'line', 1498
    $P5003 = __lowered_lex_533."rxtype"()
    set $S5001, $P5003
    iseq $I5003, $S5001, "concat"
    unless $I5003 goto if1497_else3513 
.annotate 'line', 1499
    set fb_tmp_340, __lowered_lex_533
    repr_defined $I5005, fb_tmp_340
    unless $I5005 goto if1500_else3519 
    set $P5004, fb_tmp_340[0]
    set $P5006, $P5004
    goto if1500_end3520
  if1500_else3519:
    null $P5005
    set $P5006, $P5005
  if1500_end3520:
    unless_null $P5006, vivi_15013521
    nqp_get_sc_object $P5007, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5006, $P5007
  vivi_15013521:
    $P5008 = $P5006."rxtype"()
    set $S5002, $P5008
    iseq $I5004, $S5002, "qastnode"
    set $I5008, $I5004
    unless $I5004 goto if1499_end3518 
    set fb_tmp_341, __lowered_lex_533
    repr_defined $I5007, fb_tmp_341
    unless $I5007 goto if1502_else3522 
    set $P5009, fb_tmp_341[0]
    set $P5011, $P5009
    goto if1502_end3523
  if1502_else3522:
    null $P5010
    set $P5011, $P5010
  if1502_end3523:
    unless_null $P5011, vivi_15033524
    nqp_get_sc_object $P5012, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5011, $P5012
  vivi_15033524:
    $P5013 = $P5011."subtype"()
    set $S5003, $P5013
    iseq $I5006, $S5003, "declarative"
    set $I5008, $I5006
  if1499_end3518:
    unless $I5008 goto if1498_else3515 
    set fb_tmp_342, __lowered_lex_533
    repr_defined $I5009, fb_tmp_342
    unless $I5009 goto if1504_else3525 
    set $P5014, fb_tmp_342[1]
    set $P5016, $P5014
    goto if1504_end3526
  if1504_else3525:
    null $P5015
    set $P5016, $P5015
  if1504_end3526:
    unless_null $P5016, vivi_15053527
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_15053527:
    set __lowered_lex_533, $P5016
    set $P5022, __lowered_lex_533
    goto if1498_end3516
  if1498_else3515:
.annotate 'line', 1502
    set fb_tmp_343, __lowered_lex_533
    repr_defined $I5010, fb_tmp_343
    unless $I5010 goto if1506_else3528 
    set $P5018, fb_tmp_343[0]
    set $P5020, $P5018
    goto if1506_end3529
  if1506_else3528:
    null $P5019
    set $P5020, $P5019
  if1506_end3529:
    unless_null $P5020, vivi_15073530
    nqp_get_sc_object $P5021, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5020, $P5021
  vivi_15073530:
    set __lowered_lex_533, $P5020
    set $P5022, __lowered_lex_533
  if1498_end3516:
    set $P5023, $P5022
    goto if1497_end3514
  if1497_else3513:
.annotate 'line', 1505
    die 0, .CONTROL_LOOP_LAST
    box $P5024, 0
    set $P5023, $P5024
  if1497_end3514:
    set $P5025, $P5023
    goto if1496_end3512
  if1496_else3511:
.annotate 'line', 1508
    die 0, .CONTROL_LOOP_LAST
    box $P5026, 0
    set $P5025, $P5026
  if1496_end3512:
    set $P5027, $P5025
    goto while1495_test3506 
  while1495_handlers3509:
    .get_results ($P5028)
    pop_upto_eh $P5028
    getattribute $P5030, $P5028, 'type'
    eq $P5030, .CONTROL_LOOP_NEXT, while1495_test3506
    eq $P5030, .CONTROL_LOOP_REDO, while1495_redo3508
  while1495_done3510:
    pop_eh 
    .return (__lowered_lex_533) 
.end
.HLL "nqp"
.namespace []
.sub "dont_scan" :subid("cuid_232_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1515
    .param pmc __lowered_lex_534 
    .param pmc __lowered_lex_535 
    .local pmc fb_tmp_344 
    .local pmc fb_tmp_345 
    .local pmc fb_tmp_346 
    new $P5023, 'ExceptionHandler', [.CONTROL_LOOP_NEXT;.CONTROL_LOOP_REDO;.CONTROL_LOOP_LAST]
    set_label $P5023, while1508_handlers3534
    push_eh $P5023
  while1508_test3531:
    $P5001 = __lowered_lex_535."list"()
    set $N5001, $P5001
    set $N5002, 1
    isge $I5001, $N5001, $N5002
    box $P5024, $I5001
    set $P5022, $P5024
    unless $I5001 goto while1508_done3535 
  while1508_redo3533:
.annotate 'line', 1516
    nqp_get_sc_object $P5002, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5002, __lowered_lex_535, $P5002
    unless $I5002 goto if1509_else3536 
.annotate 'line', 1517
    set fb_tmp_344, __lowered_lex_535
    repr_defined $I5004, fb_tmp_344
    unless $I5004 goto if1512_else3542 
    set $P5003, fb_tmp_344[0]
    set $P5005, $P5003
    goto if1512_end3543
  if1512_else3542:
    null $P5004
    set $P5005, $P5004
  if1512_end3543:
    unless_null $P5005, vivi_15133544
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_15133544:
    nqp_get_sc_object $P5007, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5003, $P5005, $P5007
    set $I5007, $I5003
    unless $I5003 goto if1511_end3541 
.annotate 'line', 1518
    set fb_tmp_345, __lowered_lex_535
    repr_defined $I5006, fb_tmp_345
    unless $I5006 goto if1514_else3545 
    set $P5008, fb_tmp_345[0]
    set $P5010, $P5008
    goto if1514_end3546
  if1514_else3545:
    null $P5009
    set $P5010, $P5009
  if1514_end3546:
    unless_null $P5010, vivi_15153547
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_15153547:
    $P5012 = $P5010."rxtype"()
    set $S5001, $P5012
    iseq $I5005, $S5001, "scan"
    set $I5007, $I5005
  if1511_end3541:
    unless $I5007 goto if1510_end3539 
.annotate 'line', 1519
    __lowered_lex_535."shift"()
    die 0, .CONTROL_LOOP_LAST
  if1510_end3539:
.annotate 'line', 1522
    $P5013 = __lowered_lex_535."rxtype"()
    set $S5002, $P5013
    iseq $I5008, $S5002, "concat"
    unless $I5008 goto if1516_else3548 
    set fb_tmp_346, __lowered_lex_535
    repr_defined $I5009, fb_tmp_346
    unless $I5009 goto if1517_else3550 
    set $P5014, fb_tmp_346[0]
    set $P5016, $P5014
    goto if1517_end3551
  if1517_else3550:
    null $P5015
    set $P5016, $P5015
  if1517_end3551:
    unless_null $P5016, vivi_15183552
    nqp_get_sc_object $P5017, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5016, $P5017
  vivi_15183552:
    set __lowered_lex_535, $P5016
    set $P5018, __lowered_lex_535
    goto if1516_end3549
  if1516_else3548:
.annotate 'line', 1524
    die 0, .CONTROL_LOOP_LAST
    box $P5019, 0
    set $P5018, $P5019
  if1516_end3549:
    set $P5020, $P5018
    goto if1509_end3537
  if1509_else3536:
.annotate 'line', 1527
    die 0, .CONTROL_LOOP_LAST
    box $P5021, 0
    set $P5020, $P5021
  if1509_end3537:
    set $P5022, $P5020
    goto while1508_test3531 
  while1508_handlers3534:
    .get_results ($P5023)
    pop_upto_eh $P5023
    getattribute $P5025, $P5023, 'type'
    eq $P5025, .CONTROL_LOOP_NEXT, while1508_test3531
    eq $P5025, .CONTROL_LOOP_REDO, while1508_redo3533
  while1508_done3535:
    pop_eh 
    .return ($P5022) 
.end
.HLL "nqp"
.namespace []
.sub "visit_concat" :subid("cuid_233_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1533
    .param pmc __lowered_lex_537 
    .param pmc __lowered_lex_538 
    .local pmc fb_tmp_347 
    .local pmc fb_tmp_348 
    .local pmc __lowered_lex_536 
    .local pmc fb_tmp_349 
    .local pmc fb_tmp_350 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_3553
    .lex "RETURN", $P101
.annotate 'line', 1535
    nqp_decontainerize $P5001, __lowered_lex_537
    $P5001."visit_children"(__lowered_lex_538)
    $P5002 = __lowered_lex_538."list"()
    set $N5001, $P5002
    set $N5002, 1
    iseq $I5001, $N5001, $N5002
    set $I5003, $I5001
    unless $I5001 goto if1520_end3558 
    nqp_decontainerize $P5003, __lowered_lex_537
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5005, $P5003, $P5004, "$!level", 1
    set $N5003, $P5005
    set $N5004, 1
    isge $I5002, $N5003, $N5004
    set $I5003, $I5002
  if1520_end3558:
    unless $I5003 goto if1519_else3555 
.annotate 'line', 1536
    set fb_tmp_347, __lowered_lex_538
    repr_defined $I5004, fb_tmp_347
    unless $I5004 goto if1521_else3559 
    set $P5006, fb_tmp_347[0]
    set $P5008, $P5006
    goto if1521_end3560
  if1521_else3559:
    null $P5007
    set $P5008, $P5007
  if1521_end3560:
    unless_null $P5008, vivi_15223561
    nqp_get_sc_object $P5009, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5008, $P5009
  vivi_15223561:
    $P5010 = "RETURN"($P5008)
    goto if1519_end3556
  if1519_else3555:
    set fb_tmp_348, __lowered_lex_538
    repr_defined $I5006, fb_tmp_348
    unless $I5006 goto if1526_else3568 
    set $P5011, fb_tmp_348[0]
    set $P5013, $P5011
    goto if1526_end3569
  if1526_else3568:
    null $P5012
    set $P5013, $P5012
  if1526_end3569:
    unless_null $P5013, vivi_15273570
    nqp_get_sc_object $P5014, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5013, $P5014
  vivi_15273570:
    nqp_get_sc_object $P5015, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5005, $P5013, $P5015
    set $I5008, $I5005
    unless $I5005 goto if1525_end3567 
    $P5016 = __lowered_lex_538."list"()
    set $N5005, $P5016
    set $N5006, 2
    isge $I5007, $N5005, $N5006
    set $I5008, $I5007
  if1525_end3567:
    set $I5010, $I5008
    unless $I5008 goto if1524_end3565 
    nqp_decontainerize $P5017, __lowered_lex_537
    nqp_get_sc_object $P5018, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5019, $P5017, $P5018, "$!level", 1
    set $N5007, $P5019
    set $N5008, 2
    isge $I5009, $N5007, $N5008
    set $I5010, $I5009
  if1524_end3565:
    box $P5039, $I5010
    set $P5038, $P5039
    unless $I5010 goto if1523_end3563 
    nqp_get_sc_object $P5020, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set __lowered_lex_536, $P5020
.annotate 'line', 1538
.annotate 'line', 1541
    set fb_tmp_349, __lowered_lex_538
    repr_defined $I5012, fb_tmp_349
    unless $I5012 goto if1532_else3579 
    set $P5021, fb_tmp_349[0]
    set $P5023, $P5021
    goto if1532_end3580
  if1532_else3579:
    null $P5022
    set $P5023, $P5022
  if1532_end3580:
    unless_null $P5023, vivi_15333581
    nqp_get_sc_object $P5024, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5023, $P5024
  vivi_15333581:
    $P5025 = $P5023."rxtype"()
    set $S5001, $P5025
    iseq $I5011, $S5001, "scan"
    set $I5015, $I5011
    unless $I5011 goto if1531_end3578 
.annotate 'line', 1542
    nqp_decontainerize $P5026, __lowered_lex_537
    set fb_tmp_350, __lowered_lex_538
    repr_defined $I5014, fb_tmp_350
    unless $I5014 goto if1534_else3582 
    set $P5027, fb_tmp_350[1]
    set $P5029, $P5027
    goto if1534_end3583
  if1534_else3582:
    null $P5028
    set $P5029, $P5028
  if1534_end3583:
    unless_null $P5029, vivi_15353584
    nqp_get_sc_object $P5030, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5029, $P5030
  vivi_15353584:
    $P5031 = $P5026."first_non_concat_child"($P5029)
    set __lowered_lex_536, $P5031
    nqp_get_sc_object $P5032, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5013, __lowered_lex_536, $P5032
    set $I5015, $I5013
  if1531_end3578:
    set $I5017, $I5015
    unless $I5015 goto if1530_end3576 
.annotate 'line', 1543
    $P5033 = __lowered_lex_536."rxtype"()
    set $S5002, $P5033
    iseq $I5016, $S5002, "anchor"
    set $I5017, $I5016
  if1530_end3576:
    set $I5019, $I5017
    unless $I5017 goto if1529_end3574 
    $P5034 = __lowered_lex_536."subtype"()
    set $S5003, $P5034
    iseq $I5018, $S5003, "bos"
    set $I5019, $I5018
  if1529_end3574:
    box $P5037, $I5019
    set $P5036, $P5037
    unless $I5019 goto if1528_end3572 
.annotate 'line', 1544
    $P5035 = __lowered_lex_538."shift"()
    set $P5036, $P5035
  if1528_end3572:
    set $P5038, $P5036
  if1523_end3563:
  if1519_end3556:
    goto lexotic_3554
  lexotic_3553:
    .get_results (__lowered_lex_538)
  lexotic_3554:
    .return (__lowered_lex_538) 
.end
.HLL "nqp"
.namespace []
.sub "stub_out_block" :subid("cuid_234_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1550
    .param pmc __lowered_lex_539 
    .param pmc __lowered_lex_540 
    .local pmc fb_tmp_351 
    .local pmc fb_tmp_352 
.annotate 'line', 1552
    __lowered_lex_540."shift"()
.annotate 'line', 1553
    __lowered_lex_540."shift"()
.annotate 'line', 1555
    nqp_get_sc_object $P5001, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 119
.annotate 'line', 1556
    nqp_get_sc_object $P5002, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    $P5003 = $P5002."new"("INTERNAL ERROR: Execution of block eliminated by optimizer" :named("value"))
    $P5004 = $P5001."new"($P5003, "die_s" :named("op"))
    set __lowered_lex_540[0], $P5004
.annotate 'line', 1558
    nqp_decontainerize $P5005, __lowered_lex_539
    nqp_get_sc_object $P5006, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5007, $P5005, $P5006, "@!outer", 0
    set fb_tmp_352, $P5007
    repr_defined $I5002, fb_tmp_352
    unless $I5002 goto if1537_else3587 
    nqp_decontainerize $P5009, __lowered_lex_539
    nqp_get_sc_object $P5010, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5011, $P5009, $P5010, "@!outer", 0
    set $N5001, $P5011
    set $I5004, $N5001
    sub $I5003, $I5004, 1
    set $P5008, fb_tmp_352[$I5003]
    set $P5013, $P5008
    goto if1537_end3588
  if1537_else3587:
    null $P5012
    set $P5013, $P5012
  if1537_end3588:
    unless_null $P5013, vivi_15383589
    nqp_get_sc_object $P5014, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5013, $P5014
  vivi_15383589:
    set fb_tmp_351, $P5013
    repr_defined $I5001, fb_tmp_351
    unless $I5001 goto if1536_else3585 
    set $P5015, fb_tmp_351[0]
    set $P5017, $P5015
    goto if1536_end3586
  if1536_else3585:
    null $P5016
    set $P5017, $P5016
  if1536_end3586:
    unless_null $P5017, vivi_15393590
    nqp_get_sc_object $P5018, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5017, $P5018
  vivi_15393590:
    $P5019 = $P5017."push"(__lowered_lex_540)
    .return ($P5019) 
.end
.HLL "nqp"
.namespace []
.sub "simplify_assertion" :subid("cuid_235_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1561
    .param pmc __lowered_lex_545 
    .param pmc __lowered_lex_546 
    .local pmc __lowered_lex_547 
    .local pmc fb_tmp_353 
    .local pmc fb_tmp_354 
    .local pmc fb_tmp_355 
    .local pmc fb_tmp_356 
    .local pmc fb_tmp_357 
    .local pmc __lowered_lex_543 
    .local pmc __lowered_lex_544 
    .local pmc fb_tmp_358 
    .local pmc fb_tmp_359 
    .local pmc fb_tmp_360 
    .local pmc fb_tmp_361 
    .local pmc fb_tmp_362 
    .local pmc fb_tmp_363 
    .local pmc fb_tmp_364 
    .local pmc fb_tmp_365 
    .local pmc fb_tmp_366 
    .local pmc fb_tmp_367 
    .local pmc fb_tmp_368 
    .local pmc fb_tmp_369 
    .local pmc fb_tmp_370 
    .local pmc fb_tmp_371 
    .local pmc __lowered_lex_541 
    .local pmc __lowered_lex_542 
    .local pmc fb_tmp_372 
    .local pmc fb_tmp_373 
    .local pmc fb_tmp_374 
    .local pmc fb_tmp_375 
    .local pmc fb_tmp_376 
    .local pmc fb_tmp_377 
    .local pmc fb_tmp_378 
    .local pmc fb_tmp_379 
    root_new $P101, ['parrot';'Continuation']
    set_label $P101, lexotic_3591
    .lex "RETURN", $P101
.annotate 'line', 1562
    $P5001 = __lowered_lex_546."subtype"()
    set $S5001, $P5001
    iseq $I5001, $S5001, "method"
    unless $I5001 goto if1540_end3594 
    $P5002 = "RETURN"(__lowered_lex_546)
  if1540_end3594:
    set fb_tmp_353, __lowered_lex_546
    repr_defined $I5003, fb_tmp_353
    unless $I5003 goto if1542_else3597 
    set $P5003, fb_tmp_353[0]
    set $P5005, $P5003
    goto if1542_end3598
  if1542_else3597:
    null $P5004
    set $P5005, $P5004
  if1542_end3598:
    unless_null $P5005, vivi_15433599
    nqp_get_sc_object $P5006, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5005, $P5006
  vivi_15433599:
    nqp_get_sc_object $P5007, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 23
    type_check $I5002, $P5005, $P5007
    set $I5011, $I5002
    unless $I5002 goto if1541_end3596 
    set fb_tmp_355, __lowered_lex_546
    repr_defined $I5006, fb_tmp_355
    unless $I5006 goto if1546_else3604 
    set $P5008, fb_tmp_355[0]
    set $P5010, $P5008
    goto if1546_end3605
  if1546_else3604:
    null $P5009
    set $P5010, $P5009
  if1546_end3605:
    unless_null $P5010, vivi_15473606
    nqp_get_sc_object $P5011, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5010, $P5011
  vivi_15473606:
    set fb_tmp_354, $P5010
    repr_defined $I5005, fb_tmp_354
    unless $I5005 goto if1545_else3602 
    set $P5012, fb_tmp_354[0]
    set $P5014, $P5012
    goto if1545_end3603
  if1545_else3602:
    null $P5013
    set $P5014, $P5013
  if1545_end3603:
    unless_null $P5014, vivi_15483607
    nqp_get_sc_object $P5015, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5014, $P5015
  vivi_15483607:
    nqp_get_sc_object $P5016, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    type_check $I5004, $P5014, $P5016
    set $I5010, $I5004
    if $I5004 goto unless1544_end3601 
    set fb_tmp_357, __lowered_lex_546
    repr_defined $I5009, fb_tmp_357
    unless $I5009 goto if1550_else3610 
    set $P5017, fb_tmp_357[0]
    set $P5019, $P5017
    goto if1550_end3611
  if1550_else3610:
    null $P5018
    set $P5019, $P5018
  if1550_end3611:
    unless_null $P5019, vivi_15513612
    nqp_get_sc_object $P5020, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5019, $P5020
  vivi_15513612:
    set fb_tmp_356, $P5019
    repr_defined $I5008, fb_tmp_356
    unless $I5008 goto if1549_else3608 
    set $P5021, fb_tmp_356[0]
    set $P5023, $P5021
    goto if1549_end3609
  if1549_else3608:
    null $P5022
    set $P5023, $P5022
  if1549_end3609:
    unless_null $P5023, vivi_15523613
    nqp_get_sc_object $P5024, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5023, $P5024
  vivi_15523613:
    nqp_get_sc_object $P5025, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 148
    type_check $I5007, $P5023, $P5025
    set $I5010, $I5007
  unless1544_end3601:
    set $I5011, $I5010
  if1541_end3596:
    box $P5026, $I5011
    set __lowered_lex_547, $P5026
    unless __lowered_lex_547 goto if1553_end3615 
.annotate 'line', 1565
    set fb_tmp_359, __lowered_lex_546
    repr_defined $I5014, fb_tmp_359
    unless $I5014 goto if1556_else3620 
    set $P5027, fb_tmp_359[0]
    set $P5029, $P5027
    goto if1556_end3621
  if1556_else3620:
    null $P5028
    set $P5029, $P5028
  if1556_end3621:
    unless_null $P5029, vivi_15573622
    nqp_get_sc_object $P5030, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5029, $P5030
  vivi_15573622:
    set fb_tmp_358, $P5029
    repr_defined $I5013, fb_tmp_358
    unless $I5013 goto if1555_else3618 
    set $P5031, fb_tmp_358[0]
    set $P5033, $P5031
    goto if1555_end3619
  if1555_else3618:
    null $P5032
    set $P5033, $P5032
  if1555_end3619:
    unless_null $P5033, vivi_15583623
    nqp_get_sc_object $P5034, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5033, $P5034
  vivi_15583623:
    nqp_get_sc_object $P5035, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 77
    type_check $I5012, $P5033, $P5035
    unless $I5012 goto if1554_else3616 
    set fb_tmp_361, __lowered_lex_546
    repr_defined $I5016, fb_tmp_361
    unless $I5016 goto if1560_else3626 
    set $P5036, fb_tmp_361[0]
    set $P5038, $P5036
    goto if1560_end3627
  if1560_else3626:
    null $P5037
    set $P5038, $P5037
  if1560_end3627:
    unless_null $P5038, vivi_15613628
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5038, $P5039
  vivi_15613628:
    set fb_tmp_360, $P5038
    repr_defined $I5015, fb_tmp_360
    unless $I5015 goto if1559_else3624 
    set $P5040, fb_tmp_360[1]
    set $P5042, $P5040
    goto if1559_end3625
  if1559_else3624:
    null $P5041
    set $P5042, $P5041
  if1559_end3625:
    unless_null $P5042, vivi_15623629
    nqp_get_sc_object $P5043, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5042, $P5043
  vivi_15623629:
    set $P5052, $P5042
    goto if1554_end3617
  if1554_else3616:
    set fb_tmp_363, __lowered_lex_546
    repr_defined $I5018, fb_tmp_363
    unless $I5018 goto if1564_else3632 
    set $P5044, fb_tmp_363[0]
    set $P5046, $P5044
    goto if1564_end3633
  if1564_else3632:
    null $P5045
    set $P5046, $P5045
  if1564_end3633:
    unless_null $P5046, vivi_15653634
    nqp_get_sc_object $P5047, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5046, $P5047
  vivi_15653634:
    set fb_tmp_362, $P5046
    repr_defined $I5017, fb_tmp_362
    unless $I5017 goto if1563_else3630 
    set $P5048, fb_tmp_362[0]
    set $P5050, $P5048
    goto if1563_end3631
  if1563_else3630:
    null $P5049
    set $P5050, $P5049
  if1563_end3631:
    unless_null $P5050, vivi_15663635
    nqp_get_sc_object $P5051, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5050, $P5051
  vivi_15663635:
    set $P5052, $P5050
  if1554_end3617:
    set __lowered_lex_543, $P5052
    nqp_get_sc_object $P5053, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 13
    type_check $I5020, __lowered_lex_543, $P5053
    not $I5019, $I5020
    unless $I5019 goto if1567_end3637 
.annotate 'line', 1567
    $P5054 = "RETURN"(__lowered_lex_546)
  if1567_end3637:
    set fb_tmp_364, __lowered_lex_543
    repr_defined $I5021, fb_tmp_364
    unless $I5021 goto if1568_else3638 
    set $P5055, fb_tmp_364[2]
    set $P5057, $P5055
    goto if1568_end3639
  if1568_else3638:
    null $P5056
    set $P5057, $P5056
  if1568_end3639:
    unless_null $P5057, vivi_15693640
    nqp_get_sc_object $P5058, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5057, $P5058
  vivi_15693640:
    set __lowered_lex_544, $P5057
    nqp_get_sc_object $P5059, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5023, __lowered_lex_544, $P5059
    not $I5022, $I5023
    unless $I5022 goto if1570_end3642 
.annotate 'line', 1570
    $P5060 = "RETURN"(__lowered_lex_546)
  if1570_end3642:
.annotate 'line', 1571
    nqp_decontainerize $P5061, __lowered_lex_545
    $P5061."visit_children"(__lowered_lex_544)
.annotate 'line', 1572
    $P5062 = __lowered_lex_546."subtype"()
    set $S5002, $P5062
    iseq $I5024, $S5002, "zerowidth"
    box $P5064, $I5024
    set $P5063, $P5064
    unless $I5024 goto if1574_end3650 
    set $P5063, __lowered_lex_547
  if1574_end3650:
    set $P5068, $P5063
    unless $P5063 goto if1573_end3648 
    nqp_decontainerize $P5065, __lowered_lex_545
    nqp_get_sc_object $P5066, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5067, $P5065, $P5066, "$!level", 1
    set $N5001, $P5067
    set $N5002, 2
    isge $I5025, $N5001, $N5002
    box $P5069, $I5025
    set $P5068, $P5069
  if1573_end3648:
    set $P5079, $P5068
    unless $P5068 goto if1572_end3646 
.annotate 'line', 1574
    set fb_tmp_366, __lowered_lex_546
    repr_defined $I5028, fb_tmp_366
    unless $I5028 goto if1576_else3653 
    set $P5070, fb_tmp_366[0]
    set $P5072, $P5070
    goto if1576_end3654
  if1576_else3653:
    null $P5071
    set $P5072, $P5071
  if1576_end3654:
    unless_null $P5072, vivi_15773655
    nqp_get_sc_object $P5073, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5072, $P5073
  vivi_15773655:
    set fb_tmp_365, $P5072
    repr_defined $I5027, fb_tmp_365
    unless $I5027 goto if1575_else3651 
    set $P5074, fb_tmp_365[0]
    set $P5076, $P5074
    goto if1575_end3652
  if1575_else3651:
    null $P5075
    set $P5076, $P5075
  if1575_end3652:
    unless_null $P5076, vivi_15783656
    nqp_get_sc_object $P5077, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5076, $P5077
  vivi_15783656:
    $P5078 = $P5076."value"()
    set $S5003, $P5078
    iseq $I5026, $S5003, "before"
    box $P5080, $I5026
    set $P5079, $P5080
  if1572_end3646:
    unless $P5079 goto if1571_end3644 
    set fb_tmp_367, __lowered_lex_546
    repr_defined $I5030, fb_tmp_367
    unless $I5030 goto if1584_else3667 
    set $P5081, fb_tmp_367[0]
    set $P5083, $P5081
    goto if1584_end3668
  if1584_else3667:
    null $P5082
    set $P5083, $P5082
  if1584_end3668:
    unless_null $P5083, vivi_15853669
    nqp_get_sc_object $P5084, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5083, $P5084
  vivi_15853669:
    nqp_get_sc_object $P5085, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 23
    type_check $I5029, $P5083, $P5085
    set $I5034, $I5029
    unless $I5029 goto if1583_end3666 
    set fb_tmp_369, __lowered_lex_546
    repr_defined $I5033, fb_tmp_369
    unless $I5033 goto if1587_else3672 
    set $P5086, fb_tmp_369[0]
    set $P5088, $P5086
    goto if1587_end3673
  if1587_else3672:
    null $P5087
    set $P5088, $P5087
  if1587_end3673:
    unless_null $P5088, vivi_15883674
    nqp_get_sc_object $P5089, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5088, $P5089
  vivi_15883674:
    set fb_tmp_368, $P5088
    repr_defined $I5032, fb_tmp_368
    unless $I5032 goto if1586_else3670 
    set $P5090, fb_tmp_368[1]
    set $P5092, $P5090
    goto if1586_end3671
  if1586_else3670:
    null $P5091
    set $P5092, $P5091
  if1586_end3671:
    unless_null $P5092, vivi_15893675
    nqp_get_sc_object $P5093, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5092, $P5093
  vivi_15893675:
    nqp_get_sc_object $P5094, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 148
    type_check $I5031, $P5092, $P5094
    set $I5034, $I5031
  if1583_end3666:
    set $I5036, $I5034
    unless $I5034 goto if1582_end3664 
.annotate 'line', 1576
    $P5095 = __lowered_lex_544."rxtype"()
    set $S5004, $P5095
    iseq $I5035, $S5004, "concat"
    set $I5036, $I5035
  if1582_end3664:
    set $I5039, $I5036
    unless $I5036 goto if1581_end3662 
    set fb_tmp_370, __lowered_lex_544
    repr_defined $I5038, fb_tmp_370
    unless $I5038 goto if1590_else3676 
    set $P5096, fb_tmp_370[0]
    set $P5098, $P5096
    goto if1590_end3677
  if1590_else3676:
    null $P5097
    set $P5098, $P5097
  if1590_end3677:
    unless_null $P5098, vivi_15913678
    nqp_get_sc_object $P5099, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5098, $P5099
  vivi_15913678:
    $P5100 = $P5098."rxtype"()
    set $S5005, $P5100
    iseq $I5037, $S5005, "scan"
    set $I5039, $I5037
  if1581_end3662:
    set $I5042, $I5039
    unless $I5039 goto if1580_end3660 
    set fb_tmp_371, __lowered_lex_544
    repr_defined $I5041, fb_tmp_371
    unless $I5041 goto if1592_else3679 
    set $P5101, fb_tmp_371[2]
    set $P5103, $P5101
    goto if1592_end3680
  if1592_else3679:
    null $P5102
    set $P5103, $P5102
  if1592_end3680:
    unless_null $P5103, vivi_15933681
    nqp_get_sc_object $P5104, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5103, $P5104
  vivi_15933681:
    $P5105 = $P5103."rxtype"()
    set $S5006, $P5105
    iseq $I5040, $S5006, "pass"
    set $I5042, $I5040
  if1580_end3660:
    box $P5176, $I5042
    set $P5175, $P5176
    unless $I5042 goto if1579_end3658 
    set fb_tmp_372, __lowered_lex_544
    repr_defined $I5043, fb_tmp_372
    unless $I5043 goto if1594_else3682 
    set $P5106, fb_tmp_372[1]
    set $P5108, $P5106
    goto if1594_end3683
  if1594_else3682:
    null $P5107
    set $P5108, $P5107
  if1594_end3683:
    unless_null $P5108, vivi_15953684
    nqp_get_sc_object $P5109, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5108, $P5109
  vivi_15953684:
    set __lowered_lex_541, $P5108
    box $P5110, 0
    set __lowered_lex_542, $P5110
.annotate 'line', 1579
    $P5111 = __lowered_lex_541."rxtype"()
    set $S5007, $P5111
    iseq $I5044, $S5007, "literal"
    set $I5046, $I5044
    unless $I5044 goto if1598_end3690 
    $P5112 = __lowered_lex_541."rxtype"()
    set $S5008, $P5112
    isne $I5045, $S5008, "ignorecase"
    set $I5046, $I5045
  if1598_end3690:
    set $I5048, $I5046
    unless $I5046 goto if1597_end3688 
    $P5113 = __lowered_lex_546."negate"()
    isfalse $I5047, $P5113
    set $I5048, $I5047
  if1597_end3688:
    unless $I5048 goto if1596_else3685 
.annotate 'line', 1580
    nqp_get_sc_object $P5114, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5115 = __lowered_lex_541."node"()
.annotate 'line', 1581
    $P5116 = __lowered_lex_541."negate"()
    set fb_tmp_373, __lowered_lex_541
    repr_defined $I5049, fb_tmp_373
    unless $I5049 goto if1599_else3691 
    set $P5117, fb_tmp_373[0]
    set $P5119, $P5117
    goto if1599_end3692
  if1599_else3691:
    null $P5118
    set $P5119, $P5118
  if1599_end3692:
    unless_null $P5119, vivi_16003693
    nqp_get_sc_object $P5120, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5119, $P5120
  vivi_16003693:
    $P5121 = $P5114."new"($P5119, "literal" :named("rxtype"), "zerowidth" :named("subtype"), $P5115 :named("node"), $P5116 :named("negate"))
    set __lowered_lex_542, $P5121
    goto if1596_end3686
  if1596_else3685:
.annotate 'line', 1583
    $P5122 = __lowered_lex_541."rxtype"()
    set $S5009, $P5122
    iseq $I5050, $S5009, "enumcharlist"
    set $I5052, $I5050
    unless $I5050 goto if1602_end3697 
    $P5123 = __lowered_lex_541."rxtype"()
    set $S5010, $P5123
    isne $I5051, $S5010, "ignorecase"
    set $I5052, $I5051
  if1602_end3697:
    unless $I5052 goto if1601_else3694 
.annotate 'line', 1584
    nqp_get_sc_object $P5124, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5125 = __lowered_lex_541."node"()
.annotate 'line', 1585
    $P5126 = __lowered_lex_546."negate"()
    set $I5054, $P5126
    $P5127 = __lowered_lex_541."negate"()
    set $I5055, $P5127
    bxor $I5053, $I5054, $I5055
    set fb_tmp_374, __lowered_lex_541
    repr_defined $I5056, fb_tmp_374
    unless $I5056 goto if1603_else3698 
    set $P5128, fb_tmp_374[0]
    set $P5130, $P5128
    goto if1603_end3699
  if1603_else3698:
    null $P5129
    set $P5130, $P5129
  if1603_end3699:
    unless_null $P5130, vivi_16043700
    nqp_get_sc_object $P5131, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5130, $P5131
  vivi_16043700:
    $P5132 = $P5124."new"($P5130, "enumcharlist" :named("rxtype"), "zerowidth" :named("subtype"), $P5125 :named("node"), $I5053 :named("negate"))
    set __lowered_lex_542, $P5132
    set $P5164, __lowered_lex_542
    goto if1601_end3695
  if1601_else3694:
.annotate 'line', 1587
    $P5133 = __lowered_lex_541."rxtype"()
    set $S5011, $P5133
    iseq $I5057, $S5011, "charrange"
    set $I5059, $I5057
    unless $I5057 goto if1606_end3704 
    $P5134 = __lowered_lex_541."rxtype"()
    set $S5012, $P5134
    isne $I5058, $S5012, "ignorecase"
    set $I5059, $I5058
  if1606_end3704:
    unless $I5059 goto if1605_else3701 
.annotate 'line', 1588
    nqp_get_sc_object $P5135, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5136 = __lowered_lex_541."node"()
.annotate 'line', 1589
    $P5137 = __lowered_lex_546."negate"()
    set $I5061, $P5137
    $P5138 = __lowered_lex_541."negate"()
    set $I5062, $P5138
    bxor $I5060, $I5061, $I5062
    set fb_tmp_375, __lowered_lex_541
    repr_defined $I5063, fb_tmp_375
    unless $I5063 goto if1607_else3705 
    set $P5139, fb_tmp_375[0]
    set $P5141, $P5139
    goto if1607_end3706
  if1607_else3705:
    null $P5140
    set $P5141, $P5140
  if1607_end3706:
    unless_null $P5141, vivi_16083707
    nqp_get_sc_object $P5142, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5141, $P5142
  vivi_16083707:
    set fb_tmp_376, __lowered_lex_541
    repr_defined $I5064, fb_tmp_376
    unless $I5064 goto if1609_else3708 
    set $P5143, fb_tmp_376[1]
    set $P5145, $P5143
    goto if1609_end3709
  if1609_else3708:
    null $P5144
    set $P5145, $P5144
  if1609_end3709:
    unless_null $P5145, vivi_16103710
    nqp_get_sc_object $P5146, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5145, $P5146
  vivi_16103710:
    set fb_tmp_377, __lowered_lex_541
    repr_defined $I5065, fb_tmp_377
    unless $I5065 goto if1611_else3711 
    set $P5147, fb_tmp_377[2]
    set $P5149, $P5147
    goto if1611_end3712
  if1611_else3711:
    null $P5148
    set $P5149, $P5148
  if1611_end3712:
    unless_null $P5149, vivi_16123713
    nqp_get_sc_object $P5150, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5149, $P5150
  vivi_16123713:
    $P5151 = $P5135."new"($P5141, $P5145, $P5149, "charrange" :named("rxtype"), "zerowidth" :named("subtype"), $P5136 :named("node"), $I5060 :named("negate"))
    set __lowered_lex_542, $P5151
    set $P5163, __lowered_lex_542
    goto if1605_end3702
  if1605_else3701:
.annotate 'line', 1593
    $P5152 = __lowered_lex_541."rxtype"()
    set $S5013, $P5152
    iseq $I5066, $S5013, "cclass"
    set $I5068, $I5066
    unless $I5066 goto if1614_end3717 
    $P5153 = __lowered_lex_541."rxtype"()
    set $S5014, $P5153
    isne $I5067, $S5014, "ignorecase"
    set $I5068, $I5067
  if1614_end3717:
    unless $I5068 goto if1613_else3714 
.annotate 'line', 1594
    nqp_get_sc_object $P5154, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    $P5155 = __lowered_lex_541."node"()
.annotate 'line', 1595
    $P5156 = __lowered_lex_546."negate"()
    set $I5070, $P5156
    $P5157 = __lowered_lex_541."negate"()
    set $I5071, $P5157
    bxor $I5069, $I5070, $I5071
    $P5158 = __lowered_lex_541."name"()
    $P5159 = $P5154."new"("cclass" :named("rxtype"), "zerowidth" :named("subtype"), $P5155 :named("node"), $I5069 :named("negate"), $P5158 :named("name"))
    set __lowered_lex_542, $P5159
    set $P5162, __lowered_lex_542
    goto if1613_end3715
  if1613_else3714:
.annotate 'line', 1596
.annotate 'line', 1598
    nqp_decontainerize $P5160, __lowered_lex_545
    $P5161 = $P5160."dont_scan"(__lowered_lex_544)
    set $P5162, $P5161
  if1613_end3715:
    set $P5163, $P5162
  if1605_end3702:
    set $P5164, $P5163
  if1601_end3695:
  if1596_end3686:
    set $P5174, __lowered_lex_542
    unless __lowered_lex_542 goto if1615_end3719 
.annotate 'line', 1600
.annotate 'line', 1601
    nqp_decontainerize $P5165, __lowered_lex_545
    set fb_tmp_379, __lowered_lex_546
    repr_defined $I5073, fb_tmp_379
    unless $I5073 goto if1617_else3722 
    set $P5166, fb_tmp_379[0]
    set $P5168, $P5166
    goto if1617_end3723
  if1617_else3722:
    null $P5167
    set $P5168, $P5167
  if1617_end3723:
    unless_null $P5168, vivi_16183724
    nqp_get_sc_object $P5169, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5168, $P5169
  vivi_16183724:
    set fb_tmp_378, $P5168
    repr_defined $I5072, fb_tmp_378
    unless $I5072 goto if1616_else3720 
    set $P5170, fb_tmp_378[1]
    set $P5172, $P5170
    goto if1616_end3721
  if1616_else3720:
    null $P5171
    set $P5172, $P5171
  if1616_end3721:
    unless_null $P5172, vivi_16193725
    nqp_get_sc_object $P5173, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5172, $P5173
  vivi_16193725:
    $P5165."stub_out_block"($P5172)
    set __lowered_lex_546, __lowered_lex_542
    set $P5174, __lowered_lex_546
  if1615_end3719:
    set $P5175, $P5174
  if1579_end3658:
  if1571_end3644:
.annotate 'line', 1607
    $P5177 = __lowered_lex_546."subtype"()
    set $S5015, $P5177
    iseq $I5074, $S5015, "capture"
    box $P5179, $I5074
    set $P5178, $P5179
    unless $I5074 goto if1622_end3731 
    set $P5178, __lowered_lex_547
  if1622_end3731:
    set $P5183, $P5178
    unless $P5178 goto if1621_end3729 
    nqp_decontainerize $P5180, __lowered_lex_545
    nqp_get_sc_object $P5181, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5182, $P5180, $P5181, "$!level", 1
    set $N5003, $P5182
    set $N5004, 1
    isge $I5075, $N5003, $N5004
    box $P5184, $I5075
    set $P5183, $P5184
  if1621_end3729:
    set $P5187, $P5183
    unless $P5183 goto if1620_end3727 
.annotate 'line', 1608
    nqp_decontainerize $P5185, __lowered_lex_545
    $P5186 = $P5185."dont_scan"(__lowered_lex_544)
    set $P5187, $P5186
  if1620_end3727:
  if1553_end3615:
    goto lexotic_3592
  lexotic_3591:
    .get_results (__lowered_lex_546)
  lexotic_3592:
    .return (__lowered_lex_546) 
.end
.HLL "nqp"
.namespace []
.sub "visit_children" :subid("cuid_236_1431289913.64791") :anon :lex :outer("cuid_246_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
.annotate 'line', 1614
    .param pmc __lowered_lex_551 
    .param pmc __lowered_lex_552 
    .local int __lowered_lex_553 
    .local int __lowered_lex_550 
    .local pmc __lowered_lex_549 
    .local pmc fb_tmp_380 
    .local pmc __lowered_lex_548 
    .local pmc fb_tmp_381 
    .local pmc fb_tmp_382 
    .local pmc fb_tmp_383 
    set __lowered_lex_553, 0
    nqp_isstr $I5001, __lowered_lex_552
    box $P5086, $I5001
    set $P5085, $P5086
    if $I5001 goto unless1623_end3733 
.annotate 'line', 1616
    $P5001 = __lowered_lex_552."list"()
    elements $I5002, $P5001
    set __lowered_lex_550, $I5002
  while1624_test3734:
    islt $I5003, __lowered_lex_553, __lowered_lex_550
    box $P5083, $I5003
    set $P5082, $P5083
    unless $I5003 goto while1624_done3738 
  while1624_redo3736:
.annotate 'line', 1618
    set fb_tmp_380, __lowered_lex_552
    repr_defined $I5004, fb_tmp_380
    unless $I5004 goto if1625_else3739 
    set $P5002, fb_tmp_380[__lowered_lex_553]
    set $P5004, $P5002
    goto if1625_end3740
  if1625_else3739:
    null $P5003
    set $P5004, $P5003
  if1625_end3740:
    unless_null $P5004, vivi_16263741
    nqp_get_sc_object $P5005, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5004, $P5005
  vivi_16263741:
    set __lowered_lex_549, $P5004
    nqp_get_sc_object $P5006, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 51
    type_check $I5005, __lowered_lex_549, $P5006
    unless $I5005 goto if1627_else3742 
.annotate 'line', 1620
.annotate 'line', 1621
    $P5007 = __lowered_lex_549."rxtype"()
    set __lowered_lex_548, $P5007
    set $S5001, __lowered_lex_548
    iseq $I5006, $S5001, "concat"
    unless $I5006 goto if1628_else3744 
.annotate 'line', 1622
.annotate 'line', 1623
    nqp_decontainerize $P5008, __lowered_lex_551
    $P5009 = $P5008."visit_concat"(__lowered_lex_549)
    set __lowered_lex_552[__lowered_lex_553], $P5009
    set $P5069, $P5009
    goto if1628_end3745
  if1628_else3744:
    set $S5002, __lowered_lex_548
    iseq $I5007, $S5002, "literal"
    unless $I5007 goto if1629_else3746 
.annotate 'line', 1624
    nqp_get_sc_object $P5010, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5068, $P5010
    goto if1629_end3747
  if1629_else3746:
    set $S5003, __lowered_lex_548
    iseq $I5008, $S5003, "quant"
    unless $I5008 goto if1630_else3748 
.annotate 'line', 1625
.annotate 'line', 1626
    nqp_decontainerize $P5011, __lowered_lex_551
    $P5012 = $P5011."visit_children"(__lowered_lex_549)
    set $P5067, $P5012
    goto if1630_end3749
  if1630_else3748:
    set $S5004, __lowered_lex_548
    iseq $I5009, $S5004, "subrule"
    unless $I5009 goto if1631_else3750 
.annotate 'line', 1627
    nqp_decontainerize $P5013, __lowered_lex_551
    nqp_get_sc_object $P5014, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5015, $P5013, $P5014, "$!main_opt", 2
    unless $P5015 goto if1632_end3753 
.annotate 'line', 1628
    set fb_tmp_381, __lowered_lex_552
    repr_defined $I5010, fb_tmp_381
    unless $I5010 goto if1633_else3754 
    set $P5019, fb_tmp_381[__lowered_lex_553]
    set $P5021, $P5019
    goto if1633_end3755
  if1633_else3754:
    null $P5020
    set $P5021, $P5020
  if1633_end3755:
    unless_null $P5021, vivi_16343756
    nqp_get_sc_object $P5022, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5021, $P5022
  vivi_16343756:
    nqp_decontainerize $P5016, __lowered_lex_551
    nqp_get_sc_object $P5017, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5018, $P5016, $P5017, "$!main_opt", 2
    $P5023 = $P5018($P5021)
    set __lowered_lex_552[__lowered_lex_553], $P5023
  if1632_end3753:
.annotate 'line', 1629
    nqp_decontainerize $P5024, __lowered_lex_551
    $P5025 = $P5024."simplify_assertion"(__lowered_lex_549)
    set __lowered_lex_552[__lowered_lex_553], $P5025
    set $P5066, $P5025
    goto if1631_end3751
  if1631_else3750:
    set $S5005, __lowered_lex_548
    iseq $I5011, $S5005, "qastnode"
    unless $I5011 goto if1635_else3757 
.annotate 'line', 1630
    nqp_decontainerize $P5026, __lowered_lex_551
    nqp_get_sc_object $P5027, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5028, $P5026, $P5027, "$!main_opt", 2
    set $P5037, $P5028
    unless $P5028 goto if1636_end3760 
.annotate 'line', 1631
    set fb_tmp_382, __lowered_lex_552
    repr_defined $I5012, fb_tmp_382
    unless $I5012 goto if1637_else3761 
    set $P5032, fb_tmp_382[__lowered_lex_553]
    set $P5034, $P5032
    goto if1637_end3762
  if1637_else3761:
    null $P5033
    set $P5034, $P5033
  if1637_end3762:
    unless_null $P5034, vivi_16383763
    nqp_get_sc_object $P5035, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5034, $P5035
  vivi_16383763:
    nqp_decontainerize $P5029, __lowered_lex_551
    nqp_get_sc_object $P5030, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5031, $P5029, $P5030, "$!main_opt", 2
    $P5036 = $P5031($P5034)
    set __lowered_lex_552[__lowered_lex_553], $P5036
    set $P5037, $P5036
  if1636_end3760:
    set $P5065, $P5037
    goto if1635_end3758
  if1635_else3757:
    set $S5006, __lowered_lex_548
    iseq $I5013, $S5006, "anchor"
    unless $I5013 goto if1639_else3764 
.annotate 'line', 1632
    nqp_get_sc_object $P5038, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5064, $P5038
    goto if1639_end3765
  if1639_else3764:
    set $S5007, __lowered_lex_548
    iseq $I5014, $S5007, "enumcharlist"
    unless $I5014 goto if1640_else3766 
.annotate 'line', 1633
    nqp_get_sc_object $P5039, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5063, $P5039
    goto if1640_end3767
  if1640_else3766:
    set $S5008, __lowered_lex_548
    iseq $I5015, $S5008, "cclass"
    unless $I5015 goto if1641_else3768 
.annotate 'line', 1634
    nqp_get_sc_object $P5040, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5062, $P5040
    goto if1641_end3769
  if1641_else3768:
    set $S5009, __lowered_lex_548
    iseq $I5016, $S5009, "scan"
    unless $I5016 goto if1642_else3770 
.annotate 'line', 1635
    nqp_get_sc_object $P5041, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5061, $P5041
    goto if1642_end3771
  if1642_else3770:
    set $S5010, __lowered_lex_548
    iseq $I5017, $S5010, "charrange"
    unless $I5017 goto if1643_else3772 
.annotate 'line', 1636
    nqp_get_sc_object $P5042, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5060, $P5042
    goto if1643_end3773
  if1643_else3772:
    set $S5011, __lowered_lex_548
    iseq $I5018, $S5011, "dynquant"
    unless $I5018 goto if1644_else3774 
.annotate 'line', 1637
    nqp_decontainerize $P5043, __lowered_lex_551
    nqp_get_sc_object $P5044, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5045, $P5043, $P5044, "$!main_opt", 2
    set $P5054, $P5045
    unless $P5045 goto if1645_end3777 
.annotate 'line', 1638
    set fb_tmp_383, __lowered_lex_552
    repr_defined $I5019, fb_tmp_383
    unless $I5019 goto if1646_else3778 
    set $P5049, fb_tmp_383[__lowered_lex_553]
    set $P5051, $P5049
    goto if1646_end3779
  if1646_else3778:
    null $P5050
    set $P5051, $P5050
  if1646_end3779:
    unless_null $P5051, vivi_16473780
    nqp_get_sc_object $P5052, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5051, $P5052
  vivi_16473780:
    nqp_decontainerize $P5046, __lowered_lex_551
    nqp_get_sc_object $P5047, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5048, $P5046, $P5047, "$!main_opt", 2
    $P5053 = $P5048($P5051)
    set __lowered_lex_552[__lowered_lex_553], $P5053
    set $P5054, $P5053
  if1645_end3777:
    set $P5059, $P5054
    goto if1644_end3775
  if1644_else3774:
    set $S5012, __lowered_lex_548
    iseq $I5020, $S5012, "pass"
    set $I5022, $I5020
    if $I5020 goto unless1649_end3784 
    set $S5013, __lowered_lex_548
    iseq $I5021, $S5013, "fail"
    set $I5022, $I5021
  unless1649_end3784:
    unless $I5022 goto if1648_else3781 
.annotate 'line', 1639
    nqp_get_sc_object $P5055, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561", 26
    set $P5058, $P5055
    goto if1648_end3782
  if1648_else3781:
.annotate 'line', 1640
.annotate 'line', 1642
    nqp_decontainerize $P5056, __lowered_lex_551
    $P5057 = $P5056."visit_children"(__lowered_lex_549)
    set $P5058, $P5057
  if1648_end3782:
    set $P5059, $P5058
  if1644_end3775:
    set $P5060, $P5059
  if1643_end3773:
    set $P5061, $P5060
  if1642_end3771:
    set $P5062, $P5061
  if1641_end3769:
    set $P5063, $P5062
  if1640_end3767:
    set $P5064, $P5063
  if1639_end3765:
    set $P5065, $P5064
  if1635_end3758:
    set $P5066, $P5065
  if1631_end3751:
    set $P5067, $P5066
  if1630_end3749:
    set $P5068, $P5067
  if1629_end3747:
    set $P5069, $P5068
  if1628_end3745:
    goto if1627_end3743
  if1627_else3742:
    nqp_get_sc_object $P5070, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207", 148
    type_check $I5023, __lowered_lex_549, $P5070
    unless $I5023 goto if1650_else3785 
.annotate 'line', 1644
.annotate 'line', 1645
    nqp_decontainerize $P5071, __lowered_lex_551
    nqp_get_sc_object $P5072, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5073, $P5071, $P5072, "@!outer", 0
    $P5073."push"(__lowered_lex_549)
.annotate 'line', 1646
    nqp_decontainerize $P5074, __lowered_lex_551
    $P5074."visit_children"(__lowered_lex_549)
.annotate 'line', 1647
    nqp_decontainerize $P5075, __lowered_lex_551
    nqp_get_sc_object $P5076, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    repr_get_attr_obj $P5077, $P5075, $P5076, "@!outer", 0
    $P5078 = $P5077."pop"()
    set $P5081, $P5078
    goto if1650_end3786
  if1650_else3785:
.annotate 'line', 1649
.annotate 'line', 1650
    nqp_decontainerize $P5079, __lowered_lex_551
    $P5080 = $P5079."visit_children"(__lowered_lex_549)
    set $P5081, $P5080
  if1650_end3786:
  if1627_end3743:
    add $I5024, __lowered_lex_553, 1
    set __lowered_lex_553, $I5024
    box $P5084, __lowered_lex_553
    set $P5082, $P5084
    goto while1624_test3734 
  while1624_done3738:
    set $P5085, $P5082
  unless1623_end3733:
    .return ($P5085) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_248_1431289913.64791") :load :init
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .const 'Sub' $P5473 = 'cuid_247_1431289913.64791' 
    capture_lex $P5473 
    .local pmc cur_sc 
    .local pmc conflicts 
    nqp_dynop_setup 
    nqp_bigint_setup 
    getinterp $P5001
    get_class $P5002, "LexPad"
    get_class $P5003, "NQPLexPad"
    $P5004 = $P5001."hll_map"($P5002, $P5003)
    load_bytecode "ModuleLoader.pbc"
    .const 'Sub' $P5001 = "cuid_237_1431289913.64791" 
    get_hll_global $P5002, "ModuleLoader"
    $P5003 = $P5002."load_setting"("NQPCORE")
    $P5004 = $P5001."set_outer_ctx"($P5003)
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QRegex")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("NQPHLL")
    load_bytecode "ModuleLoader.pbc"
    get_hll_global $P5001, "ModuleLoader"
    $P5001."load_module"("QAST")
    nqp_create_sc $P5001, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087"
    set cur_sc, $P5001
    $P5002 = cur_sc."set_description"("gen/parrot/stage2/NQPP6QRegex.nqp")
    new $P5003, 'QRPA'
    set conflicts, $P5003
    new $P5004, 'ResizableStringArray'
    assign $P5004, 519
    assign $P5004, 0
    null $S5001
    push $P5004, $S5001
    push $P5004, "P6opaque"
    push $P5004, "QAST"
    push $P5004, "QRegex"
    push $P5004, "NQPCursorRole"
    push $P5004, "04F6DF32596F46780CCB691981DC37EC9DB1CC6C-1431289885.6999"
    push $P5004, "gen/parrot/stage2/QRegex.nqp"
    push $P5004, "NQPMatch"
    push $P5004, "NQPCursor"
    push $P5004, "NQPRegexMethod"
    push $P5004, "NQPRegex"
    push $P5004, "HLL"
    push $P5004, "PIRT"
    push $P5004, "DEFAULT"
    push $P5004, "CREATE"
    push $P5004, "A6B3036E2CE42BAC0C4A2DA57E9821AFDE4F8463-1431289881.08561"
    push $P5004, "gen/parrot/stage2/NQPCORE.setting"
    push $P5004, "bless"
    push $P5004, "BUILDALL"
    push $P5004, "new"
    push $P5004, "Str"
    push $P5004, "Numeric"
    push $P5004, "Int"
    push $P5004, "defined"
    push $P5004, "ACCEPTS"
    push $P5004, "isa"
    push $P5004, "BUILD"
    push $P5004, "D699855F0B99D418906D23C314640A779281D00E-1431289891.9493"
    push $P5004, "gen/parrot/stage2/NQPHLL.nqp"
    push $P5004, "add_object"
    push $P5004, "add_root_code_ref"
    push $P5004, "update_root_code_ref"
    push $P5004, "is_precompilation_mode"
    push $P5004, "add_load_dependency_task"
    push $P5004, "add_fixup_task"
    push $P5004, "sc"
    push $P5004, "handle"
    push $P5004, "code_ref_blocks"
    push $P5004, "load_dependency_tasks"
    push $P5004, "fixup_tasks"
    push $P5004, "create_code"
    push $P5004, "$!sc"
    push $P5004, "$!handle"
    push $P5004, "$!precomp_mode"
    push $P5004, "$!num_code_refs"
    push $P5004, "$!code_ref_blocks"
    push $P5004, "@!load_dependency_tasks"
    push $P5004, "@!fixup_tasks"
    push $P5004, "MATCH"
    push $P5004, "Bool"
    push $P5004, "parse"
    push $P5004, "!INTERPOLATE"
    push $P5004, "!INTERPOLATE_REGEX"
    push $P5004, "orig"
    push $P5004, "target"
    push $P5004, "from"
    push $P5004, "pos"
    push $P5004, "prune"
    push $P5004, "!APPEND_TO_ORIG"
    push $P5004, "CAPHASH"
    push $P5004, "!cursor_init"
    push $P5004, "!cursor_start_all"
    push $P5004, "!cursor_start"
    push $P5004, "!cursor_start_cur"
    push $P5004, "!cursor_start_fail"
    push $P5004, "!cursor_start_subcapture"
    push $P5004, "!cursor_capture"
    push $P5004, "!cursor_push_cstack"
    push $P5004, "!cursor_pass"
    push $P5004, "!cursor_fail"
    push $P5004, "!cursor_pos"
    push $P5004, "!cursor_next"
    push $P5004, "!cursor_more"
    push $P5004, "!reduce"
    push $P5004, "!reduce_with_match"
    push $P5004, "!shared"
    push $P5004, "!protoregex"
    push $P5004, "!protoregex_nfa"
    push $P5004, "!protoregex_table"
    push $P5004, "!alt"
    push $P5004, "!alt_nfa"
    push $P5004, "!precompute_nfas"
    push $P5004, "!dba"
    push $P5004, "!highwater"
    push $P5004, "!highexpect"
    push $P5004, "!fresh_highexpect"
    push $P5004, "!set_highexpect"
    push $P5004, "!clear_highwater"
    push $P5004, "!BACKREF"
    push $P5004, "!LITERAL"
    push $P5004, "!DYNQUANT_LIMITS"
    push $P5004, "!DELEGATE_ACCEPTS"
    push $P5004, "at"
    push $P5004, "before"
    push $P5004, "after"
    push $P5004, "ws"
    push $P5004, "ww"
    push $P5004, "wb"
    push $P5004, "ident"
    push $P5004, "alpha"
    push $P5004, "alnum"
    push $P5004, "upper"
    push $P5004, "lower"
    push $P5004, "digit"
    push $P5004, "xdigit"
    push $P5004, "space"
    push $P5004, "blank"
    push $P5004, "cntrl"
    push $P5004, "punct"
    push $P5004, "FAILGOAL"
    push $P5004, "throw_unrecog_backslash_seq"
    push $P5004, "termish"
    push $P5004, "term"
    push $P5004, "infix"
    push $P5004, "prefix"
    push $P5004, "postfix"
    push $P5004, "circumfix"
    push $P5004, "postcircumfix"
    push $P5004, "term:sym<circumfix>"
    push $P5004, "infixish"
    push $P5004, "prefixish"
    push $P5004, "postfixish"
    push $P5004, "nullterm"
    push $P5004, "nullterm_alt"
    push $P5004, "nulltermish"
    push $P5004, "quote_delimited"
    push $P5004, "quote_atom"
    push $P5004, "decint"
    push $P5004, "decints"
    push $P5004, "hexint"
    push $P5004, "hexints"
    push $P5004, "octint"
    push $P5004, "octints"
    push $P5004, "binint"
    push $P5004, "binints"
    push $P5004, "integer"
    push $P5004, "dec_number"
    push $P5004, "escale"
    push $P5004, "quote_escape"
    push $P5004, "quote_escape:sym<backslash>"
    push $P5004, "quote_escape:sym<stopper>"
    push $P5004, "quote_escape:sym<bs>"
    push $P5004, "quote_escape:sym<nl>"
    push $P5004, "quote_escape:sym<cr>"
    push $P5004, "quote_escape:sym<tab>"
    push $P5004, "quote_escape:sym<ff>"
    push $P5004, "quote_escape:sym<esc>"
    push $P5004, "quote_escape:sym<hex>"
    push $P5004, "quote_escape:sym<oct>"
    push $P5004, "quote_escape:sym<chr>"
    push $P5004, "quote_escape:sym<0>"
    push $P5004, "quote_escape:sym<misc>"
    push $P5004, "charname"
    push $P5004, "charnames"
    push $P5004, "charspec"
    push $P5004, "O"
    push $P5004, "panic"
    push $P5004, "peek_delimiters"
    push $P5004, "quote_EXPR"
    push $P5004, "quotemod_check"
    push $P5004, "starter"
    push $P5004, "stopper"
    push $P5004, "split_words"
    push $P5004, "EXPR"
    push $P5004, "EXPR_reduce"
    push $P5004, "EXPR_nonassoc"
    push $P5004, "ternary"
    push $P5004, "MARKER"
    push $P5004, "MARKED"
    push $P5004, "LANG"
    push $P5004, "obs"
    push $P5004, "throw_unrecognized_metachar"
    push $P5004, "throw_malformed_range"
    push $P5004, "throw_confused"
    push $P5004, "throw_unspace"
    push $P5004, "throw_regex_not_terminated"
    push $P5004, "throw_spaces_in_bare_range"
    push $P5004, "throw_solitary_quantifier"
    push $P5004, "throw_solitary_backtrack_control"
    push $P5004, "throw_null_pattern"
    push $P5004, "worry"
    push $P5004, "normspace"
    push $P5004, "identifier"
    push $P5004, "arg"
    push $P5004, "arglist"
    push $P5004, "TOP"
    push $P5004, "nibbler"
    push $P5004, "infixstopper"
    push $P5004, "rxstopper"
    push $P5004, "termseq"
    push $P5004, "termaltseq"
    push $P5004, "termconjseq"
    push $P5004, "termalt"
    push $P5004, "termconj"
    push $P5004, "SIGOK"
    push $P5004, "quantified_atom"
    push $P5004, "separator"
    push $P5004, "atom"
    push $P5004, "sigmaybe"
    push $P5004, "sigmaybe:sym<normspace>"
    push $P5004, "sigmaybe:sym<sigwhite>"
    push $P5004, "quantifier"
    push $P5004, "quantifier:sym<%>"
    push $P5004, "quantifier:sym<*>"
    push $P5004, "quantifier:sym<+>"
    push $P5004, "quantifier:sym<?>"
    push $P5004, "quantifier:sym<{N,M}>"
    push $P5004, "quantifier:sym<**>"
    push $P5004, "codeblock"
    push $P5004, "backmod"
    push $P5004, "metachar"
    push $P5004, "metachar:sym<[ ]>"
    push $P5004, "metachar:sym<( )>"
    push $P5004, "metachar:sym<'>"
    push $P5004, "metachar:sym<\">"
    push $P5004, "metachar:sym<.>"
    push $P5004, "metachar:sym<^>"
    push $P5004, "metachar:sym<^^>"
    push $P5004, "metachar:sym<$>"
    push $P5004, "metachar:sym<$$>"
    push $P5004, "metachar:sym<:::>"
    push $P5004, "metachar:sym<::>"
    push $P5004, "metachar:sym<lwb>"
    push $P5004, "metachar:sym<rwb>"
    push $P5004, "metachar:sym<from>"
    push $P5004, "metachar:sym<to>"
    push $P5004, "metachar:sym<bs>"
    push $P5004, "metachar:sym<mod>"
    push $P5004, "metachar:sym<quantifier>"
    push $P5004, "metachar:sym<~>"
    push $P5004, "metachar:sym<{*}>"
    push $P5004, "metachar:sym<assert>"
    push $P5004, "sigil"
    push $P5004, "metachar:sym<var>"
    push $P5004, "metachar:sym<:>"
    push $P5004, "backslash"
    push $P5004, "backslash:sym<s>"
    push $P5004, "backslash:sym<b>"
    push $P5004, "backslash:sym<e>"
    push $P5004, "backslash:sym<f>"
    push $P5004, "backslash:sym<h>"
    push $P5004, "backslash:sym<r>"
    push $P5004, "backslash:sym<t>"
    push $P5004, "backslash:sym<v>"
    push $P5004, "backslash:sym<o>"
    push $P5004, "backslash:sym<x>"
    push $P5004, "backslash:sym<c>"
    push $P5004, "backslash:sym<0>"
    push $P5004, "backslash:sym<A>"
    push $P5004, "backslash:sym<z>"
    push $P5004, "backslash:sym<Z>"
    push $P5004, "backslash:sym<Q>"
    push $P5004, "backslash:sym<unrec>"
    push $P5004, "backslash:sym<unsp>"
    push $P5004, "backslash:sym<misc>"
    push $P5004, "cclass_backslash"
    push $P5004, "cclass_backslash:sym<s>"
    push $P5004, "cclass_backslash:sym<b>"
    push $P5004, "cclass_backslash:sym<e>"
    push $P5004, "cclass_backslash:sym<f>"
    push $P5004, "cclass_backslash:sym<h>"
    push $P5004, "cclass_backslash:sym<n>"
    push $P5004, "cclass_backslash:sym<r>"
    push $P5004, "cclass_backslash:sym<t>"
    push $P5004, "cclass_backslash:sym<v>"
    push $P5004, "cclass_backslash:sym<o>"
    push $P5004, "cclass_backslash:sym<x>"
    push $P5004, "cclass_backslash:sym<c>"
    push $P5004, "cclass_backslash:sym<any>"
    push $P5004, "assertion"
    push $P5004, "assertion:sym<?>"
    push $P5004, "assertion:sym<!>"
    push $P5004, "assertion:sym<|>"
    push $P5004, "assertion:sym<method>"
    push $P5004, "assertion:sym<name>"
    push $P5004, "assertion:sym<[>"
    push $P5004, "cclass_elem"
    push $P5004, "mod_internal"
    push $P5004, "mod_ident"
    push $P5004, "mod_ident:sym<ignorecase>"
    push $P5004, "mod_ident:sym<ignoremark>"
    push $P5004, "mod_ident:sym<ratchet>"
    push $P5004, "mod_ident:sym<sigspace>"
    push $P5004, "mod_ident:sym<dba>"
    push $P5004, "mod_ident:sym<oops>"
    push $P5004, "$!shared"
    push $P5004, "$!from"
    push $P5004, "$!pos"
    push $P5004, "$!match"
    push $P5004, "$!name"
    push $P5004, "$!bstack"
    push $P5004, "$!cstack"
    push $P5004, "$!regexsub"
    push $P5004, "$!restart"
    push $P5004, "string_to_int"
    push $P5004, "ints_to_string"
    push $P5004, "CTXSAVE"
    push $P5004, "SET_BLOCK_OUTER_CTX"
    push $P5004, "qbuildsub"
    push $P5004, "alt_nfas"
    push $P5004, "subrule_alias"
    push $P5004, "offset_ast"
    push $P5004, "flip_ast"
    push $P5004, "create_regex_code_object"
    push $P5004, "store_regex_caps"
    push $P5004, "store_regex_nfa"
    push $P5004, "store_regex_alt_nfa"
    push $P5004, "backend"
    push $P5004, "language"
    push $P5004, "compiler"
    push $P5004, "config"
    push $P5004, "autoprint"
    push $P5004, "readline"
    push $P5004, "context"
    push $P5004, "interactive"
    push $P5004, "interactive_result"
    push $P5004, "interactive_exception"
    push $P5004, "eval"
    push $P5004, "ctxsave"
    push $P5004, "stages"
    push $P5004, "parsegrammar"
    push $P5004, "parseactions"
    push $P5004, "interactive_banner"
    push $P5004, "interactive_prompt"
    push $P5004, "compiler_progname"
    push $P5004, "commandline_options"
    push $P5004, "command_line"
    push $P5004, "command_eval"
    push $P5004, "process_args"
    push $P5004, "evalfiles"
    push $P5004, "exists_stage"
    push $P5004, "compile"
    push $P5004, "start"
    push $P5004, "ast"
    push $P5004, "dumper"
    push $P5004, "usage"
    push $P5004, "version"
    push $P5004, "show-config"
    push $P5004, "verbose-config"
    push $P5004, "nqpevent"
    push $P5004, "removestage"
    push $P5004, "addstage"
    push $P5004, "parse_name"
    push $P5004, "lineof"
    push $P5004, "user-progname"
    push $P5004, "cli-options"
    push $P5004, "cli-arguments"
    push $P5004, "recursion_limit"
    push $P5004, "default_backend"
    push $P5004, "@!stages"
    push $P5004, "$!parsegrammar"
    push $P5004, "$!parseactions"
    push $P5004, "@!cmdoptions"
    push $P5004, "$!compiler_progname"
    push $P5004, "$!language"
    push $P5004, "%!config"
    push $P5004, "$!user_progname"
    push $P5004, "@!cli-arguments"
    push $P5004, "%!cli-options"
    push $P5004, "$!backend"
    push $P5004, "$!save_ctx"
    push $P5004, "optimize"
    push $P5004, "all_subtypes"
    push $P5004, "first_non_concat_child"
    push $P5004, "dont_scan"
    push $P5004, "visit_concat"
    push $P5004, "stub_out_block"
    push $P5004, "simplify_assertion"
    push $P5004, "visit_children"
    push $P5004, "@!outer"
    push $P5004, "$!level"
    push $P5004, "$!main_opt"
    push $P5004, "alt_nfa__1_1431289913.90452"
    push $P5004, "#"
    push $P5004, "alt_nfa__2_1431289913.90966"
    push $P5004, "-'"
    push $P5004, "val"
    push $P5004, "'"
    push $P5004, "\""
    push $P5004, "alt_nfa__3_1431289913.92809"
    push $P5004, "0"
    push $P5004, "alt_nfa__4_1431289913.99141"
    push $P5004, ")}]"
    push $P5004, ">"
    push $P5004, "alt_nfa__5_1431289914.00519"
    push $P5004, "noun"
    push $P5004, "&|~"
    push $P5004, "alt_nfa__6_1431289914.06373"
    push $P5004, "sigfinal"
    push $P5004, "alt_nfa__7_1431289914.10975"
    push $P5004, ":"
    push $P5004, "septype"
    push $P5004, "alt_nfa__8_1431289914.13299"
    push $P5004, "sym"
    push $P5004, "1"
    push $P5004, "2"
    push $P5004, "min"
    push $P5004, "max"
    push $P5004, "{"
    push $P5004, "alt_nfa__9_1431289914.27084"
    push $P5004, "alt_nfa__10_1431289914.2714"
    push $P5004, "block"
    push $P5004, "alt_nfa__11_1431289914.28514"
    push $P5004, unicode:"'\u2018\u201a"
    push $P5004, unicode:"\"\u201c\u201e"
    push $P5004, "alt_nfa__12_1431289914.34738"
    push $P5004, "alt_nfa__13_1431289914.35398"
    push $P5004, "\\"
    push $P5004, "GOAL"
    push $P5004, "key"
    push $P5004, utf8:"\t \x{a0}\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000"
    push $P5004, "$@%&"
    push $P5004, "name"
    push $P5004, "alt_nfa__14_1431289914.42505"
    push $P5004, "dDnNsSwW"
    push $P5004, "bB"
    push $P5004, "eE"
    push $P5004, "fF"
    push $P5004, "hH"
    push $P5004, "rR"
    push $P5004, "tT"
    push $P5004, "vV"
    push $P5004, "oO"
    push $P5004, "alt_nfa__15_1431289914.48454"
    push $P5004, "xX"
    push $P5004, "alt_nfa__16_1431289914.49433"
    push $P5004, "cC"
    push $P5004, "nN"
    push $P5004, "alt_nfa__17_1431289914.60984"
    push $P5004, "alt_nfa__18_1431289914.62035"
    push $P5004, "alt_nfa__19_1431289914.64054"
    push $P5004, "alt_nfa__20_1431289914.64946"
    push $P5004, "longname"
    push $P5004, "alt_nfa__21_1431289914.6754"
    push $P5004, "alt_nfa__22_1431289914.72913"
    push $P5004, "sign"
    push $P5004, "invert"
    push $P5004, "coloncircumfix"
    push $P5004, "alt_nfa__23_1431289914.82999"
    push $P5004, "alt_nfa__24_1431289914.83066"
    push $P5004, "alt_nfa__25_1431289914.83099"
    push $P5004, "]\\"
    push $P5004, "n"
    push $P5004, "alt_nfa__26_1431289914.87711"
    push $P5004, "alt_nfa__27_1431289914.87762"
    push $P5004, "alt_nfa__28_1431289914.89636"
    push $P5004, "__6MODEL_CORE__"
    push $P5004, "GLOBALish"
    push $P5004, "EXPORT"
    push $P5004, "1D042E2F8164839D3F4D2EBE66C02A86E8A792AE-1431289877.48024"
    push $P5004, "gen/parrot/stage2/nqpmo.nqp"
    push $P5004, "QRegex::P6Regex::World"
    push $P5004, "QRegex::P6Regex::Grammar"
    push $P5004, "alt_nfa__1_1431289892.34223"
    push $P5004, "alt_nfa__2_1431289892.36627"
    push $P5004, "alt_nfa__3_1431289892.38318"
    push $P5004, "alt_nfa__4_1431289892.46823"
    push $P5004, "alt_nfa__5_1431289892.46879"
    push $P5004, "alt_nfa__6_1431289892.48349"
    push $P5004, "alt_nfa__7_1431289892.5408"
    push $P5004, "alt_nfa__8_1431289892.55036"
    push $P5004, "alt_nfa__9_1431289892.57955"
    push $P5004, "alt_nfa__10_1431289892.62078"
    push $P5004, "shared"
    push $P5004, "match"
    push $P5004, "bstack"
    push $P5004, "cstack"
    push $P5004, "regexsub"
    push $P5004, "restart"
    push $P5004, "QRegex::P6Regex::Actions"
    push $P5004, "QRegex::P6Regex::Compiler"
    push $P5004, "QRegex::Optimizer"
    push $P5004, "outer"
    push $P5004, "level"
    push $P5004, "main_opt"
    push $P5004, "CompileTimeValue"
    push $P5004, "69262D203AA461F498C95CCF7FF3EA8AC3EE1FD5-1431289882.84207"
    push $P5004, "gen/parrot/stage2/QASTNode.nqp"
    push $P5004, "SpecialArg"
    push $P5004, "Children"
    push $P5004, "Node"
    push $P5004, "NodeList"
    push $P5004, "RegexCursorType"
    push $P5004, "Regex"
    push $P5004, "IVal"
    push $P5004, "NVal"
    push $P5004, "SVal"
    push $P5004, "BVal"
    push $P5004, "WVal"
    push $P5004, "Want"
    push $P5004, "Var"
    push $P5004, "VarWithFallback"
    push $P5004, "ParamTypeCheck"
    push $P5004, "Op"
    push $P5004, "VM"
    push $P5004, "Stmts"
    push $P5004, "Stmt"
    push $P5004, "Block"
    push $P5004, "Unquote"
    push $P5004, "CompUnit"
    push $P5004, "InlinePlaceholder"
    push $P5004, "Operations"
    push $P5004, "8A7C7AA827015A69376592056A3355AB2B7D37F1-1431289898.43778"
    push $P5004, "gen/parrot/stage2/QAST.nqp"
    push $P5004, "Compiler"
    push $P5004, "NFA"
    push $P5004, "P6Regex"
    push $P5004, "Optimizer"
    push $P5004, "Backend"
    push $P5004, "Grammar"
    push $P5004, "Actions"
    push $P5004, "CommandLine"
    push $P5004, "World"
    push $P5004, "CallResult"
    push $P5004, "Sub"
    push $P5004, "Ops"
    push $P5004, "Label"
    push $P5004, "Ee"
    push $P5004, "+-"
    .const 'Sub' $P5005 = 'cuid_247_1431289913.64791' 
    capture_lex $P5005
    $P5006 = $P5005()
    nqp_deserialize_sc "", cur_sc, $P5004, $P5006, conflicts
    unless conflicts goto if1652_end3790 
    die "Repossession conflicts occurred during deserialization"
  if1652_end3790:
    .const 'Sub' $P5001 = "cuid_1_1431289913.64791" 
    nqp_get_sc_object $P5002, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 4
    set_sub_code_object $P5001, $P5002
    .const 'Sub' $P5003 = "cuid_2_1431289913.64791" 
    nqp_get_sc_object $P5004, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 6
    set_sub_code_object $P5003, $P5004
    .const 'Sub' $P5005 = "cuid_3_1431289913.64791" 
    nqp_get_sc_object $P5006, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 7
    set_sub_code_object $P5005, $P5006
    .const 'Sub' $P5007 = "cuid_4_1431289913.64791" 
    nqp_get_sc_object $P5008, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 8
    set_sub_code_object $P5007, $P5008
    .const 'Sub' $P5009 = "cuid_5_1431289913.64791" 
    nqp_get_sc_object $P5010, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 9
    set_sub_code_object $P5009, $P5010
    .const 'Sub' $P5011 = "cuid_6_1431289913.64791" 
    nqp_get_sc_object $P5012, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 10
    set_sub_code_object $P5011, $P5012
    .const 'Sub' $P5013 = "cuid_7_1431289913.64791" 
    nqp_get_sc_object $P5014, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 11
    set_sub_code_object $P5013, $P5014
    .const 'Sub' $P5015 = "cuid_8_1431289913.64791" 
    nqp_get_sc_object $P5016, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 12
    set_sub_code_object $P5015, $P5016
    .const 'Sub' $P5017 = "cuid_9_1431289913.64791" 
    nqp_get_sc_object $P5018, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 13
    set_sub_code_object $P5017, $P5018
    .const 'Sub' $P5019 = "cuid_10_1431289913.64791" 
    nqp_get_sc_object $P5020, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 14
    set_sub_code_object $P5019, $P5020
    .const 'Sub' $P5021 = "cuid_11_1431289913.64791" 
    nqp_get_sc_object $P5022, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 15
    set_sub_code_object $P5021, $P5022
    .const 'Sub' $P5023 = "cuid_12_1431289913.64791" 
    nqp_get_sc_object $P5024, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 16
    set_sub_code_object $P5023, $P5024
    .const 'Sub' $P5025 = "cuid_13_1431289913.64791" 
    nqp_get_sc_object $P5026, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 17
    set_sub_code_object $P5025, $P5026
    .const 'Sub' $P5027 = "cuid_14_1431289913.64791" 
    nqp_get_sc_object $P5028, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 18
    set_sub_code_object $P5027, $P5028
    .const 'Sub' $P5029 = "cuid_15_1431289913.64791" 
    nqp_get_sc_object $P5030, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 19
    set_sub_code_object $P5029, $P5030
    .const 'Sub' $P5031 = "cuid_16_1431289913.64791" 
    nqp_get_sc_object $P5032, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 20
    set_sub_code_object $P5031, $P5032
    .const 'Sub' $P5033 = "cuid_17_1431289913.64791" 
    nqp_get_sc_object $P5034, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 21
    set_sub_code_object $P5033, $P5034
    .const 'Sub' $P5035 = "cuid_18_1431289913.64791" 
    nqp_get_sc_object $P5036, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 22
    set_sub_code_object $P5035, $P5036
    .const 'Sub' $P5037 = "cuid_19_1431289913.64791" 
    nqp_get_sc_object $P5038, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 23
    set_sub_code_object $P5037, $P5038
    .const 'Sub' $P5039 = "cuid_20_1431289913.64791" 
    nqp_get_sc_object $P5040, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 24
    set_sub_code_object $P5039, $P5040
    .const 'Sub' $P5041 = "cuid_21_1431289913.64791" 
    nqp_get_sc_object $P5042, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 25
    set_sub_code_object $P5041, $P5042
    .const 'Sub' $P5043 = "cuid_22_1431289913.64791" 
    nqp_get_sc_object $P5044, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 26
    set_sub_code_object $P5043, $P5044
    .const 'Sub' $P5045 = "cuid_23_1431289913.64791" 
    nqp_get_sc_object $P5046, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 27
    set_sub_code_object $P5045, $P5046
    .const 'Sub' $P5047 = "cuid_24_1431289913.64791" 
    nqp_get_sc_object $P5048, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 28
    set_sub_code_object $P5047, $P5048
    .const 'Sub' $P5049 = "cuid_25_1431289913.64791" 
    nqp_get_sc_object $P5050, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 29
    set_sub_code_object $P5049, $P5050
    .const 'Sub' $P5051 = "cuid_26_1431289913.64791" 
    nqp_get_sc_object $P5052, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 30
    set_sub_code_object $P5051, $P5052
    .const 'Sub' $P5053 = "cuid_27_1431289913.64791" 
    nqp_get_sc_object $P5054, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 31
    set_sub_code_object $P5053, $P5054
    .const 'Sub' $P5055 = "cuid_28_1431289913.64791" 
    nqp_get_sc_object $P5056, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 32
    set_sub_code_object $P5055, $P5056
    .const 'Sub' $P5057 = "cuid_29_1431289913.64791" 
    nqp_get_sc_object $P5058, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 33
    set_sub_code_object $P5057, $P5058
    .const 'Sub' $P5059 = "cuid_30_1431289913.64791" 
    nqp_get_sc_object $P5060, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 34
    set_sub_code_object $P5059, $P5060
    .const 'Sub' $P5061 = "cuid_31_1431289913.64791" 
    nqp_get_sc_object $P5062, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 35
    set_sub_code_object $P5061, $P5062
    .const 'Sub' $P5063 = "cuid_32_1431289913.64791" 
    nqp_get_sc_object $P5064, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 36
    set_sub_code_object $P5063, $P5064
    .const 'Sub' $P5065 = "cuid_33_1431289913.64791" 
    nqp_get_sc_object $P5066, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 37
    set_sub_code_object $P5065, $P5066
    .const 'Sub' $P5067 = "cuid_34_1431289913.64791" 
    nqp_get_sc_object $P5068, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 38
    set_sub_code_object $P5067, $P5068
    .const 'Sub' $P5069 = "cuid_35_1431289913.64791" 
    nqp_get_sc_object $P5070, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 39
    set_sub_code_object $P5069, $P5070
    .const 'Sub' $P5071 = "cuid_36_1431289913.64791" 
    nqp_get_sc_object $P5072, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 40
    set_sub_code_object $P5071, $P5072
    .const 'Sub' $P5073 = "cuid_37_1431289913.64791" 
    nqp_get_sc_object $P5074, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 41
    set_sub_code_object $P5073, $P5074
    .const 'Sub' $P5075 = "cuid_38_1431289913.64791" 
    nqp_get_sc_object $P5076, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 42
    set_sub_code_object $P5075, $P5076
    .const 'Sub' $P5077 = "cuid_39_1431289913.64791" 
    nqp_get_sc_object $P5078, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 43
    set_sub_code_object $P5077, $P5078
    .const 'Sub' $P5079 = "cuid_40_1431289913.64791" 
    nqp_get_sc_object $P5080, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 44
    set_sub_code_object $P5079, $P5080
    .const 'Sub' $P5081 = "cuid_41_1431289913.64791" 
    nqp_get_sc_object $P5082, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 45
    set_sub_code_object $P5081, $P5082
    .const 'Sub' $P5083 = "cuid_42_1431289913.64791" 
    nqp_get_sc_object $P5084, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 46
    set_sub_code_object $P5083, $P5084
    .const 'Sub' $P5085 = "cuid_43_1431289913.64791" 
    nqp_get_sc_object $P5086, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 47
    set_sub_code_object $P5085, $P5086
    .const 'Sub' $P5087 = "cuid_44_1431289913.64791" 
    nqp_get_sc_object $P5088, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 48
    set_sub_code_object $P5087, $P5088
    .const 'Sub' $P5089 = "cuid_45_1431289913.64791" 
    nqp_get_sc_object $P5090, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 49
    set_sub_code_object $P5089, $P5090
    .const 'Sub' $P5091 = "cuid_46_1431289913.64791" 
    nqp_get_sc_object $P5092, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 50
    set_sub_code_object $P5091, $P5092
    .const 'Sub' $P5093 = "cuid_47_1431289913.64791" 
    nqp_get_sc_object $P5094, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 51
    set_sub_code_object $P5093, $P5094
    .const 'Sub' $P5095 = "cuid_48_1431289913.64791" 
    nqp_get_sc_object $P5096, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 52
    set_sub_code_object $P5095, $P5096
    .const 'Sub' $P5097 = "cuid_49_1431289913.64791" 
    nqp_get_sc_object $P5098, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 53
    set_sub_code_object $P5097, $P5098
    .const 'Sub' $P5099 = "cuid_50_1431289913.64791" 
    nqp_get_sc_object $P5100, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 54
    set_sub_code_object $P5099, $P5100
    .const 'Sub' $P5101 = "cuid_51_1431289913.64791" 
    nqp_get_sc_object $P5102, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 55
    set_sub_code_object $P5101, $P5102
    .const 'Sub' $P5103 = "cuid_52_1431289913.64791" 
    nqp_get_sc_object $P5104, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 56
    set_sub_code_object $P5103, $P5104
    .const 'Sub' $P5105 = "cuid_53_1431289913.64791" 
    nqp_get_sc_object $P5106, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 57
    set_sub_code_object $P5105, $P5106
    .const 'Sub' $P5107 = "cuid_54_1431289913.64791" 
    nqp_get_sc_object $P5108, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 58
    set_sub_code_object $P5107, $P5108
    .const 'Sub' $P5109 = "cuid_55_1431289913.64791" 
    nqp_get_sc_object $P5110, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 59
    set_sub_code_object $P5109, $P5110
    .const 'Sub' $P5111 = "cuid_56_1431289913.64791" 
    nqp_get_sc_object $P5112, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 60
    set_sub_code_object $P5111, $P5112
    .const 'Sub' $P5113 = "cuid_57_1431289913.64791" 
    nqp_get_sc_object $P5114, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 61
    set_sub_code_object $P5113, $P5114
    .const 'Sub' $P5115 = "cuid_58_1431289913.64791" 
    nqp_get_sc_object $P5116, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 62
    set_sub_code_object $P5115, $P5116
    .const 'Sub' $P5117 = "cuid_59_1431289913.64791" 
    nqp_get_sc_object $P5118, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 63
    set_sub_code_object $P5117, $P5118
    .const 'Sub' $P5119 = "cuid_60_1431289913.64791" 
    nqp_get_sc_object $P5120, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 64
    set_sub_code_object $P5119, $P5120
    .const 'Sub' $P5121 = "cuid_61_1431289913.64791" 
    nqp_get_sc_object $P5122, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 65
    set_sub_code_object $P5121, $P5122
    .const 'Sub' $P5123 = "cuid_62_1431289913.64791" 
    nqp_get_sc_object $P5124, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 66
    set_sub_code_object $P5123, $P5124
    .const 'Sub' $P5125 = "cuid_63_1431289913.64791" 
    nqp_get_sc_object $P5126, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 67
    set_sub_code_object $P5125, $P5126
    .const 'Sub' $P5127 = "cuid_64_1431289913.64791" 
    nqp_get_sc_object $P5128, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 68
    set_sub_code_object $P5127, $P5128
    .const 'Sub' $P5129 = "cuid_65_1431289913.64791" 
    nqp_get_sc_object $P5130, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 69
    set_sub_code_object $P5129, $P5130
    .const 'Sub' $P5131 = "cuid_66_1431289913.64791" 
    nqp_get_sc_object $P5132, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 70
    set_sub_code_object $P5131, $P5132
    .const 'Sub' $P5133 = "cuid_67_1431289913.64791" 
    nqp_get_sc_object $P5134, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 71
    set_sub_code_object $P5133, $P5134
    .const 'Sub' $P5135 = "cuid_68_1431289913.64791" 
    nqp_get_sc_object $P5136, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 72
    set_sub_code_object $P5135, $P5136
    .const 'Sub' $P5137 = "cuid_69_1431289913.64791" 
    nqp_get_sc_object $P5138, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 73
    set_sub_code_object $P5137, $P5138
    .const 'Sub' $P5139 = "cuid_70_1431289913.64791" 
    nqp_get_sc_object $P5140, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 74
    set_sub_code_object $P5139, $P5140
    .const 'Sub' $P5141 = "cuid_71_1431289913.64791" 
    nqp_get_sc_object $P5142, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 75
    set_sub_code_object $P5141, $P5142
    .const 'Sub' $P5143 = "cuid_72_1431289913.64791" 
    nqp_get_sc_object $P5144, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 76
    set_sub_code_object $P5143, $P5144
    .const 'Sub' $P5145 = "cuid_73_1431289913.64791" 
    nqp_get_sc_object $P5146, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 77
    set_sub_code_object $P5145, $P5146
    .const 'Sub' $P5147 = "cuid_74_1431289913.64791" 
    nqp_get_sc_object $P5148, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 78
    set_sub_code_object $P5147, $P5148
    .const 'Sub' $P5149 = "cuid_75_1431289913.64791" 
    nqp_get_sc_object $P5150, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 79
    set_sub_code_object $P5149, $P5150
    .const 'Sub' $P5151 = "cuid_76_1431289913.64791" 
    nqp_get_sc_object $P5152, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 80
    set_sub_code_object $P5151, $P5152
    .const 'Sub' $P5153 = "cuid_77_1431289913.64791" 
    nqp_get_sc_object $P5154, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 81
    set_sub_code_object $P5153, $P5154
    .const 'Sub' $P5155 = "cuid_78_1431289913.64791" 
    nqp_get_sc_object $P5156, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 82
    set_sub_code_object $P5155, $P5156
    .const 'Sub' $P5157 = "cuid_79_1431289913.64791" 
    nqp_get_sc_object $P5158, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 83
    set_sub_code_object $P5157, $P5158
    .const 'Sub' $P5159 = "cuid_80_1431289913.64791" 
    nqp_get_sc_object $P5160, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 84
    set_sub_code_object $P5159, $P5160
    .const 'Sub' $P5161 = "cuid_81_1431289913.64791" 
    nqp_get_sc_object $P5162, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 85
    set_sub_code_object $P5161, $P5162
    .const 'Sub' $P5163 = "cuid_82_1431289913.64791" 
    nqp_get_sc_object $P5164, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 86
    set_sub_code_object $P5163, $P5164
    .const 'Sub' $P5165 = "cuid_83_1431289913.64791" 
    nqp_get_sc_object $P5166, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 87
    set_sub_code_object $P5165, $P5166
    .const 'Sub' $P5167 = "cuid_84_1431289913.64791" 
    nqp_get_sc_object $P5168, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 88
    set_sub_code_object $P5167, $P5168
    .const 'Sub' $P5169 = "cuid_85_1431289913.64791" 
    nqp_get_sc_object $P5170, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 89
    set_sub_code_object $P5169, $P5170
    .const 'Sub' $P5171 = "cuid_86_1431289913.64791" 
    nqp_get_sc_object $P5172, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 90
    set_sub_code_object $P5171, $P5172
    .const 'Sub' $P5173 = "cuid_87_1431289913.64791" 
    nqp_get_sc_object $P5174, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 91
    set_sub_code_object $P5173, $P5174
    .const 'Sub' $P5175 = "cuid_88_1431289913.64791" 
    nqp_get_sc_object $P5176, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 92
    set_sub_code_object $P5175, $P5176
    .const 'Sub' $P5177 = "cuid_89_1431289913.64791" 
    nqp_get_sc_object $P5178, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 93
    set_sub_code_object $P5177, $P5178
    .const 'Sub' $P5179 = "cuid_90_1431289913.64791" 
    nqp_get_sc_object $P5180, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 94
    set_sub_code_object $P5179, $P5180
    .const 'Sub' $P5181 = "cuid_91_1431289913.64791" 
    nqp_get_sc_object $P5182, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 95
    set_sub_code_object $P5181, $P5182
    .const 'Sub' $P5183 = "cuid_92_1431289913.64791" 
    nqp_get_sc_object $P5184, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 96
    set_sub_code_object $P5183, $P5184
    .const 'Sub' $P5185 = "cuid_93_1431289913.64791" 
    nqp_get_sc_object $P5186, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 97
    set_sub_code_object $P5185, $P5186
    .const 'Sub' $P5187 = "cuid_94_1431289913.64791" 
    nqp_get_sc_object $P5188, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 98
    set_sub_code_object $P5187, $P5188
    .const 'Sub' $P5189 = "cuid_95_1431289913.64791" 
    nqp_get_sc_object $P5190, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 99
    set_sub_code_object $P5189, $P5190
    .const 'Sub' $P5191 = "cuid_96_1431289913.64791" 
    nqp_get_sc_object $P5192, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 100
    set_sub_code_object $P5191, $P5192
    .const 'Sub' $P5193 = "cuid_97_1431289913.64791" 
    nqp_get_sc_object $P5194, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 101
    set_sub_code_object $P5193, $P5194
    .const 'Sub' $P5195 = "cuid_98_1431289913.64791" 
    nqp_get_sc_object $P5196, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 102
    set_sub_code_object $P5195, $P5196
    .const 'Sub' $P5197 = "cuid_99_1431289913.64791" 
    nqp_get_sc_object $P5198, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 103
    set_sub_code_object $P5197, $P5198
    .const 'Sub' $P5199 = "cuid_100_1431289913.64791" 
    nqp_get_sc_object $P5200, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 104
    set_sub_code_object $P5199, $P5200
    .const 'Sub' $P5201 = "cuid_101_1431289913.64791" 
    nqp_get_sc_object $P5202, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 105
    set_sub_code_object $P5201, $P5202
    .const 'Sub' $P5203 = "cuid_102_1431289913.64791" 
    nqp_get_sc_object $P5204, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 106
    set_sub_code_object $P5203, $P5204
    .const 'Sub' $P5205 = "cuid_103_1431289913.64791" 
    nqp_get_sc_object $P5206, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 107
    set_sub_code_object $P5205, $P5206
    .const 'Sub' $P5207 = "cuid_104_1431289913.64791" 
    nqp_get_sc_object $P5208, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 108
    set_sub_code_object $P5207, $P5208
    .const 'Sub' $P5209 = "cuid_105_1431289913.64791" 
    nqp_get_sc_object $P5210, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 109
    set_sub_code_object $P5209, $P5210
    .const 'Sub' $P5211 = "cuid_106_1431289913.64791" 
    nqp_get_sc_object $P5212, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 110
    set_sub_code_object $P5211, $P5212
    .const 'Sub' $P5213 = "cuid_107_1431289913.64791" 
    nqp_get_sc_object $P5214, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 111
    set_sub_code_object $P5213, $P5214
    .const 'Sub' $P5215 = "cuid_108_1431289913.64791" 
    nqp_get_sc_object $P5216, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 112
    set_sub_code_object $P5215, $P5216
    .const 'Sub' $P5217 = "cuid_109_1431289913.64791" 
    nqp_get_sc_object $P5218, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 113
    set_sub_code_object $P5217, $P5218
    .const 'Sub' $P5219 = "cuid_110_1431289913.64791" 
    nqp_get_sc_object $P5220, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 114
    set_sub_code_object $P5219, $P5220
    .const 'Sub' $P5221 = "cuid_111_1431289913.64791" 
    nqp_get_sc_object $P5222, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 115
    set_sub_code_object $P5221, $P5222
    .const 'Sub' $P5223 = "cuid_112_1431289913.64791" 
    nqp_get_sc_object $P5224, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 116
    set_sub_code_object $P5223, $P5224
    .const 'Sub' $P5225 = "cuid_113_1431289913.64791" 
    nqp_get_sc_object $P5226, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 117
    set_sub_code_object $P5225, $P5226
    .const 'Sub' $P5227 = "cuid_114_1431289913.64791" 
    nqp_get_sc_object $P5228, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 118
    set_sub_code_object $P5227, $P5228
    .const 'Sub' $P5229 = "cuid_115_1431289913.64791" 
    nqp_get_sc_object $P5230, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 119
    set_sub_code_object $P5229, $P5230
    .const 'Sub' $P5231 = "cuid_116_1431289913.64791" 
    nqp_get_sc_object $P5232, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 120
    set_sub_code_object $P5231, $P5232
    .const 'Sub' $P5233 = "cuid_117_1431289913.64791" 
    nqp_get_sc_object $P5234, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 121
    set_sub_code_object $P5233, $P5234
    .const 'Sub' $P5235 = "cuid_118_1431289913.64791" 
    nqp_get_sc_object $P5236, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 122
    set_sub_code_object $P5235, $P5236
    .const 'Sub' $P5237 = "cuid_119_1431289913.64791" 
    nqp_get_sc_object $P5238, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 123
    set_sub_code_object $P5237, $P5238
    .const 'Sub' $P5239 = "cuid_120_1431289913.64791" 
    nqp_get_sc_object $P5240, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 124
    set_sub_code_object $P5239, $P5240
    .const 'Sub' $P5241 = "cuid_121_1431289913.64791" 
    nqp_get_sc_object $P5242, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 125
    set_sub_code_object $P5241, $P5242
    .const 'Sub' $P5243 = "cuid_122_1431289913.64791" 
    nqp_get_sc_object $P5244, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 126
    set_sub_code_object $P5243, $P5244
    .const 'Sub' $P5245 = "cuid_123_1431289913.64791" 
    nqp_get_sc_object $P5246, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 127
    set_sub_code_object $P5245, $P5246
    .const 'Sub' $P5247 = "cuid_124_1431289913.64791" 
    nqp_get_sc_object $P5248, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 128
    set_sub_code_object $P5247, $P5248
    .const 'Sub' $P5249 = "cuid_125_1431289913.64791" 
    nqp_get_sc_object $P5250, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 129
    set_sub_code_object $P5249, $P5250
    .const 'Sub' $P5251 = "cuid_126_1431289913.64791" 
    nqp_get_sc_object $P5252, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 130
    set_sub_code_object $P5251, $P5252
    .const 'Sub' $P5253 = "cuid_127_1431289913.64791" 
    nqp_get_sc_object $P5254, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 131
    set_sub_code_object $P5253, $P5254
    .const 'Sub' $P5255 = "cuid_128_1431289913.64791" 
    nqp_get_sc_object $P5256, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 132
    set_sub_code_object $P5255, $P5256
    .const 'Sub' $P5257 = "cuid_129_1431289913.64791" 
    nqp_get_sc_object $P5258, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 133
    set_sub_code_object $P5257, $P5258
    .const 'Sub' $P5259 = "cuid_130_1431289913.64791" 
    nqp_get_sc_object $P5260, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 134
    set_sub_code_object $P5259, $P5260
    .const 'Sub' $P5261 = "cuid_131_1431289913.64791" 
    nqp_get_sc_object $P5262, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 135
    set_sub_code_object $P5261, $P5262
    .const 'Sub' $P5263 = "cuid_132_1431289913.64791" 
    nqp_get_sc_object $P5264, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 136
    set_sub_code_object $P5263, $P5264
    .const 'Sub' $P5265 = "cuid_133_1431289913.64791" 
    nqp_get_sc_object $P5266, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 137
    set_sub_code_object $P5265, $P5266
    .const 'Sub' $P5267 = "cuid_134_1431289913.64791" 
    nqp_get_sc_object $P5268, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 138
    set_sub_code_object $P5267, $P5268
    .const 'Sub' $P5269 = "cuid_135_1431289913.64791" 
    nqp_get_sc_object $P5270, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 139
    set_sub_code_object $P5269, $P5270
    .const 'Sub' $P5271 = "cuid_136_1431289913.64791" 
    nqp_get_sc_object $P5272, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 140
    set_sub_code_object $P5271, $P5272
    .const 'Sub' $P5273 = "cuid_137_1431289913.64791" 
    nqp_get_sc_object $P5274, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 141
    set_sub_code_object $P5273, $P5274
    .const 'Sub' $P5275 = "cuid_138_1431289913.64791" 
    nqp_get_sc_object $P5276, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 142
    set_sub_code_object $P5275, $P5276
    .const 'Sub' $P5277 = "cuid_139_1431289913.64791" 
    nqp_get_sc_object $P5278, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 143
    set_sub_code_object $P5277, $P5278
    .const 'Sub' $P5279 = "cuid_140_1431289913.64791" 
    nqp_get_sc_object $P5280, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 144
    set_sub_code_object $P5279, $P5280
    .const 'Sub' $P5281 = "cuid_141_1431289913.64791" 
    nqp_get_sc_object $P5282, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 145
    set_sub_code_object $P5281, $P5282
    .const 'Sub' $P5283 = "cuid_142_1431289913.64791" 
    nqp_get_sc_object $P5284, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 146
    set_sub_code_object $P5283, $P5284
    .const 'Sub' $P5285 = "cuid_143_1431289913.64791" 
    nqp_get_sc_object $P5286, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 147
    set_sub_code_object $P5285, $P5286
    .const 'Sub' $P5287 = "cuid_144_1431289913.64791" 
    nqp_get_sc_object $P5288, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 148
    set_sub_code_object $P5287, $P5288
    .const 'Sub' $P5289 = "cuid_145_1431289913.64791" 
    nqp_get_sc_object $P5290, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 149
    set_sub_code_object $P5289, $P5290
    .const 'Sub' $P5291 = "cuid_146_1431289913.64791" 
    nqp_get_sc_object $P5292, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 150
    set_sub_code_object $P5291, $P5292
    .const 'Sub' $P5293 = "cuid_147_1431289913.64791" 
    nqp_get_sc_object $P5294, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 151
    set_sub_code_object $P5293, $P5294
    .const 'Sub' $P5295 = "cuid_148_1431289913.64791" 
    nqp_get_sc_object $P5296, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 152
    set_sub_code_object $P5295, $P5296
    .const 'Sub' $P5297 = "cuid_149_1431289913.64791" 
    nqp_get_sc_object $P5298, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 154
    set_sub_code_object $P5297, $P5298
    .const 'Sub' $P5299 = "cuid_150_1431289913.64791" 
    nqp_get_sc_object $P5300, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 155
    set_sub_code_object $P5299, $P5300
    .const 'Sub' $P5301 = "cuid_151_1431289913.64791" 
    nqp_get_sc_object $P5302, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 156
    set_sub_code_object $P5301, $P5302
    .const 'Sub' $P5303 = "cuid_152_1431289913.64791" 
    nqp_get_sc_object $P5304, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 157
    set_sub_code_object $P5303, $P5304
    .const 'Sub' $P5305 = "cuid_153_1431289913.64791" 
    nqp_get_sc_object $P5306, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 158
    set_sub_code_object $P5305, $P5306
    .const 'Sub' $P5307 = "cuid_154_1431289913.64791" 
    nqp_get_sc_object $P5308, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 159
    set_sub_code_object $P5307, $P5308
    .const 'Sub' $P5309 = "cuid_155_1431289913.64791" 
    nqp_get_sc_object $P5310, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 160
    set_sub_code_object $P5309, $P5310
    .const 'Sub' $P5311 = "cuid_156_1431289913.64791" 
    nqp_get_sc_object $P5312, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 161
    set_sub_code_object $P5311, $P5312
    .const 'Sub' $P5313 = "cuid_157_1431289913.64791" 
    nqp_get_sc_object $P5314, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 162
    set_sub_code_object $P5313, $P5314
    .const 'Sub' $P5315 = "cuid_158_1431289913.64791" 
    nqp_get_sc_object $P5316, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 163
    set_sub_code_object $P5315, $P5316
    .const 'Sub' $P5317 = "cuid_159_1431289913.64791" 
    nqp_get_sc_object $P5318, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 164
    set_sub_code_object $P5317, $P5318
    .const 'Sub' $P5319 = "cuid_160_1431289913.64791" 
    nqp_get_sc_object $P5320, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 165
    set_sub_code_object $P5319, $P5320
    .const 'Sub' $P5321 = "cuid_161_1431289913.64791" 
    nqp_get_sc_object $P5322, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 166
    set_sub_code_object $P5321, $P5322
    .const 'Sub' $P5323 = "cuid_162_1431289913.64791" 
    nqp_get_sc_object $P5324, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 167
    set_sub_code_object $P5323, $P5324
    .const 'Sub' $P5325 = "cuid_163_1431289913.64791" 
    nqp_get_sc_object $P5326, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 168
    set_sub_code_object $P5325, $P5326
    .const 'Sub' $P5327 = "cuid_164_1431289913.64791" 
    nqp_get_sc_object $P5328, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 169
    set_sub_code_object $P5327, $P5328
    .const 'Sub' $P5329 = "cuid_165_1431289913.64791" 
    nqp_get_sc_object $P5330, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 170
    set_sub_code_object $P5329, $P5330
    .const 'Sub' $P5331 = "cuid_166_1431289913.64791" 
    nqp_get_sc_object $P5332, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 171
    set_sub_code_object $P5331, $P5332
    .const 'Sub' $P5333 = "cuid_167_1431289913.64791" 
    nqp_get_sc_object $P5334, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 172
    set_sub_code_object $P5333, $P5334
    .const 'Sub' $P5335 = "cuid_168_1431289913.64791" 
    nqp_get_sc_object $P5336, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 173
    set_sub_code_object $P5335, $P5336
    .const 'Sub' $P5337 = "cuid_169_1431289913.64791" 
    nqp_get_sc_object $P5338, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 174
    set_sub_code_object $P5337, $P5338
    .const 'Sub' $P5339 = "cuid_170_1431289913.64791" 
    nqp_get_sc_object $P5340, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 175
    set_sub_code_object $P5339, $P5340
    .const 'Sub' $P5341 = "cuid_171_1431289913.64791" 
    nqp_get_sc_object $P5342, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 176
    set_sub_code_object $P5341, $P5342
    .const 'Sub' $P5343 = "cuid_172_1431289913.64791" 
    nqp_get_sc_object $P5344, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 177
    set_sub_code_object $P5343, $P5344
    .const 'Sub' $P5345 = "cuid_173_1431289913.64791" 
    nqp_get_sc_object $P5346, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 178
    set_sub_code_object $P5345, $P5346
    .const 'Sub' $P5347 = "cuid_174_1431289913.64791" 
    nqp_get_sc_object $P5348, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 179
    set_sub_code_object $P5347, $P5348
    .const 'Sub' $P5349 = "cuid_175_1431289913.64791" 
    nqp_get_sc_object $P5350, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 180
    set_sub_code_object $P5349, $P5350
    .const 'Sub' $P5351 = "cuid_176_1431289913.64791" 
    nqp_get_sc_object $P5352, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 181
    set_sub_code_object $P5351, $P5352
    .const 'Sub' $P5353 = "cuid_177_1431289913.64791" 
    nqp_get_sc_object $P5354, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 182
    set_sub_code_object $P5353, $P5354
    .const 'Sub' $P5355 = "cuid_178_1431289913.64791" 
    nqp_get_sc_object $P5356, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 183
    set_sub_code_object $P5355, $P5356
    .const 'Sub' $P5357 = "cuid_179_1431289913.64791" 
    nqp_get_sc_object $P5358, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 184
    set_sub_code_object $P5357, $P5358
    .const 'Sub' $P5359 = "cuid_180_1431289913.64791" 
    nqp_get_sc_object $P5360, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 185
    set_sub_code_object $P5359, $P5360
    .const 'Sub' $P5361 = "cuid_181_1431289913.64791" 
    nqp_get_sc_object $P5362, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 186
    set_sub_code_object $P5361, $P5362
    .const 'Sub' $P5363 = "cuid_182_1431289913.64791" 
    nqp_get_sc_object $P5364, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 187
    set_sub_code_object $P5363, $P5364
    .const 'Sub' $P5365 = "cuid_183_1431289913.64791" 
    nqp_get_sc_object $P5366, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 188
    set_sub_code_object $P5365, $P5366
    .const 'Sub' $P5367 = "cuid_184_1431289913.64791" 
    nqp_get_sc_object $P5368, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 189
    set_sub_code_object $P5367, $P5368
    .const 'Sub' $P5369 = "cuid_185_1431289913.64791" 
    nqp_get_sc_object $P5370, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 190
    set_sub_code_object $P5369, $P5370
    .const 'Sub' $P5371 = "cuid_186_1431289913.64791" 
    nqp_get_sc_object $P5372, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 191
    set_sub_code_object $P5371, $P5372
    .const 'Sub' $P5373 = "cuid_187_1431289913.64791" 
    nqp_get_sc_object $P5374, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 192
    set_sub_code_object $P5373, $P5374
    .const 'Sub' $P5375 = "cuid_188_1431289913.64791" 
    nqp_get_sc_object $P5376, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 193
    set_sub_code_object $P5375, $P5376
    .const 'Sub' $P5377 = "cuid_189_1431289913.64791" 
    nqp_get_sc_object $P5378, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 194
    set_sub_code_object $P5377, $P5378
    .const 'Sub' $P5379 = "cuid_190_1431289913.64791" 
    nqp_get_sc_object $P5380, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 195
    set_sub_code_object $P5379, $P5380
    .const 'Sub' $P5381 = "cuid_191_1431289913.64791" 
    nqp_get_sc_object $P5382, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 196
    set_sub_code_object $P5381, $P5382
    .const 'Sub' $P5383 = "cuid_192_1431289913.64791" 
    nqp_get_sc_object $P5384, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 197
    set_sub_code_object $P5383, $P5384
    .const 'Sub' $P5385 = "cuid_193_1431289913.64791" 
    nqp_get_sc_object $P5386, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 198
    set_sub_code_object $P5385, $P5386
    .const 'Sub' $P5387 = "cuid_194_1431289913.64791" 
    nqp_get_sc_object $P5388, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 199
    set_sub_code_object $P5387, $P5388
    .const 'Sub' $P5389 = "cuid_195_1431289913.64791" 
    nqp_get_sc_object $P5390, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 200
    set_sub_code_object $P5389, $P5390
    .const 'Sub' $P5391 = "cuid_196_1431289913.64791" 
    nqp_get_sc_object $P5392, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 201
    set_sub_code_object $P5391, $P5392
    .const 'Sub' $P5393 = "cuid_197_1431289913.64791" 
    nqp_get_sc_object $P5394, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 202
    set_sub_code_object $P5393, $P5394
    .const 'Sub' $P5395 = "cuid_198_1431289913.64791" 
    nqp_get_sc_object $P5396, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 203
    set_sub_code_object $P5395, $P5396
    .const 'Sub' $P5397 = "cuid_199_1431289913.64791" 
    nqp_get_sc_object $P5398, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 204
    set_sub_code_object $P5397, $P5398
    .const 'Sub' $P5399 = "cuid_200_1431289913.64791" 
    nqp_get_sc_object $P5400, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 205
    set_sub_code_object $P5399, $P5400
    .const 'Sub' $P5401 = "cuid_201_1431289913.64791" 
    nqp_get_sc_object $P5402, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 206
    set_sub_code_object $P5401, $P5402
    .const 'Sub' $P5403 = "cuid_202_1431289913.64791" 
    nqp_get_sc_object $P5404, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 207
    set_sub_code_object $P5403, $P5404
    .const 'Sub' $P5405 = "cuid_203_1431289913.64791" 
    nqp_get_sc_object $P5406, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 208
    set_sub_code_object $P5405, $P5406
    .const 'Sub' $P5407 = "cuid_204_1431289913.64791" 
    nqp_get_sc_object $P5408, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 209
    set_sub_code_object $P5407, $P5408
    .const 'Sub' $P5409 = "cuid_205_1431289913.64791" 
    nqp_get_sc_object $P5410, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 210
    set_sub_code_object $P5409, $P5410
    .const 'Sub' $P5411 = "cuid_206_1431289913.64791" 
    nqp_get_sc_object $P5412, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 211
    set_sub_code_object $P5411, $P5412
    .const 'Sub' $P5413 = "cuid_207_1431289913.64791" 
    nqp_get_sc_object $P5414, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 212
    set_sub_code_object $P5413, $P5414
    .const 'Sub' $P5415 = "cuid_208_1431289913.64791" 
    nqp_get_sc_object $P5416, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 213
    set_sub_code_object $P5415, $P5416
    .const 'Sub' $P5417 = "cuid_209_1431289913.64791" 
    nqp_get_sc_object $P5418, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 214
    set_sub_code_object $P5417, $P5418
    .const 'Sub' $P5419 = "cuid_210_1431289913.64791" 
    nqp_get_sc_object $P5420, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 215
    set_sub_code_object $P5419, $P5420
    .const 'Sub' $P5421 = "cuid_211_1431289913.64791" 
    nqp_get_sc_object $P5422, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 216
    set_sub_code_object $P5421, $P5422
    .const 'Sub' $P5423 = "cuid_212_1431289913.64791" 
    nqp_get_sc_object $P5424, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 217
    set_sub_code_object $P5423, $P5424
    .const 'Sub' $P5425 = "cuid_213_1431289913.64791" 
    nqp_get_sc_object $P5426, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 218
    set_sub_code_object $P5425, $P5426
    .const 'Sub' $P5427 = "cuid_214_1431289913.64791" 
    nqp_get_sc_object $P5428, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 219
    set_sub_code_object $P5427, $P5428
    .const 'Sub' $P5429 = "cuid_215_1431289913.64791" 
    nqp_get_sc_object $P5430, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 220
    set_sub_code_object $P5429, $P5430
    .const 'Sub' $P5431 = "cuid_216_1431289913.64791" 
    nqp_get_sc_object $P5432, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 221
    set_sub_code_object $P5431, $P5432
    .const 'Sub' $P5433 = "cuid_217_1431289913.64791" 
    nqp_get_sc_object $P5434, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 222
    set_sub_code_object $P5433, $P5434
    .const 'Sub' $P5435 = "cuid_218_1431289913.64791" 
    nqp_get_sc_object $P5436, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 223
    set_sub_code_object $P5435, $P5436
    .const 'Sub' $P5437 = "cuid_219_1431289913.64791" 
    nqp_get_sc_object $P5438, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 224
    set_sub_code_object $P5437, $P5438
    .const 'Sub' $P5439 = "cuid_220_1431289913.64791" 
    nqp_get_sc_object $P5440, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 225
    set_sub_code_object $P5439, $P5440
    .const 'Sub' $P5441 = "cuid_221_1431289913.64791" 
    nqp_get_sc_object $P5442, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 226
    set_sub_code_object $P5441, $P5442
    .const 'Sub' $P5443 = "cuid_222_1431289913.64791" 
    nqp_get_sc_object $P5444, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 227
    set_sub_code_object $P5443, $P5444
    .const 'Sub' $P5445 = "cuid_223_1431289913.64791" 
    nqp_get_sc_object $P5446, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 228
    set_sub_code_object $P5445, $P5446
    .const 'Sub' $P5447 = "cuid_224_1431289913.64791" 
    nqp_get_sc_object $P5448, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 229
    set_sub_code_object $P5447, $P5448
    .const 'Sub' $P5449 = "cuid_225_1431289913.64791" 
    nqp_get_sc_object $P5450, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 230
    set_sub_code_object $P5449, $P5450
    .const 'Sub' $P5451 = "cuid_226_1431289913.64791" 
    nqp_get_sc_object $P5452, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 231
    set_sub_code_object $P5451, $P5452
    .const 'Sub' $P5453 = "cuid_227_1431289913.64791" 
    nqp_get_sc_object $P5454, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 232
    set_sub_code_object $P5453, $P5454
    .const 'Sub' $P5455 = "cuid_228_1431289913.64791" 
    nqp_get_sc_object $P5456, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 233
    set_sub_code_object $P5455, $P5456
    .const 'Sub' $P5457 = "cuid_229_1431289913.64791" 
    nqp_get_sc_object $P5458, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 236
    set_sub_code_object $P5457, $P5458
    .const 'Sub' $P5459 = "cuid_230_1431289913.64791" 
    nqp_get_sc_object $P5460, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 237
    set_sub_code_object $P5459, $P5460
    .const 'Sub' $P5461 = "cuid_231_1431289913.64791" 
    nqp_get_sc_object $P5462, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 238
    set_sub_code_object $P5461, $P5462
    .const 'Sub' $P5463 = "cuid_232_1431289913.64791" 
    nqp_get_sc_object $P5464, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 239
    set_sub_code_object $P5463, $P5464
    .const 'Sub' $P5465 = "cuid_233_1431289913.64791" 
    nqp_get_sc_object $P5466, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 240
    set_sub_code_object $P5465, $P5466
    .const 'Sub' $P5467 = "cuid_234_1431289913.64791" 
    nqp_get_sc_object $P5468, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 241
    set_sub_code_object $P5467, $P5468
    .const 'Sub' $P5469 = "cuid_235_1431289913.64791" 
    nqp_get_sc_object $P5470, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 242
    set_sub_code_object $P5469, $P5470
    .const 'Sub' $P5471 = "cuid_236_1431289913.64791" 
    nqp_get_sc_object $P5472, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 243
    set_sub_code_object $P5471, $P5472
    .const "LexInfo" $P5473 = "cuid_237_1431289913.64791"
    new $P5474, 'ResizableStringArray'
    assign $P5474, 5
    assign $P5474, 0
    push $P5474, "GLOBALish"
    push $P5474, "$?PACKAGE"
    push $P5474, "EXPORT"
    push $P5474, "ParseShared"
    push $P5474, "NQPCursorRole"
    new $P5475, 'QRPA'
    assign $P5475, 5
    assign $P5475, 0
    nqp_get_sc_object $P5476, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    push $P5475, $P5476
    nqp_get_sc_object $P5477, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 0
    push $P5475, $P5477
    nqp_get_sc_object $P5478, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 1
    push $P5475, $P5478
    nqp_get_sc_object $P5479, "04F6DF32596F46780CCB691981DC37EC9DB1CC6C-1431289885.6999", 35
    push $P5475, $P5479
    nqp_get_sc_object $P5480, "04F6DF32596F46780CCB691981DC37EC9DB1CC6C-1431289885.6999", 38
    push $P5475, $P5480
    new $P5481, 'ResizableIntegerArray'
    assign $P5481, 5
    $P5473."setup_static_lexpad"($P5474, $P5475, $P5481)
    .const "LexInfo" $P5473 = "cuid_239_1431289913.64791"
    new $P5474, 'ResizableStringArray'
    assign $P5474, 2
    assign $P5474, 0
    push $P5474, "$?PACKAGE"
    push $P5474, "$?CLASS"
    new $P5475, 'QRPA'
    assign $P5475, 2
    assign $P5475, 0
    nqp_get_sc_object $P5476, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 3
    push $P5475, $P5476
    nqp_get_sc_object $P5477, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 3
    push $P5475, $P5477
    new $P5478, 'ResizableIntegerArray'
    assign $P5478, 2
    $P5473."setup_static_lexpad"($P5474, $P5475, $P5478)
    .const "LexInfo" $P5473 = "cuid_241_1431289913.64791"
    new $P5474, 'ResizableStringArray'
    assign $P5474, 2
    assign $P5474, 0
    push $P5474, "$?PACKAGE"
    push $P5474, "$?CLASS"
    new $P5475, 'QRPA'
    assign $P5475, 2
    assign $P5475, 0
    nqp_get_sc_object $P5476, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 5
    push $P5475, $P5476
    nqp_get_sc_object $P5477, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 5
    push $P5475, $P5477
    new $P5478, 'ResizableIntegerArray'
    assign $P5478, 2
    $P5473."setup_static_lexpad"($P5474, $P5475, $P5478)
    .const "LexInfo" $P5473 = "cuid_242_1431289913.64791"
    new $P5474, 'ResizableStringArray'
    assign $P5474, 2
    assign $P5474, 0
    push $P5474, "$?PACKAGE"
    push $P5474, "$?CLASS"
    new $P5475, 'QRPA'
    assign $P5475, 2
    assign $P5475, 0
    nqp_get_sc_object $P5476, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 153
    push $P5475, $P5476
    nqp_get_sc_object $P5477, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 153
    push $P5475, $P5477
    new $P5478, 'ResizableIntegerArray'
    assign $P5478, 2
    $P5473."setup_static_lexpad"($P5474, $P5475, $P5478)
    .const "LexInfo" $P5473 = "cuid_245_1431289913.64791"
    new $P5474, 'ResizableStringArray'
    assign $P5474, 2
    assign $P5474, 0
    push $P5474, "$?PACKAGE"
    push $P5474, "$?CLASS"
    new $P5475, 'QRPA'
    assign $P5475, 2
    assign $P5475, 0
    nqp_get_sc_object $P5476, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 234
    push $P5475, $P5476
    nqp_get_sc_object $P5477, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 234
    push $P5475, $P5477
    new $P5478, 'ResizableIntegerArray'
    assign $P5478, 2
    $P5473."setup_static_lexpad"($P5474, $P5475, $P5478)
    .const "LexInfo" $P5473 = "cuid_246_1431289913.64791"
    new $P5474, 'ResizableStringArray'
    assign $P5474, 2
    assign $P5474, 0
    push $P5474, "$?PACKAGE"
    push $P5474, "$?CLASS"
    new $P5475, 'QRPA'
    assign $P5475, 2
    assign $P5475, 0
    nqp_get_sc_object $P5476, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    push $P5475, $P5476
    nqp_get_sc_object $P5477, "BF65D384ABE3943EE68C93370559E666CBAA58EC-1431289913.70087", 235
    push $P5475, $P5477
    new $P5478, 'ResizableIntegerArray'
    assign $P5478, 2
    $P5479 = $P5473."setup_static_lexpad"($P5474, $P5475, $P5478)
    .return ($P5479) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_247_1431289913.64791") :anon :lex :outer("cuid_248_1431289913.64791")
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    new $P5001, 'ResizablePMCArray'
    assign $P5001, 236
    assign $P5001, 0
    .const 'Sub' $P5002 = "cuid_1_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_2_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_3_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_4_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_5_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_6_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_7_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_8_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_9_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_10_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_11_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_12_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_13_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_14_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_15_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_16_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_17_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_18_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_19_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_20_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_21_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_22_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_23_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_24_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_25_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_26_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_27_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_28_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_29_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_30_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_31_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_32_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_33_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_34_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_35_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_36_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_37_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_38_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_39_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_40_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_41_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_42_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_43_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_44_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_45_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_46_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_47_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_48_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_49_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_50_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_51_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_52_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_53_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_54_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_55_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_56_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_57_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_58_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_59_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_60_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_61_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_62_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_63_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_64_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_65_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_66_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_67_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_68_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_69_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_70_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_71_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_72_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_73_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_74_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_75_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_76_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_77_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_78_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_79_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_80_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_81_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_82_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_83_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_84_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_85_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_86_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_87_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_88_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_89_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_90_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_91_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_92_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_93_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_94_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_95_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_96_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_97_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_98_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_99_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_100_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_101_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_102_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_103_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_104_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_105_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_106_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_107_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_108_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_109_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_110_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_111_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_112_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_113_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_114_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_115_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_116_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_117_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_118_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_119_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_120_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_121_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_122_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_123_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_124_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_125_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_126_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_127_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_128_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_129_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_130_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_131_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_132_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_133_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_134_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_135_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_136_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_137_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_138_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_139_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_140_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_141_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_142_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_143_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_144_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_145_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_146_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_147_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_148_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_149_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_150_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_151_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_152_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_153_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_154_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_155_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_156_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_157_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_158_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_159_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_160_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_161_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_162_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_163_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_164_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_165_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_166_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_167_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_168_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_169_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_170_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_171_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_172_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_173_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_174_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_175_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_176_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_177_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_178_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_179_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_180_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_181_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_182_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_183_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_184_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_185_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_186_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_187_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_188_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_189_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_190_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_191_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_192_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_193_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_194_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_195_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_196_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_197_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_198_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_199_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_200_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_201_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_202_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_203_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_204_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_205_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_206_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_207_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_208_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_209_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_210_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_211_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_212_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_213_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_214_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_215_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_216_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_217_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_218_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_219_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_220_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_221_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_222_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_223_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_224_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_225_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_226_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_227_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_228_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_229_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_230_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_231_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_232_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_233_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_234_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_235_1431289913.64791" 
    push $P5001, $P5002
    .const 'Sub' $P5002 = "cuid_236_1431289913.64791" 
    push $P5001, $P5002
    .return ($P5001) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_249_1431289913.64791") :load
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .const 'Sub' $P5001 = "cuid_237_1431289913.64791" 
    $P5002 = $P5001()
    .return ($P5002) 
.end
.HLL "nqp"
.namespace []
.sub "" :subid("cuid_250_1431289913.64791") :main
.annotate 'file', "gen/parrot/stage2/NQPP6QRegex.nqp"
    .param pmc ARGS :slurpy 
    .const 'Sub' $P5001 = "cuid_237_1431289913.64791" 
    $P5002 = $P5001(ARGS :flat)
    .return ($P5002) 
.end